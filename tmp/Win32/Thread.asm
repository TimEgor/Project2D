; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\Thread.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__B2D2BA86_ctype@h DB 01H
__79C7FC57_basetsd@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__D545DD43_guiddef@h DB 01H
__D5DDFBF3_winnt@h DB 01H
__439612F0_processthreadsapi@h DB 01H
__5733279A_memoryapi@h DB 01H
__D4435474_winerror@h DB 01H
__B3ED30D4_winbase@h DB 01H
__DB057BA3_winuser@h DB 01H
__A7113148_winioctl@h DB 01H
__B49664B7_stdlib@h DB 01H
__EC5BC72C_propidl@h DB 01H
__6DA674A0_oleauto@h DB 01H
__A118E6DC_stralign@h DB 01H
__8B404B8B_vcruntime_new@h DB 01H
__D3396542_Thread@h DB 01H
__8CF88C42_Thread@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?init@Thread@@QAE_NPAP6AXPAV1@PAX@Z1@Z		; Thread::init
PUBLIC	?release@Thread@@QAEXXZ				; Thread::release
PUBLIC	?join@Thread@@QAEXXZ				; Thread::join
PUBLIC	__JustMyCode_Default
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\Thread.cpp
;	COMDAT ?join@Thread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?join@Thread@@QAEXXZ PROC				; Thread::join, COMDAT
; _this$ = ecx

; 15   : void Thread::join() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8CF88C42_Thread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 16   : 	WaitForSingleObject(handle, INFINITE);

	mov	esi, esp
	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 17   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?join@Thread@@QAEXXZ ENDP				; Thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\Thread.cpp
;	COMDAT ?release@Thread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release@Thread@@QAEXXZ PROC				; Thread::release, COMDAT
; _this$ = ecx

; 10   : void Thread::release() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8CF88C42_Thread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 11   : 	join();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?join@Thread@@QAEXXZ			; Thread::join

; 12   : 	CloseHandle(handle);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 13   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release@Thread@@QAEXXZ ENDP				; Thread::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\Thread.cpp
;	COMDAT ?init@Thread@@QAE_NPAP6AXPAV1@PAX@Z1@Z
_TEXT	SEGMENT
tv75 = -205						; size = 1
_this$ = -8						; size = 4
_function$ = 8						; size = 4
_args$ = 12						; size = 4
?init@Thread@@QAE_NPAP6AXPAV1@PAX@Z1@Z PROC		; Thread::init, COMDAT
; _this$ = ecx

; 5    : bool Thread::init(ThreadFunction* function, void* args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8CF88C42_Thread@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 6    : 	handle = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)(function), args, NULL, (LPDWORD)(&threadID));

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esi, esp
	push	eax
	push	0
	mov	ecx, DWORD PTR _args$[ebp]
	push	ecx
	mov	edx, DWORD PTR _function$[ebp]
	push	edx
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 7    : 	return handle;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@init
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN4@init
$LN3@init:
	mov	BYTE PTR tv75[ebp], 0
$LN4@init:
	mov	al, BYTE PTR tv75[ebp]

; 8    : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?init@Thread@@QAE_NPAP6AXPAV1@PAX@Z1@Z ENDP		; Thread::init
_TEXT	ENDS
END
