; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__8B404B8B_vcruntime_new@h DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__E9466C31_cstdlib DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__4C8DB69C_cstddef DB 01H
__A47FD3F7_limits DB 01H
__77E6CA79_type_traits DB 01H
__20BB4341_malloc@h DB 01H
__604808BE_vcruntime_exception@h DB 01H
__8655F6A9_exception DB 01H
__A751F051_corecrt_memory@h DB 01H
__32E5F013_string@h DB 01H
__DEE7E6EF_xutility DB 01H
__B4DE8A79_xmemory DB 01H
__6C99B47D_algorithm DB 01H
__E7714AE5_tuple DB 01H
__EA01D114_xpolymorphic_allocator@h DB 01H
__2DE1CA0A_ratio DB 01H
__A0B61CF9_time@h DB 01H
__C092D57D_chrono DB 01H
__C00D0CE5_xstring DB 01H
__0F1BCCF4_stdexcept DB 01H
__C1F7FE2D_xcall_once@h DB 01H
__CBA6A69C_xthreads@h DB 01H
__CF4A8F35_atomic DB 01H
__7EAAEC0D_system_error DB 01H
__EC89C42C_vcruntime_typeinfo@h DB 01H
__AE3815F6_typeinfo DB 01H
__18D1DF79_memory DB 01H
__C39CA7CF_thread DB 01H
__3F4CC05A_mutex DB 01H
__8D69CDC2_condition_variable DB 01H
__B2D2BA86_ctype@h DB 01H
__79C7FC57_basetsd@h DB 01H
__D545DD43_guiddef@h DB 01H
__D5DDFBF3_winnt@h DB 01H
__439612F0_processthreadsapi@h DB 01H
__5733279A_memoryapi@h DB 01H
__D4435474_winerror@h DB 01H
__B3ED30D4_winbase@h DB 01H
__DB057BA3_winuser@h DB 01H
__A7113148_winioctl@h DB 01H
__EC5BC72C_propidl@h DB 01H
__6DA674A0_oleauto@h DB 01H
__A118E6DC_stralign@h DB 01H
__D3396542_Thread@h DB 01H
__3C2D1DF9_Resource@h DB 01H
__2A0FE41E_ResourceName@h DB 01H
__AE7C0D16_queue DB 01H
__0D55A76D_ThreadItemQueue@h DB 01H
__45916EAF_ResourceAsyncLoader@h DB 01H
__FAF99A17_ResourceHandler@h DB 01H
__415253A4_cmath DB 01H
__7EACF2A1_xbit_ops@h DB 01H
__2EFD93C2_xhash DB 01H
__E77FCB6C_ResourceCreator@h DB 01H
__810F60AC_FileSystem@h DB 01H
__8DDDD29B_ZipFile@h DB 01H
__CAC6B671_ZipFileSystem@h DB 01H
__F0FA4EC3_ResourceAsyncLoader@cpp DB 01H
__EA3A8D1F_unordered_map DB 01H
__71B70C9A_list DB 01H
__4D4A49D7_deque DB 01H
__DE4BE9BA_utility DB 01H
__29547EA8_xstddef DB 01H
__8C597A7F_xatomic@h DB 01H
__E9D2A317_vector DB 01H
msvcjmc	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	?lock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::lock
PUBLIC	?unlock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::unlock
PUBLIC	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
PUBLIC	?notify_one@condition_variable@std@@QAEXXZ	; std::condition_variable::notify_one
PUBLIC	?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait
PUBLIC	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
PUBLIC	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
PUBLIC	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ	; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
PUBLIC	?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ; std::unique_lock<std::mutex>::mutex
PUBLIC	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z ; std::unique_lock<std::mutex>::__autoclassinit2
PUBLIC	??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
PUBLIC	??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ	; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
PUBLIC	?allocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAIABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size
PUBLIC	?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate
PUBLIC	?allocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocate
PUBLIC	?_Unchecked_begin@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Unchecked_begin
PUBLIC	?max_size@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size
PUBLIC	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
PUBLIC	?front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::front
PUBLIC	?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_front
PUBLIC	?push_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::push_back
PUBLIC	?_Xlen@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Xlen
PUBLIC	?_Growmap@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXI@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Growmap
PUBLIC	?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off
PUBLIC	?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
PUBLIC	?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all
PUBLIC	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
PUBLIC	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
PUBLIC	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
PUBLIC	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
PUBLIC	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
PUBLIC	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
PUBLIC	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
PUBLIC	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
PUBLIC	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
PUBLIC	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QBEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first
PUBLIC	?empty@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBE_NXZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::empty
PUBLIC	?front@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::front
PUBLIC	?push@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::push
PUBLIC	?pop@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXXZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::pop
PUBLIC	?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::push
PUBLIC	?pop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXXZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::pop
PUBLIC	?front@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::front
PUBLIC	?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::waitFrontAndPop
PUBLIC	?loadingFunction@ResourceAsyncLoader@@CAXPAX@Z	; ResourceAsyncLoader::loadingFunction
PUBLIC	?init@ResourceAsyncLoader@@QAE_NXZ		; ResourceAsyncLoader::init
PUBLIC	?release@ResourceAsyncLoader@@QAEXXZ		; ResourceAsyncLoader::release
PUBLIC	?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z ; ResourceAsyncLoader::loadResource
PUBLIC	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
PUBLIC	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$_Get_size_of_n@$03@std@@YAII@Z		; std::_Get_size_of_n<4>
PUBLIC	??R<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QBE_NXZ ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::operator()
PUBLIC	??0<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QAE@QAV?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@@Z ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::<lambda_26b63b781a79a70f1f59e79c5dc071f8>
PUBLIC	??$wait@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@1@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@Z ; std::condition_variable::wait<<lambda_26b63b781a79a70f1f59e79c5dc071f8> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Emplace_back_internal@ABUResourceLoadingInformation@ResourceAsyncLoader@@@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Emplace_back_internal<ResourceAsyncLoader::ResourceLoadingInformation const &>
PUBLIC	??$forward@ABUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAABUResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@Z ; std::forward<ResourceAsyncLoader::ResourceLoadingInformation const &>
PUBLIC	??$construct@UResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::construct<ResourceAsyncLoader::ResourceLoadingInformation,ResourceAsyncLoader::ResourceLoadingInformation const &>
PUBLIC	??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<ResourceAsyncLoader::ResourceLoadingInformation * *,unsigned int>
PUBLIC	??$_Destroy_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@@Z ; std::_Destroy_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
PUBLIC	??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
PUBLIC	??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEABUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*
PUBLIC	??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*
PUBLIC	??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
PUBLIC	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@0@AAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
PUBLIC	??$_Adl_verify_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Adl_verify_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
PUBLIC	??$_Get_unwrapped@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Get_unwrapped<ResourceAsyncLoader::ResourceLoadingInformation * * const &>
PUBLIC	??$_Idl_distance@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Idl_distance<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
PUBLIC	??$_Get_unwrapped_n@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@std@@YA@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@Z ; std::_Get_unwrapped_n<ResourceAsyncLoader::ResourceLoadingInformation * * &,int>
PUBLIC	??$_Copy_memmove@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@00@Z ; std::_Copy_memmove<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
PUBLIC	??$_Seek_wrapped@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@AAPAPAU12@@std@@YAXAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Seek_wrapped<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * * &>
PUBLIC	??$_Zero_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0@Z ; std::_Zero_range<ResourceAsyncLoader::ResourceLoadingInformation * *>
PUBLIC	??$_Verify_range@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXQBQAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Verify_range<ResourceAsyncLoader::ResourceLoadingInformation *>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@	; `string'
PUBLIC	??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@ ; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_1BDI@PJOGMHFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@ ; `string'
PUBLIC	??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@ ; `string'
PUBLIC	??_C@_1BDA@IAIEIJM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@ ; `string'
PUBLIC	??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	__Mtx_lock:PROC
EXTRN	__Mtx_unlock:PROC
EXTRN	__Cnd_wait:PROC
EXTRN	__Cnd_signal:PROC
EXTRN	?_Throw_C_error@std@@YAXH@Z:PROC		; std::_Throw_C_error
EXTRN	?init@Thread@@QAE_NPAP6AXPAV1@PAX@Z1@Z:PROC	; Thread::init
EXTRN	?release@Thread@@QAEXXZ:PROC			; Thread::release
EXTRN	??1ResourceReference@@QAE@XZ:PROC		; ResourceReference::~ResourceReference
EXTRN	?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z:PROC ; ResourceManager::loadNewResourceFromArchive
EXTRN	?get@ResourceManager@@SAAAV1@XZ:PROC		; ResourceManager::get
EXTRN	?getResourceName@ZipFileSystem@@QAE?AVResourceName@@I@Z:PROC ; ZipFileSystem::getResourceName
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'x', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\xutility', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ DB '"'
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'd', 00H, 'e'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BDA@IAIEIJM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@
CONST	SEGMENT
??_C@_1BDA@IAIEIJM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'd', 00H, 'e', 00H
	DB	'q', 00H, 'u', 00H, 'e', 00H, '<', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'A'
	DB	00H, 's', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 's', 00H, 'y'
	DB	00H, 'n', 00H, 'c', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'R', 00H, 'e', 00H, 's'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@
CONST	SEGMENT
??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@ DB 'front() c'
	DB	'alled on empty deque', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BDI@PJOGMHFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@
CONST	SEGMENT
??_C@_1BDI@PJOGMHFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'd', 00H, 'e', 00H
	DB	'q', 00H, 'u', 00H, 'e', 00H, '<', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'A'
	DB	00H, 's', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 's', 00H, 'y'
	DB	00H, 'n', 00H, 'c', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'R', 00H, 'e', 00H, 's'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'o', 00H, 'p', 00H, '_', 00H
	DB	'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
CONST	SEGMENT
??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@ DB '"'
	DB	00H, 'd', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'p', 00H, 'o', 00H, 'p', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'd', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\deque', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
CONST	SEGMENT
??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@ DB 'deque empty before pop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'x', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r'
	DB	00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\xmemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA DD 084H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z$0
__ehfuncinfo$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z$0
__ehfuncinfo$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Verify_range@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXQBQAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXQBQAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z PROC ; std::_Verify_range<ResourceAsyncLoader::ResourceLoadingInformation *>, COMDAT

; 1241 : constexpr void _Verify_range(const _Ty* const _First, const _Ty* const _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4
$LN4@Verify_ran:

; 1242 :     // special case range verification for pointers
; 1243 :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	mov	esi, esp
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran

; 1244 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Verify_range@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXQBQAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ENDP ; std::_Verify_range<ResourceAsyncLoader::ResourceLoadingInformation *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Zero_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0@Z
_TEXT	SEGMENT
__Last_ch$ = -20					; size = 4
__First_ch$ = -8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0@Z PROC ; std::_Zero_range<ResourceAsyncLoader::ResourceLoadingInformation * *>, COMDAT

; 1852 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1853 :     char* const _First_ch = reinterpret_cast<char*>(_First);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 1854 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], eax

; 1855 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __First_ch$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 1856 :     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]

; 1857 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Zero_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0@Z ENDP ; std::_Zero_range<ResourceAsyncLoader::ResourceLoadingInformation * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Seek_wrapped@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@AAPAPAU12@@std@@YAXAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__UIt$ = 12						; size = 4
??$_Seek_wrapped@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@AAPAPAU12@@std@@YAXAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z PROC ; std::_Seek_wrapped<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * * &>, COMDAT

; 1488 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1489 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1490 :         _It._Seek_to(static_cast<_UIter&&>(_UIt));
; 1491 :     } else {
; 1492 :         _It = static_cast<_UIter&&>(_UIt);

	mov	eax, DWORD PTR __It$[ebp]
	mov	ecx, DWORD PTR __UIt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1493 :     }
; 1494 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Seek_wrapped@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@AAPAPAU12@@std@@YAXAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ENDP ; std::_Seek_wrapped<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@00@Z
_TEXT	SEGMENT
__Count$ = -44						; size = 4
__Dest_ch$ = -32					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@00@Z PROC ; std::_Copy_memmove<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], eax

; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], eax

; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First_ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest_ch$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 4367 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@std@@YA@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__Off$ = 12						; size = 4
??$_Get_unwrapped_n@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@std@@YA@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@Z PROC ; std::_Get_unwrapped_n<ResourceAsyncLoader::ResourceLoadingInformation * * &,int>, COMDAT

; 1406 : _NODISCARD constexpr decltype(auto) _Get_unwrapped_n(_Iter&& _It, const _Diff _Off) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1407 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1408 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1409 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1410 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1411 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1412 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1413 :         const auto _COff = static_cast<_CDiff>(_Off);
; 1414 : 
; 1415 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)
; 1416 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1417 :             "integer overflow");
; 1418 :         (void) _COff;
; 1419 : 
; 1420 :         _It._Verify_offset(static_cast<_IDiff>(_Off));
; 1421 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1422 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1423 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1424 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1425 :     } else {
; 1426 :         // pass through iterator that doesn't participate in checking
; 1427 :         return static_cast<_Iter&&>(_It);
; 1428 :     }
; 1429 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped_n@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@std@@YA@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@Z ENDP ; std::_Get_unwrapped_n<ResourceAsyncLoader::ResourceLoadingInformation * * &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Idl_distance@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Idl_distance@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z PROC ; std::_Idl_distance<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>, COMDAT

; 1554 : _NODISCARD constexpr auto _Idl_distance(const _Iter& _First, const _Iter& _Last) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1555 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1556 :     if constexpr (_Is_random_iter_v<_Iter>) {
; 1557 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1558 :     } else {
; 1559 :         return _Distance_unknown{};
; 1560 :     }
; 1561 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Idl_distance@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ENDP ; std::_Idl_distance<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::_Get_unwrapped<ResourceAsyncLoader::ResourceLoadingInformation * * const &>, COMDAT

; 1300 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1301 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1302 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1303 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1304 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1305 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1306 :     } else {
; 1307 :         return static_cast<_Iter&&>(_It);
; 1308 :     }
; 1309 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::_Get_unwrapped<ResourceAsyncLoader::ResourceLoadingInformation * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Adl_verify_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z PROC ; std::_Adl_verify_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>, COMDAT

; 1264 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1265 :     // check that [_First, _Last) forms an iterator range
; 1266 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1267 :         _Verify_range(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXQBQAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Verify_range<ResourceAsyncLoader::ResourceLoadingInformation *>
	add	esp, 8

; 1268 :     }
; 1269 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adl_verify_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ENDP ; std::_Adl_verify_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*, COMDAT
; _this$ = ecx

; 170  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 171  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEABUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*

; 172  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEABUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
tv70 = -232						; size = 4
__Off$ = -32						; size = 4
__Block$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEABUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*, COMDAT
; _this$ = ecx

; 54   :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 55   :         _Size_type _Block = _Mycont->_Getblock(_Myoff);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 56   :         _Size_type _Off   = _Myoff % _DEQUESIZ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR __Off$[ebp], edx

; 57   :         return _Mycont->_Map[_Block][_Off];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEABUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >, COMDAT
; _this$ = ecx

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pdeque$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@@Z PROC ; std::_Destroy_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>, COMDAT

; 974  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_range(_NoThrowFwdIt _First, const _NoThrowSentinel _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 975  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 976  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 977  :         for (; _First != _Last; ++_First) {
; 978  :             _Destroy_in_place(*_First);
; 979  :         }
; 980  :     }
; 981  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@@Z ENDP ; std::_Destroy_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<ResourceAsyncLoader::ResourceLoadingInformation * *,unsigned int>, COMDAT

; 1912 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1913 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1914 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1915 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1916 :         return _Zero_range(_UFirst, _UFirst + _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __UFirst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	call	??$_Zero_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0@Z ; std::_Zero_range<ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 8

; 1917 :     } else {
; 1918 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1919 :         for (; 0 < _Count; --_Count) {
; 1920 :             _Backout._Emplace_back();
; 1921 :         }
; 1922 : 
; 1923 :         return _Backout._Release();
; 1924 :     }
; 1925 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<ResourceAsyncLoader::ResourceLoadingInformation * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z
_TEXT	SEGMENT
__UDest$ = -36						; size = 4
__ULast$ = -24						; size = 4
__UFirst$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z PROC ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>, COMDAT

; 1629 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1630 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1631 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Adl_verify_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 8

; 1632 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Get_unwrapped<ResourceAsyncLoader::ResourceLoadingInformation * * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1633 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Get_unwrapped<ResourceAsyncLoader::ResourceLoadingInformation * * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1634 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	eax, DWORD PTR __ULast$[ebp]
	push	eax
	lea	ecx, DWORD PTR __UFirst$[ebp]
	push	ecx
	call	??$_Idl_distance@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YA@ABQAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Idl_distance<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 8
	push	eax
	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Get_unwrapped_n@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@std@@YA@AAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@H@Z ; std::_Get_unwrapped_n<ResourceAsyncLoader::ResourceLoadingInformation * * &,int>
	add	esp, 8
	mov	DWORD PTR __UDest$[ebp], eax

; 1635 :     if constexpr (_Ptr_copy_cat<decltype(_UFirst), decltype(_UDest)>::_Really_trivial) {
; 1636 :         _UDest = _Copy_memmove(_UFirst, _ULast, _UDest);

	mov	eax, DWORD PTR __UDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __ULast$[ebp]
	push	ecx
	mov	edx, DWORD PTR __UFirst$[ebp]
	push	edx
	call	??$_Copy_memmove@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@00@Z ; std::_Copy_memmove<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __UDest$[ebp], eax

; 1637 :     } else {
; 1638 :         _Uninitialized_backout<decltype(_UDest)> _Backout{_UDest};
; 1639 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1640 :             _Backout._Emplace_back(*_UFirst);
; 1641 :         }
; 1642 : 
; 1643 :         _UDest = _Backout._Release();
; 1644 :     }
; 1645 : 
; 1646 :     _Seek_wrapped(_Dest, _UDest);

	lea	eax, DWORD PTR __UDest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Seek_wrapped@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@AAPAPAU12@@std@@YAXAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@0@Z ; std::_Seek_wrapped<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * * &>
	add	esp, 8

; 1647 :     return _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]

; 1648 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@uninitiali:
	DD	3
	DD	$LN6@uninitiali
$LN6@uninitiali:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@uninitiali
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@uninitiali
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN5@uninitiali
$LN5@uninitiali:
	DB	95					; 0000005fH
	DB	85					; 00000055H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN4@uninitiali:
	DB	95					; 0000005fH
	DB	85					; 00000055H
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN3@uninitiali:
	DB	95					; 0000005fH
	DB	85					; 00000055H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z ENDP ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$construct@UResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@ABU34@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@ABU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::construct<ResourceAsyncLoader::ResourceLoadingInformation,ResourceAsyncLoader::ResourceLoadingInformation const &>, COMDAT

; 700  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAABUResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@Z ; std::forward<ResourceAsyncLoader::ResourceLoadingInformation const &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 702  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@UResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@ABU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::construct<ResourceAsyncLoader::ResourceLoadingInformation,ResourceAsyncLoader::ResourceLoadingInformation const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAABUResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAABUResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@Z PROC ; std::forward<ResourceAsyncLoader::ResourceLoadingInformation const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAABUResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@Z ENDP ; std::forward<ResourceAsyncLoader::ResourceLoadingInformation const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??$_Emplace_back_internal@ABUResourceLoadingInformation@ResourceAsyncLoader@@@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
tv170 = -240						; size = 4
tv88 = -240						; size = 4
tv172 = -236						; size = 4
tv152 = -236						; size = 4
tv86 = -236						; size = 4
tv177 = -232						; size = 4
tv174 = -232						; size = 4
tv149 = -232						; size = 4
tv90 = -232						; size = 4
__Block$ = -32						; size = 4
__Newoff$ = -20						; size = 4
_this$ = -8						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back_internal@ABUResourceLoadingInformation@ResourceAsyncLoader@@@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Emplace_back_internal<ResourceAsyncLoader::ResourceLoadingInformation const &>, COMDAT
; _this$ = ecx

; 1114 :     void _Emplace_back_internal(_Tys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1115 :         _PUSH_BACK_BEGIN;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	eax, ecx
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN2@Emplace_ba
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	eax, DWORD PTR [eax]
	add	eax, 2
	shr	eax, 1
	cmp	DWORD PTR [esi], eax
	ja	SHORT $LN2@Emplace_ba
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Growmap@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXI@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Growmap
$LN2@Emplace_ba:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [eax+eax-1]
	mov	DWORD PTR tv90[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR tv88[ebp]
	and	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Newoff$[ebp], ecx
	mov	eax, DWORD PTR __Newoff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Block$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN3@Emplace_ba
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	mov	DWORD PTR tv149[ebp], eax
	push	2
	mov	ecx, DWORD PTR tv149[ebp]
	call	?allocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocate
	mov	DWORD PTR tv152[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Block$[ebp]
	mov	edx, DWORD PTR tv152[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
$LN3@Emplace_ba:

; 1116 :         _Alty_traits::construct(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _DEQUESIZ), _STD forward<_Tys>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@ABUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAABUResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@Z ; std::forward<ResourceAsyncLoader::ResourceLoadingInformation const &>
	add	esp, 4
	mov	DWORD PTR tv174[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	call	??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
	add	esp, 4
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	mov	DWORD PTR tv170[ebp], eax
	mov	eax, DWORD PTR tv174[ebp]
	push	eax
	mov	ecx, DWORD PTR tv172[ebp]
	push	ecx
	mov	edx, DWORD PTR tv170[ebp]
	push	edx
	call	??$construct@UResourceLoadingInformation@ResourceAsyncLoader@@ABU12@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::construct<ResourceAsyncLoader::ResourceLoadingInformation,ResourceAsyncLoader::ResourceLoadingInformation const &>
	add	esp, 12					; 0000000cH

; 1117 :         _PUSH_BACK_END;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	DWORD PTR tv177[ebp], eax
	mov	eax, DWORD PTR tv177[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv177[ebp]
	mov	DWORD PTR [edx], ecx

; 1118 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back_internal@ABUResourceLoadingInformation@ResourceAsyncLoader@@@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Emplace_back_internal<ResourceAsyncLoader::ResourceLoadingInformation const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Ptr_container$ = -20					; size = 4
__Block_size$ = -8					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax

; 116  :     if (_Block_size <= _Bytes) {

	mov	eax, DWORD PTR __Block_size$[ebp]
	cmp	eax, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m

; 117  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	eax, DWORD PTR __Block_size$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	mov	esi, esp
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	eax, eax
	jne	SHORT $LN4@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH

; 127  : #endif // _DEBUG
; 128  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??$wait@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@1@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Lck$ = 8						; size = 4
__Pred$ = 12						; size = 4
??$wait@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@1@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@Z PROC ; std::condition_variable::wait<<lambda_26b63b781a79a70f1f59e79c5dc071f8> >, COMDAT
; _this$ = ecx

; 603  :     void wait(unique_lock<mutex>& _Lck, _Predicate _Pred) { // wait for signal and test predicate

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4
$LN2@wait:

; 604  :         while (!_Pred()) {

	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QBE_NXZ ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@wait

; 605  :             wait(_Lck);

	mov	eax, DWORD PTR __Lck$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ; std::condition_variable::wait

; 606  :         }

	jmp	SHORT $LN2@wait
$LN1@wait:

; 607  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$wait@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@1@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@Z ENDP ; std::condition_variable::wait<<lambda_26b63b781a79a70f1f59e79c5dc071f8> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\ThreadItemQueue.h
;	COMDAT ??0<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QAE@QAV?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__This$ = 8						; size = 4
??0<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QAE@QAV?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@@Z PROC ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::<lambda_26b63b781a79a70f1f59e79c5dc071f8>, COMDAT
; _this$ = ecx

; 82   : 	condVar.wait(locker, [this]() { return !queue.empty(); });

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0D55A76D_ThreadItemQueue@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __This$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QAE@QAV?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@@Z ENDP ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::<lambda_26b63b781a79a70f1f59e79c5dc071f8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\ThreadItemQueue.h
;	COMDAT ??R<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
??R<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QBE_NXZ PROC ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::operator(), COMDAT
; _this$ = ecx

; 82   : 	condVar.wait(locker, [this]() { return !queue.empty(); });

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0D55A76D_ThreadItemQueue@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?empty@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBE_NXZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv70[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??R<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QBE_NXZ ENDP ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$03@std@@YAII@Z PROC			; std::_Get_size_of_n<4>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 1073741823 ; 3fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
$LN3@Get_size_o:

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$03@std@@YAII@Z ENDP			; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT

; 705  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 706  :         _Ptr->~_Uty();
; 707  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z PROC ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 289  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ENDP ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 222  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate

; 206  :         return _Traits::_Allocate(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 207  :     }
; 208  : 
; 209  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 210  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT

; 66   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 67   :     // return smaller of _Left and _Right
; 68   :     return _Right < _Left ? _Right : _Left;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z PROC ; std::addressof<std::mutex>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ENDP ; std::addressof<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.cpp
;	COMDAT ?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z
_TEXT	SEGMENT
tv68 = -228						; size = 4
_information$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_resourceID$ = 8					; size = 4
_handler$ = 12						; size = 4
?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z PROC ; ResourceAsyncLoader::loadResource, COMDAT
; _this$ = ecx

; 38   : void ResourceAsyncLoader::loadResource(ResourceID resourceID, ResourceHandler& handler) {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F0FA4EC3_ResourceAsyncLoader@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 39   : 	ResourceLoadingInformation information{ &handler, resourceID };

	mov	eax, DWORD PTR _handler$[ebp]
	mov	DWORD PTR _information$[ebp], eax
	mov	eax, DWORD PTR _resourceID$[ebp]
	mov	DWORD PTR _information$[ebp+4], eax

; 40   : 	loadingQueue.push(information);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	lea	ecx, DWORD PTR _information$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv68[ebp]
	call	?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::push

; 41   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@loadResour
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@loadResour:
	DD	1
	DD	$LN4@loadResour
$LN4@loadResour:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN3@loadResour
$LN3@loadResour:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z ENDP ; ResourceAsyncLoader::loadResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.cpp
;	COMDAT ?release@ResourceAsyncLoader@@QAEXXZ
_TEXT	SEGMENT
tv69 = -228						; size = 4
_emptyInfo$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?release@ResourceAsyncLoader@@QAEXXZ PROC		; ResourceAsyncLoader::release, COMDAT
; _this$ = ecx

; 29   : void ResourceAsyncLoader::release() {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F0FA4EC3_ResourceAsyncLoader@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 30   : 	isRunning = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0

; 31   : 
; 32   : 	ResourceLoadingInformation emptyInfo{ nullptr, 0 };

	mov	DWORD PTR _emptyInfo$[ebp], 0
	mov	DWORD PTR _emptyInfo$[ebp+4], 0

; 33   : 	loadingQueue.push(emptyInfo);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	lea	ecx, DWORD PTR _emptyInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::push

; 34   : 
; 35   : 	loadingThread.release();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?release@Thread@@QAEXXZ			; Thread::release

; 36   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@release
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@release:
	DD	1
	DD	$LN4@release
$LN4@release:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN3@release
$LN3@release:
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?release@ResourceAsyncLoader@@QAEXXZ ENDP		; ResourceAsyncLoader::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.cpp
;	COMDAT ?init@ResourceAsyncLoader@@QAE_NXZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
?init@ResourceAsyncLoader@@QAE_NXZ PROC			; ResourceAsyncLoader::init, COMDAT
; _this$ = ecx

; 22   : bool ResourceAsyncLoader::init() {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F0FA4EC3_ResourceAsyncLoader@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 23   : 	isRunning = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 1

; 24   : 	loadingThread.init((ThreadFunction*)loadingFunction, this);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	push	OFFSET ?loadingFunction@ResourceAsyncLoader@@CAXPAX@Z ; ResourceAsyncLoader::loadingFunction
	mov	ecx, DWORD PTR tv71[ebp]
	call	?init@Thread@@QAE_NPAP6AXPAV1@PAX@Z1@Z	; Thread::init

; 25   : 
; 26   :     return true;

	mov	al, 1

; 27   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@ResourceAsyncLoader@@QAE_NXZ ENDP			; ResourceAsyncLoader::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.cpp
;	COMDAT ?loadingFunction@ResourceAsyncLoader@@CAXPAX@Z
_TEXT	SEGMENT
tv80 = -516						; size = 4
tv72 = -516						; size = 4
$T1 = -508						; size = 4
_resourceName$2 = -304					; size = 256
_loadingInfo$ = -40					; size = 8
_resourceManager$ = -24					; size = 4
_loader$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_args$ = 8						; size = 4
?loadingFunction@ResourceAsyncLoader@@CAXPAX@Z PROC	; ResourceAsyncLoader::loadingFunction, COMDAT

; 7    : void ResourceAsyncLoader::loadingFunction(void* args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 516				; 00000204H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 129				; 00000081H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __F0FA4EC3_ResourceAsyncLoader@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 8    :     ResourceAsyncLoader* loader = (ResourceAsyncLoader*)(args);

	mov	eax, DWORD PTR _args$[ebp]
	mov	DWORD PTR _loader$[ebp], eax

; 9    : 	ResourceManager& resourceManager = ResourceManager::get();

	call	?get@ResourceManager@@SAAAV1@XZ		; ResourceManager::get
	mov	DWORD PTR _resourceManager$[ebp], eax
$LN2@loadingFun:

; 10   : 
; 11   : 	ResourceLoadingInformation loadingInfo;
; 12   : 	while (loader->isRunning) {

	mov	eax, DWORD PTR _loader$[ebp]
	movzx	ecx, BYTE PTR [eax+116]
	test	ecx, ecx
	je	SHORT $LN1@loadingFun

; 13   : 		loader->loadingQueue.waitFrontAndPop(&loadingInfo);

	mov	eax, DWORD PTR _loader$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	lea	ecx, DWORD PTR _loadingInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv72[ebp]
	call	?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::waitFrontAndPop

; 14   : 
; 15   : 		if (loadingInfo.resourceHandler) {

	cmp	DWORD PTR _loadingInfo$[ebp], 0
	je	SHORT $LN4@loadingFun

; 16   : 			ResourceName resourceName = resourceManager.zipFileSystem->getResourceName(loadingInfo.resourceID);

	mov	eax, DWORD PTR _resourceManager$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR _loadingInfo$[ebp+4]
	push	edx
	lea	eax, DWORD PTR _resourceName$2[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	call	?getResourceName@ZipFileSystem@@QAE?AVResourceName@@I@Z ; ZipFileSystem::getResourceName

; 17   : 			resourceManager.loadNewResourceFromArchive(*loadingInfo.resourceHandler, resourceName, loadingInfo.resourceID);

	mov	eax, DWORD PTR _loadingInfo$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _resourceName$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _loadingInfo$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _resourceManager$[ebp]
	call	?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z ; ResourceManager::loadNewResourceFromArchive
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1ResourceReference@@QAE@XZ		; ResourceReference::~ResourceReference
$LN4@loadingFun:

; 18   : 		}
; 19   : 	}

	jmp	SHORT $LN2@loadingFun
$LN1@loadingFun:

; 20   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@loadingFun
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@loadingFun:
	DD	2
	DD	$LN9@loadingFun
$LN9@loadingFun:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN7@loadingFun
	DD	-304					; fffffed0H
	DD	256					; 00000100H
	DD	$LN8@loadingFun
$LN8@loadingFun:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN7@loadingFun:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?loadingFunction@ResourceAsyncLoader@@CAXPAX@Z ENDP	; ResourceAsyncLoader::loadingFunction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\ThreadItemQueue.h
;	COMDAT ?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
tv79 = -264						; size = 4
$T2 = -256						; size = 4
$T3 = -244						; size = 4
_locker$ = -40						; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_val$ = 8						; size = 4
?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::waitFrontAndPop, COMDAT
; _this$ = ecx

; 79   : inline void ThreadItemQueue<T>::waitFrontAndPop(T* val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0D55A76D_ThreadItemQueue@h
	call	@__CheckForDebuggerJustMyCode@4

; 80   : 	std::unique_lock<std::mutex> locker(mutex);

	push	8
	lea	ecx, DWORD PTR _locker$[ebp]
	call	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 81   : 
; 82   : 	condVar.wait(locker, [this]() { return !queue.empty(); });

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@QAE@QAV?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@@Z ; <lambda_26b63b781a79a70f1f59e79c5dc071f8>::<lambda_26b63b781a79a70f1f59e79c5dc071f8>
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR _locker$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv79[ebp]
	call	??$wait@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@1@V<lambda_26b63b781a79a70f1f59e79c5dc071f8>@@@Z ; std::condition_variable::wait<<lambda_26b63b781a79a70f1f59e79c5dc071f8> >

; 83   : 
; 84   : 	new (val) T(front());

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?front@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::front
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 85   : 	pop();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXXZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::pop

; 86   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@waitFrontA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@waitFrontA:
	DD	1
	DD	$LN6@waitFrontA
$LN6@waitFrontA:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN4@waitFrontA
$LN4@waitFrontA:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z$0:
	lea	ecx, DWORD PTR _locker$[ebp]
	jmp	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?waitFrontAndPop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::waitFrontAndPop
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\ThreadItemQueue.h
;	COMDAT ?front@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
$T1 = -228						; size = 4
_locker$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?front@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::front, COMDAT
; _this$ = ecx

; 52   : inline T& ThreadItemQueue<T>::front() {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0D55A76D_ThreadItemQueue@h
	call	@__CheckForDebuggerJustMyCode@4

; 53   : 	std::lock_guard<std::mutex> locker(mutex);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>

; 54   : 	return queue.front();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?front@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::front
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
	mov	eax, DWORD PTR $T1[ebp]

; 55   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@front
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@front:
	DD	1
	DD	$LN5@front
$LN5@front:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@front
$LN4@front:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?front@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\ThreadItemQueue.h
;	COMDAT ?pop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXXZ
_TEXT	SEGMENT
_locker$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?pop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXXZ PROC ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::pop, COMDAT
; _this$ = ecx

; 46   : inline void ThreadItemQueue<T>::pop() {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0D55A76D_ThreadItemQueue@h
	call	@__CheckForDebuggerJustMyCode@4

; 47   : 	std::lock_guard<std::mutex> locker(mutex);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>

; 48   : 	queue.pop();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXXZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::pop

; 49   : }

	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@pop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@pop:
	DD	1
	DD	$LN5@pop
$LN5@pop:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@pop
$LN4@pop:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?pop@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXXZ ENDP ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\ThreadItemQueue.h
;	COMDAT ?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
tv73 = -236						; size = 4
_locker$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_val$ = 8						; size = 4
?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::push, COMDAT
; _this$ = ecx

; 32   : inline void ThreadItemQueue<T>::push(const T& val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0D55A76D_ThreadItemQueue@h
	call	@__CheckForDebuggerJustMyCode@4

; 33   : 	std::lock_guard<std::mutex> locker(mutex);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 34   : 	queue.push(val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv73[ebp]
	call	?push@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::push

; 35   : 	condVar.notify_one();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?notify_one@condition_variable@std@@QAEXXZ ; std::condition_variable::notify_one

; 36   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@push
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@push:
	DD	1
	DD	$LN6@push
$LN6@push:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN4@push
$LN4@push:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z$0:
	lea	ecx, DWORD PTR _locker$[ebp]
	jmp	??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push@?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::push
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\queue
;	COMDAT ?pop@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?pop@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXXZ PROC ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::pop, COMDAT
; _this$ = ecx

; 136  :     void pop() noexcept(noexcept(c.pop_front())) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AE7C0D16_queue
	call	@__CheckForDebuggerJustMyCode@4

; 137  :         c.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_front

; 138  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pop@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXXZ ENDP ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\queue
;	COMDAT ?push@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::push, COMDAT
; _this$ = ecx

; 119  :     void push(const value_type& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AE7C0D16_queue
	call	@__CheckForDebuggerJustMyCode@4

; 120  :         c.push_back(_Val);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv68[ebp]
	call	?push_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::push_back

; 121  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\queue
;	COMDAT ?front@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?front@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::front, COMDAT
; _this$ = ecx

; 103  :     _NODISCARD reference front() noexcept(noexcept(c.front())) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AE7C0D16_queue
	call	@__CheckForDebuggerJustMyCode@4

; 104  :         return c.front();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::front

; 105  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\queue
;	COMDAT ?empty@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBE_NXZ PROC ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::empty, COMDAT
; _this$ = ecx

; 95   :     _NODISCARD bool empty() const noexcept(noexcept(c.empty())) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AE7C0D16_queue
	call	@__CheckForDebuggerJustMyCode@4

; 96   :         return c.empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty

; 97   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBE_NXZ ENDP ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QBEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QBEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QBEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock, COMDAT
; _this$ = ecx

; 546  :     size_type _Getblock(size_type _Off) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 547  :         // NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

	mov	eax, DWORD PTR __Off$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 1
	and	eax, edx

; 549  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize, COMDAT
; _this$ = ecx

; 1565 :     const size_type& _Mysize() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1566 :         return _Get_data()._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 16					; 00000010H

; 1567 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize, COMDAT
; _this$ = ecx

; 1561 :     size_type& _Mysize() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1562 :         return _Get_data()._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 16					; 00000010H

; 1563 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff, COMDAT
; _this$ = ecx

; 1557 :     const size_type& _Myoff() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1558 :         return _Get_data()._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 12					; 0000000cH

; 1559 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff, COMDAT
; _this$ = ecx

; 1553 :     size_type& _Myoff() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1554 :         return _Get_data()._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 12					; 0000000cH

; 1555 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize, COMDAT
; _this$ = ecx

; 1545 :     size_type& _Mapsize() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1546 :         return _Get_data()._Mapsize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 8

; 1547 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map, COMDAT
; _this$ = ecx

; 1537 :     _Mapptr& _Map() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1538 :         return _Get_data()._Map;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 4

; 1539 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data, COMDAT
; _this$ = ecx

; 1533 :     const _Scary_val& _Get_data() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1534 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 1535 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data, COMDAT
; _this$ = ecx

; 1529 :     _Scary_val& _Get_data() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1530 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 1531 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal, COMDAT
; _this$ = ecx

; 1525 :     const _Alty& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1526 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QBEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first

; 1527 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal, COMDAT
; _this$ = ecx

; 1521 :     _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1522 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first

; 1523 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all, COMDAT
; _this$ = ecx

; 1517 :     void _Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1518 :         _Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1519 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock, COMDAT
; _this$ = ecx

; 1513 :     size_type _Getblock(size_type _Off) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1514 :         return _Get_data()._Getblock(_Off);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock

; 1515 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z
_TEXT	SEGMENT
tv71 = -260						; size = 4
__Pnextoff$1 = -60					; size = 4
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
__Offhigh$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Offlo$ = 8						; size = 4
?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off, COMDAT
; _this$ = ecx

; 1493 :     void _Orphan_off(size_type _Offlo) const noexcept { // orphan iterators with specified offset(s)

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1494 :         size_type _Offhigh = _Myoff() + _Mysize() <= _Offlo + 1 ? static_cast<size_type>(-1) : _Offlo;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Offlo$[ebp]
	add	edx, 1
	cmp	ecx, edx
	ja	SHORT $LN9@Orphan_off
	mov	DWORD PTR tv71[ebp], -1
	jmp	SHORT $LN10@Orphan_off
$LN9@Orphan_off:
	mov	eax, DWORD PTR __Offlo$[ebp]
	mov	DWORD PTR tv71[ebp], eax
$LN10@Orphan_off:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Offhigh$[ebp], ecx

; 1495 :         if (_Offlo == _Myoff()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	ecx, DWORD PTR __Offlo$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN4@Orphan_off

; 1496 :             _Offlo = 0;

	mov	DWORD PTR __Offlo$[ebp], 0
$LN4@Orphan_off:

; 1497 :         }
; 1498 : 
; 1499 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1500 :         _Iterator_base12** _Pnext = &_Get_data()._Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	eax, DWORD PTR [eax]
	add	eax, 4
	mov	DWORD PTR __Pnext$[ebp], eax
$LN2@Orphan_off:

; 1501 :         while (*_Pnext) {

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_off

; 1502 :             const auto _Pnextoff = static_cast<const_iterator&>(**_Pnext)._Myoff;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextoff$1[ebp], edx

; 1503 :             if (_Pnextoff < _Offlo || _Offhigh < _Pnextoff) {

	mov	eax, DWORD PTR __Pnextoff$1[ebp]
	cmp	eax, DWORD PTR __Offlo$[ebp]
	jb	SHORT $LN7@Orphan_off
	mov	eax, DWORD PTR __Offhigh$[ebp]
	cmp	eax, DWORD PTR __Pnextoff$1[ebp]
	jae	SHORT $LN5@Orphan_off
$LN7@Orphan_off:

; 1504 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 1505 :             } else { // orphan the iterator

	jmp	SHORT $LN6@Orphan_off
$LN5@Orphan_off:

; 1506 :                 (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1507 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN6@Orphan_off:

; 1508 :             }
; 1509 :         }

	jmp	SHORT $LN2@Orphan_off
$LN3@Orphan_off:

; 1510 :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_off
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@Orphan_off:
	DD	1
	DD	$LN12@Orphan_off
$LN12@Orphan_off:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@Orphan_off
$LN11@Orphan_off:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Growmap@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv231 = -276						; size = 4
tv217 = -276						; size = 4
tv199 = -276						; size = 4
tv184 = -276						; size = 4
tv165 = -276						; size = 4
tv150 = -276						; size = 4
tv238 = -272						; size = 4
tv233 = -272						; size = 4
tv219 = -272						; size = 4
tv201 = -272						; size = 4
tv186 = -272						; size = 4
tv167 = -272						; size = 4
tv152 = -272						; size = 4
tv73 = -272						; size = 4
__Myptr$ = -72						; size = 4
__Newmap$ = -60						; size = 4
__Myboff$ = -48						; size = 4
__Newsize$ = -36					; size = 4
__Almap$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Growmap@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXI@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Growmap, COMDAT
; _this$ = ecx

; 1430 :     void _Growmap(size_type _Count) { // grow map by at least _Count pointers, _Mapsize() a power of 2

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1431 :         static_assert(1 < _DEQUEMAPSIZ, "The _Xlen() test should always be performed.");
; 1432 : 
; 1433 :         _Alpty _Almap(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>

; 1434 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	cmp	DWORD PTR [eax], 0
	jbe	SHORT $LN10@Growmap
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN11@Growmap
$LN10@Growmap:
	mov	DWORD PTR tv73[ebp], 1
$LN11@Growmap:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Newsize$[ebp], ecx
$LN2@Growmap:

; 1435 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _DEQUEMAPSIZ) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jb	SHORT $LN4@Growmap
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN3@Growmap
$LN4@Growmap:

; 1436 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1437 :             if (max_size() / _DEQUESIZ - _Newsize < _Newsize) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size
	shr	eax, 1
	sub	eax, DWORD PTR __Newsize$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Growmap

; 1438 :                 _Xlen(); // result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Xlen
$LN5@Growmap:

; 1439 :             }
; 1440 : 
; 1441 :             _Newsize *= 2;

	mov	eax, DWORD PTR __Newsize$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax

; 1442 :         }

	jmp	SHORT $LN2@Growmap
$LN3@Growmap:

; 1443 :         _Count = _Newsize - _Mapsize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Count$[ebp], ecx

; 1444 : 
; 1445 :         size_type _Myboff = _Myoff() / _DEQUESIZ;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	eax, DWORD PTR [eax]
	shr	eax, 1
	mov	DWORD PTR __Myboff$[ebp], eax

; 1446 :         _Mapptr _Newmap   = _Almap.allocate(_Mapsize() + _Count);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?allocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocate
	mov	DWORD PTR __Newmap$[ebp], eax

; 1447 :         _Mapptr _Myptr    = _Newmap + _Myboff;

	mov	eax, DWORD PTR __Myboff$[ebp]
	mov	ecx, DWORD PTR __Newmap$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Myptr$[ebp], edx

; 1448 : 
; 1449 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv152[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv150[ebp], edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv152[ebp]
	push	ecx
	mov	edx, DWORD PTR tv150[ebp]
	push	edx
	call	??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Myptr$[ebp], eax

; 1450 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

	mov	eax, DWORD PTR __Myboff$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN6@Growmap

; 1451 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv167[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv165[ebp], eax
	mov	ecx, DWORD PTR __Myptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv167[ebp]
	push	edx
	mov	eax, DWORD PTR tv165[ebp]
	push	eax
	call	??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Myptr$[ebp], eax

; 1452 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Myboff$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Myptr$[ebp]
	push	ecx
	call	??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<ResourceAsyncLoader::ResourceLoadingInformation * *,unsigned int>
	add	esp, 8

; 1453 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

	mov	eax, DWORD PTR __Myboff$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newmap$[ebp]
	push	ecx
	call	??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<ResourceAsyncLoader::ResourceLoadingInformation * *,unsigned int>
	add	esp, 8

; 1454 :         } else { // increment not greater than offset of initial block

	jmp	$LN7@Growmap
$LN6@Growmap:

; 1455 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv186[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR __Myptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	mov	eax, DWORD PTR tv184[ebp]
	push	eax
	call	??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 12					; 0000000cH

; 1456 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv201[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv199[ebp], edx
	mov	eax, DWORD PTR __Newmap$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv201[ebp]
	push	ecx
	mov	edx, DWORD PTR tv199[ebp]
	push	edx
	call	??$uninitialized_copy@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@0PAPAU12@@Z ; std::uninitialized_copy<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Myptr$[ebp], eax

; 1457 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Myptr$[ebp]
	push	ecx
	call	??$_Uninitialized_value_construct_n_unchecked1@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@std@@YAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<ResourceAsyncLoader::ResourceLoadingInformation * *,unsigned int>
	add	esp, 8
$LN7@Growmap:

; 1458 :         }
; 1459 : 
; 1460 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv219[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv217[ebp], edx
	mov	eax, DWORD PTR tv219[ebp]
	push	eax
	mov	ecx, DWORD PTR tv217[ebp]
	push	ecx
	call	??$_Destroy_range@PAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAPAU12@@std@@YAXPAPAUResourceLoadingInformation@ResourceAsyncLoader@@QAPAU12@@Z ; std::_Destroy_range<ResourceAsyncLoader::ResourceLoadingInformation * *,ResourceAsyncLoader::ResourceLoadingInformation * *>
	add	esp, 8

; 1461 :         if (_Map() != _Mapptr()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@Growmap

; 1462 :             _Almap.deallocate(_Map(), _Mapsize()); // free storage for old

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv233[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv231[ebp], ecx
	mov	edx, DWORD PTR tv233[ebp]
	push	edx
	mov	eax, DWORD PTR tv231[ebp]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate
$LN8@Growmap:

; 1463 :         }
; 1464 : 
; 1465 :         _Map() = _Newmap; // point at new

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	ecx, DWORD PTR __Newmap$[ebp]
	mov	DWORD PTR [eax], ecx

; 1466 :         _Mapsize() += _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	DWORD PTR tv238[ebp], eax
	mov	eax, DWORD PTR tv238[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR tv238[ebp]
	mov	DWORD PTR [edx], ecx
$LN9@Growmap:

; 1467 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@Growmap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@Growmap:
	DD	1
	DD	$LN13@Growmap
$LN13@Growmap:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN12@Growmap
$LN12@Growmap:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
?_Growmap@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXI@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Xlen@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Xlen, COMDAT
; _this$ = ecx

; 1422 :     [[noreturn]] void _Xlen() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1423 :         _Xlength_error("deque<T> too long");

	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1424 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?push_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::push_back, COMDAT
; _this$ = ecx

; 1121 :     void push_back(const _Ty& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1122 :         _Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all

; 1123 :         _Emplace_back_internal(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_back_internal@ABUResourceLoadingInformation@ResourceAsyncLoader@@@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Emplace_back_internal<ResourceAsyncLoader::ResourceLoadingInformation const &>

; 1124 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXABUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv140 = -236						; size = 4
tv152 = -232						; size = 4
tv145 = -232						; size = 4
tv142 = -232						; size = 4
__Block$2 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_front, COMDAT
; _this$ = ecx

; 1086 :     void pop_front() noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1087 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1088 :         if (empty()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@pop_front
$LN4@pop_front:

; 1089 :             _STL_REPORT_ERROR("deque empty before pop");

	mov	esi, esp
	push	OFFSET ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1089					; 00000441H
	push	OFFSET ??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN10@pop_front
	int	3
$LN10@pop_front:
	mov	esi, esp
	push	0
	push	1089					; 00000441H
	push	OFFSET ??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1BDI@PJOGMHFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@
	push	OFFSET ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN4@pop_front

; 1090 :         } else { // something to erase, do it

	jmp	$LN9@pop_front
$LN5@pop_front:

; 1091 :             _Orphan_off(_Myoff());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off

; 1092 :             size_type _Block = _Getblock(_Myoff());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
	mov	DWORD PTR __Block$2[ebp], eax

; 1093 :             _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Myoff() % _DEQUESIZ));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	eax, DWORD PTR [eax]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	eax, DWORD PTR __Block$2[ebp]
	mov	ecx, DWORD PTR [esi+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	call	??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
	add	esp, 4
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	mov	DWORD PTR tv140[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	call	??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>
	add	esp, 8

; 1094 :             if (--_Mysize() == 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR tv145[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR tv145[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN7@pop_front

; 1095 :                 _Myoff() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	DWORD PTR [eax], 0

; 1096 :             } else {

	jmp	SHORT $LN9@pop_front
$LN7@pop_front:

; 1097 :                 ++_Myoff();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	DWORD PTR tv152[ebp], eax
	mov	eax, DWORD PTR tv152[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv152[ebp]
	mov	DWORD PTR [edx], ecx
$LN9@pop_front:

; 1098 :             }
; 1099 :         }
; 1100 : 
; 1101 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1102 :         size_type _Block = _Getblock(_Myoff());
; 1103 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Myoff() % _DEQUESIZ));
; 1104 :         if (--_Mysize() == 0) {
; 1105 :             _Myoff() = 0;
; 1106 :         } else {
; 1107 :             ++_Myoff();
; 1108 :         }
; 1109 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1110 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?pop_front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_front
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
?front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::front, COMDAT
; _this$ = ecx

; 1047 :     _NODISCARD reference front() noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4
$LN4@front:

; 1048 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1049 :         _STL_VERIFY(!empty(), "front() called on empty deque");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@front
	jmp	SHORT $LN2@front
$LN7@front:
	mov	esi, esp
	push	OFFSET ??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1049					; 00000419H
	push	OFFSET ??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@front
	int	3
$LN11@front:
	mov	esi, esp
	push	0
	push	1049					; 00000419H
	push	OFFSET ??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1BDA@IAIEIJM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@
	push	OFFSET ??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@front
$LN2@front:
	xor	eax, eax
	jne	SHORT $LN4@front

; 1050 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1051 : 
; 1052 :         return *_Unchecked_begin();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Unchecked_begin
	mov	ecx, eax
	call	??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QBEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >::operator*

; 1053 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEAAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty, COMDAT
; _this$ = ecx

; 1009 :     _NODISCARD bool empty() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1010 :         return _Mysize() == 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv67[ebp]

; 1011 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?max_size@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?max_size@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size, COMDAT
; _this$ = ecx

; 1004 :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1005 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAIABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1006 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1007 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Unchecked_begin@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv79 = -212						; size = 4
tv81 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 913  :     _Unchecked_iterator _Unchecked_begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 914  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	push	eax
	call	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@0@AAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> > >
	add	esp, 4
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 915  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$03@std@@YAII@Z	; std::_Get_size_of_n<4>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAIABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAIABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size, COMDAT

; 709  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 536870911				; 1fffffffH

; 711  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAIABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ PROC		; std::lock_guard<std::mutex>::~lock_guard<std::mutex>, COMDAT
; _this$ = ecx

; 434  :     ~lock_guard() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 435  :         _MyMutex.unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?unlock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::unlock

; 436  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$lock_guard@Vmutex@std@@@std@@QAE@XZ ENDP		; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mtx$ = 8						; size = 4
??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z PROC ; std::lock_guard<std::mutex>::lock_guard<std::mutex>, COMDAT
; _this$ = ecx

; 428  :     explicit lock_guard(_Mutex& _Mtx) : _MyMutex(_Mtx) { // construct and lock

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mtx$[ebp]
	mov	DWORD PTR [eax], ecx

; 429  :         _MyMutex.lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?lock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::lock

; 430  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$lock_guard@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ENDP ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z PROC ; std::unique_lock<std::mutex>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z ENDP ; std::unique_lock<std::mutex>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ PROC	; std::unique_lock<std::mutex>::mutex, COMDAT
; _this$ = ecx

; 251  :     _NODISCARD _Mutex* mutex() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 252  :         return _Pmtx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ENDP	; std::unique_lock<std::mutex>::mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ PROC		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 181  :     ~unique_lock() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 182  :         if (_Owns) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@unique_loc

; 183  :             _Pmtx->unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?unlock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::unlock
$LN3@unique_loc:

; 184  :         }
; 185  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ENDP		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mtx$ = 8						; size = 4
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z PROC ; std::unique_lock<std::mutex>::unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 135  :     explicit unique_lock(_Mutex& _Mtx) : _Pmtx(_STD addressof(_Mtx)), _Owns(false) { // construct and lock

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Mtx$[ebp]
	push	eax
	call	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 136  :         _Pmtx->lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?lock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::lock

; 137  :         _Owns = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1

; 138  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ENDP ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ PROC ; std::condition_variable::_Mycnd, COMDAT
; _this$ = ecx

; 698  :     _Cnd_t _Mycnd() noexcept { // get pointer to _Cnd_internal_imp_t inside _Cnd_storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 699  :         return reinterpret_cast<_Cnd_t>(&_Cnd_storage);

	mov	eax, DWORD PTR _this$[ebp]

; 700  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ENDP ; std::condition_variable::_Mycnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z
_TEXT	SEGMENT
tv78 = -212						; size = 4
tv80 = -208						; size = 4
_this$ = -8						; size = 4
__Lck$ = 8						; size = 4
?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z PROC ; std::condition_variable::wait, COMDAT
; _this$ = ecx

; 597  :     void wait(unique_lock<mutex>& _Lck) { // wait for signal

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 598  :         // Nothing to do to comply with LWG-2135 because std::mutex lock/unlock are nothrow
; 599  :         _Cnd_wait(_Mycnd(), _Lck.mutex()->_Mymtx());

	mov	ecx, DWORD PTR __Lck$[ebp]
	call	?mutex@?$unique_lock@Vmutex@std@@@std@@QBEPAV02@XZ ; std::unique_lock<std::mutex>::mutex
	mov	ecx, eax
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv80[ebp]
	push	eax
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	call	__Cnd_wait
	add	esp, 8

; 600  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?wait@condition_variable@std@@QAEXAAV?$unique_lock@Vmutex@std@@@2@@Z ENDP ; std::condition_variable::wait
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?notify_one@condition_variable@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?notify_one@condition_variable@std@@QAEXXZ PROC		; std::condition_variable::notify_one, COMDAT
; _this$ = ecx

; 589  :     void notify_one() noexcept { // wake up one waiter

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 590  :         _Cnd_signal(_Mycnd());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_signal
	add	esp, 4

; 591  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?notify_one@condition_variable@std@@QAEXXZ ENDP		; std::condition_variable::notify_one
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ PROC ; std::_Mutex_base::_Mymtx, COMDAT
; _this$ = ecx

; 82   :     _Mtx_t _Mymtx() noexcept { // get pointer to _Mtx_internal_imp_t inside _Mtx_storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 83   :         return reinterpret_cast<_Mtx_t>(&_Mtx_storage);

	mov	eax, DWORD PTR _this$[ebp]

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ENDP ; std::_Mutex_base::_Mymtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?unlock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unlock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::unlock, COMDAT
; _this$ = ecx

; 66   :     void unlock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 67   :         _Mtx_unlock(_Mymtx());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_unlock
	add	esp, 4

; 68   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unlock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?lock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::lock, COMDAT
; _this$ = ecx

; 50   :     void lock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 51   :         _Check_C_return(_Mtx_lock(_Mymtx()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_lock
	add	esp, 4
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 52   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xthreads.h
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
__Res$ = 8						; size = 4
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 129  : inline int _Check_C_return(int _Res) { // throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __CBA6A69C_xthreads@h
	call	@__CheckForDebuggerJustMyCode@4

; 130  :     if (_Res != _Thrd_success) {

	cmp	DWORD PTR __Res$[ebp], 0
	je	SHORT $LN2@Check_C_re

; 131  :         _Throw_C_error(_Res);

	mov	eax, DWORD PTR __Res$[ebp]
	push	eax
	call	?_Throw_C_error@std@@YAXH@Z		; std::_Throw_C_error
$LN2@Check_C_re:

; 132  :     }
; 133  : 
; 134  :     return _Res;

	mov	eax, DWORD PTR __Res$[ebp]
$LN3@Check_C_re:

; 135  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -36						; size = 4
__Lock$2 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 1210 : inline void _Container_base12::_Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1211 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1212 :     if (_Myproxy) { // proxy allocated, drain it

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_all

; 1213 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1214 : 
; 1215 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all

; 1216 :             (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1217 :         }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1218 : 
; 1219 :         _Myproxy->_Myfirstiter = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0

; 1220 :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Orphan_all:

; 1221 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1222 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Orphan_all:
	DD	1
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_all
$LN7@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -44					; size = 4
__Min_back_shift$ = -32					; size = 4
__Ptr_container$ = -20					; size = 4
__Ptr_user$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Adjust_man:

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN4@Adjust_man

; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	DWORD PTR __Min_back_shift$[ebp], 8

; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN10@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax], ecx

; 153  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 76   :     __declspec(allocator) static void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 77   :         return ::operator new(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 78   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -208						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8655F6A9_exception
	call	@__CheckForDebuggerJustMyCode@4

; 321  :     _THROW(bad_array_new_length{});

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:

; 322  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4

; 140  :         : bad_alloc("bad array new length")

	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 130  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4

; 129  :         : exception(_Message, 1)

	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 130  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 131  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 96   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 89   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_destroy
	add	esp, 4

; 91   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8

; 74   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 67   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 68   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 556  :     _NODISCARD static constexpr int(max)() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A47FD3F7_limits
	call	@__CheckForDebuggerJustMyCode@4

; 557  :         return INT_MAX;

	mov	eax, 2147483647				; 7fffffffH

; 558  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 167  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8B404B8B_vcruntime_new@h
	call	@__CheckForDebuggerJustMyCode@4

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 170  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
