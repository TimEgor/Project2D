; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__8B404B8B_vcruntime_new@h DB 01H
__3C2D1DF9_Resource@h DB 01H
__2A0FE41E_ResourceName@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__4C8DB69C_cstddef DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__E9466C31_cstdlib DB 01H
__77E6CA79_type_traits DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__A0B61CF9_time@h DB 01H
__CBA6A69C_xthreads@h DB 01H
__CF4A8F35_atomic DB 01H
__FAF99A17_ResourceHandler@h DB 01H
__415253A4_cmath DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__A47FD3F7_limits DB 01H
__20BB4341_malloc@h DB 01H
__604808BE_vcruntime_exception@h DB 01H
__8655F6A9_exception DB 01H
__DEE7E6EF_xutility DB 01H
__B4DE8A79_xmemory DB 01H
__E7714AE5_tuple DB 01H
__EA01D114_xpolymorphic_allocator@h DB 01H
__7EACF2A1_xbit_ops@h DB 01H
__C00D0CE5_xstring DB 01H
__2EFD93C2_xhash DB 01H
__2DE1CA0A_ratio DB 01H
__C092D57D_chrono DB 01H
__0F1BCCF4_stdexcept DB 01H
__C1F7FE2D_xcall_once@h DB 01H
__7EAAEC0D_system_error DB 01H
__EC89C42C_vcruntime_typeinfo@h DB 01H
__AE3815F6_typeinfo DB 01H
__18D1DF79_memory DB 01H
__C39CA7CF_thread DB 01H
__3F4CC05A_mutex DB 01H
__E77FCB6C_ResourceCreator@h DB 01H
__810F60AC_FileSystem@h DB 01H
__8DDDD29B_ZipFile@h DB 01H
__CAC6B671_ZipFileSystem@h DB 01H
__6C99B47D_algorithm DB 01H
__34948876_xfacet DB 01H
__B2D2BA86_ctype@h DB 01H
__B1B1F63E_xlocinfo DB 01H
__1F3378D4_xlocale DB 01H
__8854812D_xiosbase DB 01H
__81B41EC3_xlocnum DB 01H
__5618765D_ios DB 01H
__AAD60BFB_xlocmon DB 01H
__15AC5F2C_xloctime DB 01H
__333F8FA8_xlocmes DB 01H
__18C7867E_xfilesystem_abi@h DB 01H
__71B70C9A_list DB 01H
__A704387C_filesystem DB 01H
__D426F35F_NativeFileSystem@h DB 01H
__8D69CDC2_condition_variable DB 01H
__79C7FC57_basetsd@h DB 01H
__D545DD43_guiddef@h DB 01H
__D5DDFBF3_winnt@h DB 01H
__439612F0_processthreadsapi@h DB 01H
__5733279A_memoryapi@h DB 01H
__D4435474_winerror@h DB 01H
__B3ED30D4_winbase@h DB 01H
__DB057BA3_winuser@h DB 01H
__A7113148_winioctl@h DB 01H
__EC5BC72C_propidl@h DB 01H
__6DA674A0_oleauto@h DB 01H
__A118E6DC_stralign@h DB 01H
__D3396542_Thread@h DB 01H
__AE7C0D16_queue DB 01H
__0D55A76D_ThreadItemQueue@h DB 01H
__45916EAF_ResourceAsyncLoader@h DB 01H
__97737FFA_ResourceManager@h DB 01H
__5D8615C2_ResourceManager@cpp DB 01H
__4D4A49D7_deque DB 01H
__E9D2A317_vector DB 01H
__B33C2DD4_locale DB 01H
__6FF3972A_istream DB 01H
__0C23A210_ostream DB 01H
__0DBB7448_streambuf DB 01H
__EA3A8D1F_unordered_map DB 01H
__DE4BE9BA_utility DB 01H
__CF4B51AF_iterator DB 01H
__68960671_iosfwd DB 01H
__29547EA8_xstddef DB 01H
__8C597A7F_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?c_str@ResourceName@@QBEPBDXZ			; ResourceName::c_str
PUBLIC	_ceilf
PUBLIC	?_Fnv1a_append_bytes@std@@YAIIQBEI@Z		; std::_Fnv1a_append_bytes
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	??0?$_Atomic_storage@PAVResource@@$03@std@@QAE@QAVResource@@@Z ; std::_Atomic_storage<Resource *,4>::_Atomic_storage<Resource *,4>
PUBLIC	?store@?$_Atomic_storage@PAVResource@@$03@std@@QAEXQAVResource@@@Z ; std::_Atomic_storage<Resource *,4>::store
PUBLIC	?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ ; std::_Atomic_storage<Resource *,4>::load
PUBLIC	??0?$_Atomic_pointer@PAVResource@@@std@@QAE@QAVResource@@@Z ; std::_Atomic_pointer<Resource *>::_Atomic_pointer<Resource *>
PUBLIC	??4?$atomic@PAVResource@@@std@@QAEPAVResource@@QAV2@@Z ; std::atomic<Resource *>::operator=
PUBLIC	??0?$atomic@PAVResource@@@std@@QAE@QAVResource@@@Z ; std::atomic<Resource *>::atomic<Resource *>
PUBLIC	??0?$_Atomic_storage@I$03@std@@QAE@I@Z		; std::_Atomic_storage<unsigned int,4>::_Atomic_storage<unsigned int,4>
PUBLIC	?store@?$_Atomic_storage@I$03@std@@QAEXI@Z	; std::_Atomic_storage<unsigned int,4>::store
PUBLIC	?load@?$_Atomic_storage@I$03@std@@QBEIXZ	; std::_Atomic_storage<unsigned int,4>::load
PUBLIC	??0?$_Atomic_integral@I$03@std@@QAE@I@Z		; std::_Atomic_integral<unsigned int,4>::_Atomic_integral<unsigned int,4>
PUBLIC	??0?$_Atomic_integral_facade@I@std@@QAE@I@Z	; std::_Atomic_integral_facade<unsigned int>::_Atomic_integral_facade<unsigned int>
PUBLIC	??4?$atomic@I@std@@QAEII@Z			; std::atomic<unsigned int>::operator=
PUBLIC	??0?$atomic@I@std@@QAE@I@Z			; std::atomic<unsigned int>::atomic<unsigned int>
PUBLIC	??0ResourceHandler@@QAE@XZ			; ResourceHandler::ResourceHandler
PUBLIC	??0ResourceHandler@@QAE@$$QAV0@@Z		; ResourceHandler::ResourceHandler
PUBLIC	_wmemcpy
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??0exception@std@@QAE@QBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@I@std@@YAII@Z			; std::_Convert_size<unsigned int>
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXQADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?_Floor_of_log_2@std@@YAKI@Z			; std::_Floor_of_log_2
PUBLIC	?_Ceiling_of_log_2@std@@YAKI@Z			; std::_Ceiling_of_log_2
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z	; std::_Char_traits<char,int>::move
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z	; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z ; std::make_error_code
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??0error_code@std@@QAE@HABVerror_category@1@@Z	; std::error_code::error_code
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8std@@YA_NABVerror_condition@0@0@Z		; std::operator==
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	??1_System_error@std@@UAE@XZ			; std::_System_error::~_System_error
PUBLIC	??0_System_error@std@@QAE@ABV01@@Z		; std::_System_error::_System_error
PUBLIC	??_G_System_error@std@@UAEPAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QAE@Verror_code@1@@Z	; std::system_error::system_error
PUBLIC	??1system_error@std@@UAE@XZ			; std::system_error::~system_error
PUBLIC	??0system_error@std@@QAE@ABV01@@Z		; std::system_error::system_error
PUBLIC	??_Gsystem_error@std@@UAEPAXI@Z			; std::system_error::`scalar deleting destructor'
PUBLIC	?_Throw_system_error@std@@YAXW4errc@1@@Z	; std::_Throw_system_error
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@0@XZ ; std::_Immortalize_memcpy_image<std::_Generic_error_category>
PUBLIC	??$_Hash_representation@I@std@@YAIABI@Z		; std::_Hash_representation<unsigned int>
PUBLIC	??0_Mutex_base@std@@QAE@H@Z			; std::_Mutex_base::_Mutex_base
PUBLIC	??1_Mutex_base@std@@QAE@XZ			; std::_Mutex_base::~_Mutex_base
PUBLIC	?lock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::lock
PUBLIC	?unlock@_Mutex_base@std@@QAEXXZ			; std::_Mutex_base::unlock
PUBLIC	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
PUBLIC	??0mutex@std@@QAE@XZ				; std::mutex::mutex
PUBLIC	??1mutex@std@@QAE@XZ				; std::mutex::~mutex
PUBLIC	??0condition_variable@std@@QAE@XZ		; std::condition_variable::condition_variable
PUBLIC	??1condition_variable@std@@QAE@XZ		; std::condition_variable::~condition_variable
PUBLIC	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
PUBLIC	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
PUBLIC	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ	; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
PUBLIC	?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ	; std::unique_lock<std::mutex>::unlock
PUBLIC	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z ; std::unique_lock<std::mutex>::__autoclassinit2
PUBLIC	??0?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAE@XZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAEAAMXZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEABMXZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size
PUBLIC	??R?$equal_to@I@std@@QBE_NABI0@Z		; std::equal_to<unsigned int>::operator()
PUBLIC	??R?$_Conditionally_enabled_hash@I$00@std@@QBEIABI@Z ; std::_Conditionally_enabled_hash<unsigned int,1>::operator()
PUBLIC	?_Do_hash@?$hash@I@std@@SAIABI@Z		; std::hash<unsigned int>::_Do_hash
PUBLIC	?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QBEABU?$equal_to@I@2@XZ ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QBEABU?$hash@I@2@XZ ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first
PUBLIC	??0?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,ResourceHandler> >::allocator<std::pair<unsigned int const ,ResourceHandler> >
PUBLIC	??0?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEXQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::max_size
PUBLIC	??0?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
PUBLIC	??1?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
PUBLIC	?end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::end
PUBLIC	?_Unchecked_begin@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Make_iter
PUBLIC	?max_size@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::max_size
PUBLIC	?_Unchecked_erase@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_erase
PUBLIC	?clear@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::clear
PUBLIC	?_Tidy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Tidy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
PUBLIC	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@ABEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >
PUBLIC	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Orphan_non_end
PUBLIC	?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_splice
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first
PUBLIC	??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >
PUBLIC	?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end
PUBLIC	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_end
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket_count
PUBLIC	?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::max_load_factor
PUBLIC	?_Unchecked_erase@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_erase
PUBLIC	?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::clear
PUBLIC	?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@IQAU32@0@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Insert_new_node_before
PUBLIC	?_Check_max_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_max_size
PUBLIC	?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE_NXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_rehash_required_1
PUBLIC	?_Rehash_for_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Rehash_for_1
PUBLIC	?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Min_load_factor_buckets
PUBLIC	?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Desired_grow_bucket_count
PUBLIC	?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Forced_rehash
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEABMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size
PUBLIC	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::size
PUBLIC	?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size
PUBLIC	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Assign_grow
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Tidy
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
PUBLIC	??1?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::~_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >
PUBLIC	??0?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
PUBLIC	??1?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
PUBLIC	??0?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAE@XZ ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAEAAMXZ ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Get_max_bucket_size
PUBLIC	??R?$_Conditionally_enabled_hash@W4ResourceType@@$00@std@@QBEIABW4ResourceType@@@Z ; std::_Conditionally_enabled_hash<enum ResourceType,1>::operator()
PUBLIC	?_Do_hash@?$hash@W4ResourceType@@@std@@SAIABW4ResourceType@@@Z ; std::hash<enum ResourceType>::_Do_hash
PUBLIC	?_Get_first@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QBEABU?$hash@W4ResourceType@@@2@XZ ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Get_first
PUBLIC	??0?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >
PUBLIC	??0?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@QAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@@Z ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::deallocate
PUBLIC	??0?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
PUBLIC	?_Swap_val@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXAAV12@@Z ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Swap_val
PUBLIC	??1?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
PUBLIC	?_Unchecked_begin@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_end
PUBLIC	?_Unchecked_erase@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_erase
PUBLIC	?clear@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::clear
PUBLIC	?_Tidy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Tidy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >
PUBLIC	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Orphan_non_end
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Get_first
PUBLIC	??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >
PUBLIC	?_Swap_val@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Swap_val
PUBLIC	?_Pocma_both@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Pocma_both
PUBLIC	?_Move_assign@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Move_assign
PUBLIC	??4?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::operator=
PUBLIC	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_end
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket_count
PUBLIC	?bucket@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIABW4ResourceType@@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket
PUBLIC	?_Unchecked_erase@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_erase
PUBLIC	?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::clear
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Max_bucket_size
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocate
PUBLIC	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::size
PUBLIC	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Assign_grow
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Tidy
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
PUBLIC	?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Swap_val
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
PUBLIC	??1?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::~_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >
PUBLIC	??0?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
PUBLIC	??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::operator=
PUBLIC	??1?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
PUBLIC	??0ResourceManager@@AAE@XZ			; ResourceManager::ResourceManager
PUBLIC	?initResourceCreators@ResourceManager@@AAE_NXZ	; ResourceManager::initResourceCreators
PUBLIC	?chooseResourceCreator@ResourceManager@@AAEAAVResourceCreator@@ABVResourceName@@@Z ; ResourceManager::chooseResourceCreator
PUBLIC	?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z ; ResourceManager::createNewHandler
PUBLIC	?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z ; ResourceManager::loadNewResourceFromArchive
PUBLIC	?get@ResourceManager@@SAAAV1@XZ			; ResourceManager::get
PUBLIC	?init@ResourceManager@@QAE_NXZ			; ResourceManager::init
PUBLIC	?release@ResourceManager@@QAEXXZ		; ResourceManager::release
PUBLIC	?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z ; ResourceManager::getResourceFromArchive
PUBLIC	?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z ; ResourceManager::getResourceFromArchive
PUBLIC	?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z ; ResourceManager::getResourceAsyncFromArchive
PUBLIC	?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z ; ResourceManager::getResourceAsyncFromArchive
PUBLIC	?getRawResourceFromArchive@ResourceManager@@QAEPAXABVResourceName@@AAI@Z ; ResourceManager::getRawResourceFromArchive
PUBLIC	?getRawResourceFromNativeFileSystem@ResourceManager@@QAEPAXABVResourceName@@AAI@Z ; ResourceManager::getRawResourceFromNativeFileSystem
PUBLIC	??1ResourceManager@@QAE@XZ			; ResourceManager::~ResourceManager
PUBLIC	?__autoclassinit2@ResourceManager@@QAEXI@Z	; ResourceManager::__autoclassinit2
PUBLIC	??1ResourceCreator@@UAE@XZ			; ResourceCreator::~ResourceCreator
PUBLIC	??0ResourceCreator@@QAE@XZ			; ResourceCreator::ResourceCreator
PUBLIC	??_GResourceCreator@@UAEPAXI@Z			; ResourceCreator::`scalar deleting destructor'
PUBLIC	?getFilePattern@DefaultResourceCreator@@UBEPBDXZ ; DefaultResourceCreator::getFilePattern
PUBLIC	??0DefaultResourceCreator@@QAE@XZ		; DefaultResourceCreator::DefaultResourceCreator
PUBLIC	??1DefaultResourceCreator@@UAE@XZ		; DefaultResourceCreator::~DefaultResourceCreator
PUBLIC	??_GDefaultResourceCreator@@UAEPAXI@Z		; DefaultResourceCreator::`scalar deleting destructor'
PUBLIC	??0FileSystem@@QAE@XZ				; FileSystem::FileSystem
PUBLIC	??1FileSystem@@UAE@XZ				; FileSystem::~FileSystem
PUBLIC	??_GFileSystem@@UAEPAXI@Z			; FileSystem::`scalar deleting destructor'
PUBLIC	??0IndexedFileSystem@@QAE@XZ			; IndexedFileSystem::IndexedFileSystem
PUBLIC	??1IndexedFileSystem@@UAE@XZ			; IndexedFileSystem::~IndexedFileSystem
PUBLIC	??_GIndexedFileSystem@@UAEPAXI@Z		; IndexedFileSystem::`scalar deleting destructor'
PUBLIC	??0?$allocator@U?$pair@$$CBII@std@@@std@@QAE@XZ	; std::allocator<std::pair<unsigned int const ,unsigned int> >::allocator<std::pair<unsigned int const ,unsigned int> >
PUBLIC	??0?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ; std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>
PUBLIC	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::deallocate
PUBLIC	??0?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
PUBLIC	??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
PUBLIC	?_Unchecked_end@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Unchecked_end
PUBLIC	?_Tidy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Tidy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Get_first
PUBLIC	??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Max_bucket_size
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocate
PUBLIC	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::size
PUBLIC	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Assign_grow
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Tidy
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first
PUBLIC	??1?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
PUBLIC	??0?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
PUBLIC	??1?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
PUBLIC	??0ZipFile@@QAE@XZ				; ZipFile::ZipFile
PUBLIC	??1ZipFile@@QAE@XZ				; ZipFile::~ZipFile
PUBLIC	??0ZipFileSystem@@QAE@XZ			; ZipFileSystem::ZipFileSystem
PUBLIC	??1ZipFileSystem@@UAE@XZ			; ZipFileSystem::~ZipFileSystem
PUBLIC	?__autoclassinit2@ZipFileSystem@@QAEXI@Z	; ZipFileSystem::__autoclassinit2
PUBLIC	??_GZipFileSystem@@UAEPAXI@Z			; ZipFileSystem::`scalar deleting destructor'
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??$forward@I@std@@YA$$QAIAAI@Z			; std::forward<unsigned int>
PUBLIC	??0NativeFileSystem@@QAE@XZ			; NativeFileSystem::NativeFileSystem
PUBLIC	??1NativeFileSystem@@UAE@XZ			; NativeFileSystem::~NativeFileSystem
PUBLIC	?init@NativeFileSystem@@UAE_NABVResourceName@@@Z ; NativeFileSystem::init
PUBLIC	?release@NativeFileSystem@@UAEXXZ		; NativeFileSystem::release
PUBLIC	??_GNativeFileSystem@@UAEPAXI@Z			; NativeFileSystem::`scalar deleting destructor'
PUBLIC	??0Thread@@QAE@XZ				; Thread::Thread
PUBLIC	??0?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@XZ ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocator<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	?deallocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::deallocate
PUBLIC	?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate
PUBLIC	??0?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >
PUBLIC	??1?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::~deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >
PUBLIC	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
PUBLIC	?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_back
PUBLIC	?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Tidy
PUBLIC	?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off
PUBLIC	?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
PUBLIC	?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all
PUBLIC	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
PUBLIC	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
PUBLIC	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
PUBLIC	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
PUBLIC	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
PUBLIC	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
PUBLIC	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
PUBLIC	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
PUBLIC	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first
PUBLIC	??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >
PUBLIC	??1?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::~queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >
PUBLIC	??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??1?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::~ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??0ResourceAsyncLoader@@QAE@XZ			; ResourceAsyncLoader::ResourceAsyncLoader
PUBLIC	??1ResourceAsyncLoader@@QAE@XZ			; ResourceAsyncLoader::~ResourceAsyncLoader
PUBLIC	?__autoclassinit2@ResourceAsyncLoader@@QAEXI@Z	; ResourceAsyncLoader::__autoclassinit2
PUBLIC	??_GResourceAsyncLoader@@QAEPAXI@Z		; ResourceAsyncLoader::`scalar deleting destructor'
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator++
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator!=
PUBLIC	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator*
PUBLIC	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator++
PUBLIC	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::__autoclassinit2
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >
PUBLIC	??$move@AAVResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ; std::move<ResourceHandler &>
PUBLIC	??$make_pair@AAIVResourceHandler@@@std@@YA?AU?$pair@IVResourceHandler@@@0@AAI$$QAVResourceHandler@@@Z ; std::make_pair<unsigned int &,ResourceHandler>
PUBLIC	??$?0IVResourceHandler@@$0A@@?$pair@$$CBIVResourceHandler@@@std@@QAE@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::pair<unsigned int const ,ResourceHandler>::pair<unsigned int const ,ResourceHandler><unsigned int,ResourceHandler,0>
PUBLIC	??$insert@U?$pair@IVResourceHandler@@@std@@$0A@@?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::insert<std::pair<unsigned int,ResourceHandler>,0>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::__autoclassinit2
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::~pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>
PUBLIC	??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBIVResourceHandler@@@std@@@std@@SAPAU?$pair@$$CBIVResourceHandler@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned int const ,ResourceHandler> *>::pointer_to
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
PUBLIC	??$?0U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >
PUBLIC	??$move@AAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@@std@@YA$$QAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@0@AAV10@@Z ; std::move<std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > > &>
PUBLIC	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
PUBLIC	??$?0U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >
PUBLIC	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
PUBLIC	??$?0U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >
PUBLIC	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPCJAAU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
PUBLIC	??$_Atomic_address_as@HU?$_Atomic_padded@I@std@@@std@@YAPDHABU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<int,std::_Atomic_padded<unsigned int> >
PUBLIC	??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >
PUBLIC	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$_Destroy_in_place@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXAAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Destroy_in_place<ResourceAsyncLoader::ResourceLoadingInformation *>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >
PUBLIC	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > ><std::allocator<std::pair<unsigned int const ,unsigned int> > const &,0>
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
PUBLIC	??$addressof@V?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@@std@@YAPAV?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@0@AAV10@@Z ; std::addressof<std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> > >
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > ><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &,0>
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
PUBLIC	??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1><std::_Zero_then_variadic_args_t,float>
PUBLIC	??$?0M@?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z ; std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>::_Compressed_pair<std::equal_to<enum ResourceType>,float,1><float>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator--
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator!=
PUBLIC	?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEXI@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::__autoclassinit2
PUBLIC	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
PUBLIC	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator++
PUBLIC	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::__autoclassinit2
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > ><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &,0>
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
PUBLIC	??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
PUBLIC	??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1><std::_Zero_then_variadic_args_t,float>
PUBLIC	??$?0M@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Compressed_pair<std::equal_to<unsigned int>,float,1><float>
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
PUBLIC	??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Atomic_reinterpret_as@JI@std@@YAJABI@Z	; std::_Atomic_reinterpret_as<long,unsigned int>
PUBLIC	??$_Atomic_address_as@JU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPCJAAU?$_Atomic_padded@PAVResource@@@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<Resource *> >
PUBLIC	??$_Atomic_reinterpret_as@JPAVResource@@@std@@YAJABQAVResource@@@Z ; std::_Atomic_reinterpret_as<long,Resource *>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YAII@Z		; std::_Get_size_of_n<16>
PUBLIC	??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
PUBLIC	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
PUBLIC	??$?0U?$pair@$$CBII@std@@@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> ><std::pair<unsigned int const ,unsigned int> >
PUBLIC	??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
PUBLIC	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
PUBLIC	??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> ><std::pair<enum ResourceType const ,ResourceCreator *> >
PUBLIC	??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
PUBLIC	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
PUBLIC	??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> ><std::pair<unsigned int const ,ResourceHandler> >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Get_size_of_n@$00@std@@YAII@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Get_size_of_n@$03@std@@YAII@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *,std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
PUBLIC	??$?RW4ResourceType@@@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QBEIABW4ResourceType@@@Z ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::operator()<enum ResourceType>
PUBLIC	??$_Pocma@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@0@Z ; std::_Pocma<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
PUBLIC	??$_Pocma@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Pocma<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
PUBLIC	??$swap@I$0A@@std@@YAXAAI0@Z			; std::swap<unsigned int,0>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
PUBLIC	??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
PUBLIC	??$swap@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::swap<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,0>
PUBLIC	??0_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Range_eraser
PUBLIC	?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Bump_erased
PUBLIC	??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::~_Range_eraser
PUBLIC	??$_Kfn@$$CBW4ResourceType@@PAVResourceCreator@@@?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@SAABW4ResourceType@@ABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Kfn<enum ResourceType const ,ResourceCreator *>
PUBLIC	??$_Swap_adl@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
PUBLIC	??$swap@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@$0A@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::swap<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,0>
PUBLIC	??$_Get_size_of_n@$0BE@@std@@YAII@Z		; std::_Get_size_of_n<20>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Fnv1a_append_value@I@std@@YAIIABI@Z		; std::_Fnv1a_append_value<unsigned int>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$forward@AAI@std@@YAAAIAAI@Z			; std::forward<unsigned int &>
PUBLIC	??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ; std::forward<ResourceHandler>
PUBLIC	??$?0AAIVResourceHandler@@$0A@@?$pair@IVResourceHandler@@@std@@QAE@AAI$$QAVResourceHandler@@@Z ; std::pair<unsigned int,ResourceHandler>::pair<unsigned int,ResourceHandler><unsigned int &,ResourceHandler,0>
PUBLIC	??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int,ResourceHandler> >
PUBLIC	??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::emplace<std::pair<unsigned int,ResourceHandler> >
PUBLIC	??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
PUBLIC	??$_Find@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@ABII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find<unsigned int>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
PUBLIC	??$?0U?$pair@$$CBII@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > ><std::pair<unsigned int const ,unsigned int> >
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
PUBLIC	??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
PUBLIC	??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > ><std::pair<enum ResourceType const ,ResourceCreator *> >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$forward@M@std@@YA$$QAMAAM@Z			; std::forward<float>
PUBLIC	??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
PUBLIC	??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > ><std::pair<unsigned int const ,ResourceHandler> >
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$forward@ABQAD@std@@YAABQADABQAD@Z		; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
PUBLIC	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>
PUBLIC	??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
PUBLIC	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
PUBLIC	?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Release
PUBLIC	??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
PUBLIC	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
PUBLIC	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>
PUBLIC	??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
PUBLIC	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
PUBLIC	?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Release
PUBLIC	??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
PUBLIC	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
PUBLIC	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>
PUBLIC	??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
PUBLIC	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
PUBLIC	?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Release
PUBLIC	??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
PUBLIC	??$move@AAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@AAV10@@Z ; std::move<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > &>
PUBLIC	??$move@AAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::move<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > &>
PUBLIC	??$move@AAI@std@@YA$$QAIAAI@Z			; std::move<unsigned int &>
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
PUBLIC	??$addressof@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
PUBLIC	??$forward@AAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
PUBLIC	??$addressof@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@YAPAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@0@AAU10@@Z ; std::addressof<std::pair<enum ResourceType const ,ResourceCreator *> >
PUBLIC	??$destroy@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@QAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::destroy<std::pair<enum ResourceType const ,ResourceCreator *> >
PUBLIC	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > const >
PUBLIC	??$_Hash_representation@W4ResourceType@@@std@@YAIABW4ResourceType@@@Z ; std::_Hash_representation<enum ResourceType>
PUBLIC	??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * &>
PUBLIC	??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::move<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
PUBLIC	?_Extract@?$_In_place_key_extract_map@IU?$pair@IVResourceHandler@@@std@@@std@@SAABIABU?$pair@IVResourceHandler@@@2@@Z ; std::_In_place_key_extract_map<unsigned int,std::pair<unsigned int,ResourceHandler> >::_Extract
PUBLIC	??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find_last<unsigned int>
PUBLIC	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool,0>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Release
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
PUBLIC	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
PUBLIC	??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > ><std::pair<unsigned int,ResourceHandler> >
PUBLIC	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@U?$pair@$$CBII@std@@@std@@YAPAU?$pair@$$CBII@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,unsigned int> >
PUBLIC	??$destroy@U?$pair@$$CBII@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@QAU?$pair@$$CBII@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::destroy<std::pair<unsigned int const ,unsigned int> >
PUBLIC	??$destroy@U?$pair@$$CBIVResourceHandler@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::destroy<std::pair<unsigned int const ,ResourceHandler> >
PUBLIC	??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
PUBLIC	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
PUBLIC	??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
PUBLIC	??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
PUBLIC	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
PUBLIC	??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
PUBLIC	??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
PUBLIC	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
PUBLIC	??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
PUBLIC	??$_Fnv1a_append_value@W4ResourceType@@@std@@YAIIABW4ResourceType@@@Z ; std::_Fnv1a_append_value<enum ResourceType>
PUBLIC	??$exchange@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@$$T@std@@YAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::nullptr_t>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
PUBLIC	??0_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@QAV12@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::_Clear_guard
PUBLIC	??1_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::~_Clear_guard
PUBLIC	??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
PUBLIC	??0_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Range_eraser
PUBLIC	?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Bump_erased
PUBLIC	??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::~_Range_eraser
PUBLIC	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
PUBLIC	??$construct@U?$pair@$$CBIVResourceHandler@@@std@@U?$pair@IVResourceHandler@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::construct<std::pair<unsigned int const ,ResourceHandler>,std::pair<unsigned int,ResourceHandler> >
PUBLIC	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
PUBLIC	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
PUBLIC	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
PUBLIC	??$forward@ABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	__TI4?AVsystem_error@std@@
PUBLIC	__CTA4?AVsystem_error@std@@
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QAE@ABV01@@Z20
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic@			; `string'
PUBLIC	?_Min_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@2IB ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Min_buckets
PUBLIC	??_7ResourceCreator@@6B@			; ResourceCreator::`vftable'
PUBLIC	??_7DefaultResourceCreator@@6B@			; DefaultResourceCreator::`vftable'
PUBLIC	??_C@_01NBENCBCI@?$CK@				; `string'
PUBLIC	??_7FileSystem@@6B@				; FileSystem::`vftable'
PUBLIC	??_7IndexedFileSystem@@6B@			; IndexedFileSystem::`vftable'
PUBLIC	??_7ZipFileSystem@@6B@				; ZipFileSystem::`vftable'
PUBLIC	??_C@_0GL@NDAGNCF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GL@IOHNGPIE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_7NativeFileSystem@@6B@			; NativeFileSystem::`vftable'
PUBLIC	??_C@_0L@EIDODEPL@Assets?4zip@			; `string'
PUBLIC	??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_0GI@DIELDAIG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@FLPGDINF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BDK@GJICOFCC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@ ; `string'
PUBLIC	??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1BDI@DOLLGKIL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@	; `string'
PUBLIC	??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BDG@ONCOIODA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@ ; `string'
PUBLIC	??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@ ; `string'
PUBLIC	?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@1@XZ@4U?$_Constexpr_immortalize_impl@V_Generic_error_category@std@@@1@A ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_C@_0BL@GOIGLPKN@unordered_map?1set?5too?5long@ ; `string'
PUBLIC	??_C@_0BK@OGNNAFAB@invalid?5hash?5bucket?5count@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceCreator@@6B@			; ResourceCreator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceCreator@@@8			; ResourceCreator `RTTI Type Descriptor'
PUBLIC	??_R3ResourceCreator@@8				; ResourceCreator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceCreator@@8				; ResourceCreator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceCreator@@8		; ResourceCreator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DefaultResourceCreator@@6B@		; DefaultResourceCreator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDefaultResourceCreator@@@8		; DefaultResourceCreator `RTTI Type Descriptor'
PUBLIC	??_R3DefaultResourceCreator@@8			; DefaultResourceCreator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DefaultResourceCreator@@8			; DefaultResourceCreator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DefaultResourceCreator@@8		; DefaultResourceCreator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ZipFileSystem@@6B@				; ZipFileSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVZipFileSystem@@@8			; ZipFileSystem `RTTI Type Descriptor'
PUBLIC	??_R3ZipFileSystem@@8				; ZipFileSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ZipFileSystem@@8				; ZipFileSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ZipFileSystem@@8			; ZipFileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IndexedFileSystem@@8		; IndexedFileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIndexedFileSystem@@@8			; IndexedFileSystem `RTTI Type Descriptor'
PUBLIC	??_R3IndexedFileSystem@@8			; IndexedFileSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IndexedFileSystem@@8			; IndexedFileSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FileSystem@@8			; FileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFileSystem@@@8				; FileSystem `RTTI Type Descriptor'
PUBLIC	??_R3FileSystem@@8				; FileSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FileSystem@@8				; FileSystem::`RTTI Base Class Array'
PUBLIC	??_R4NativeFileSystem@@6B@			; NativeFileSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVNativeFileSystem@@@8			; NativeFileSystem `RTTI Type Descriptor'
PUBLIC	??_R3NativeFileSystem@@8			; NativeFileSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NativeFileSystem@@8			; NativeFileSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NativeFileSystem@@8		; NativeFileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FileSystem@@6B@				; FileSystem::`RTTI Complete Object Locator'
PUBLIC	??_R4IndexedFileSystem@@6B@			; IndexedFileSystem::`RTTI Complete Object Locator'
PUBLIC	__real@3f800000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	??0ResourceName@@QAE@PBD@Z:PROC			; ResourceName::ResourceName
EXTRN	?hash@ResourceName@@QBEIXZ:PROC			; ResourceName::hash
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__Mtx_init_in_situ:PROC
EXTRN	__Mtx_destroy_in_situ:PROC
EXTRN	__Mtx_lock:PROC
EXTRN	__Mtx_unlock:PROC
EXTRN	__Cnd_init_in_situ:PROC
EXTRN	__Cnd_destroy_in_situ:PROC
EXTRN	?_Throw_C_error@std@@YAXH@Z:PROC		; std::_Throw_C_error
EXTRN	??0ResourceReference@@QAE@AAVResourceHandler@@@Z:PROC ; ResourceReference::ResourceReference
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UAEPAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UAEPAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_EResourceCreator@@UAEPAXI@Z:PROC		; ResourceCreator::`vector deleting destructor'
EXTRN	?createResourceFromZipFileSystem@DefaultResourceCreator@@UAEXAAVResourceHandler@@IAAVZipFileSystem@@@Z:PROC ; DefaultResourceCreator::createResourceFromZipFileSystem
EXTRN	?createResourceFromMemory@DefaultResourceCreator@@UAEXAAVResourceHandler@@PAXI@Z:PROC ; DefaultResourceCreator::createResourceFromMemory
EXTRN	??_EDefaultResourceCreator@@UAEPAXI@Z:PROC	; DefaultResourceCreator::`vector deleting destructor'
EXTRN	??_EFileSystem@@UAEPAXI@Z:PROC			; FileSystem::`vector deleting destructor'
EXTRN	??_EIndexedFileSystem@@UAEPAXI@Z:PROC		; IndexedFileSystem::`vector deleting destructor'
EXTRN	?release@ZipFile@@QAEXXZ:PROC			; ZipFile::release
EXTRN	?init@ZipFileSystem@@UAE_NABVResourceName@@@Z:PROC ; ZipFileSystem::init
EXTRN	?release@ZipFileSystem@@UAEXXZ:PROC		; ZipFileSystem::release
EXTRN	?getResourceSize@ZipFileSystem@@UAE_NABVResourceName@@AAI@Z:PROC ; ZipFileSystem::getResourceSize
EXTRN	?getResourceSize@ZipFileSystem@@UAE_NIAAI@Z:PROC ; ZipFileSystem::getResourceSize
EXTRN	?getResourceData@ZipFileSystem@@UAE_NABVResourceName@@PAXI@Z:PROC ; ZipFileSystem::getResourceData
EXTRN	?getResourceData@ZipFileSystem@@UAE_NIPAXI@Z:PROC ; ZipFileSystem::getResourceData
EXTRN	?getResourceBinaryData@ZipFileSystem@@UAE_NABVResourceName@@PAXI@Z:PROC ; ZipFileSystem::getResourceBinaryData
EXTRN	?getResourceBinaryData@ZipFileSystem@@UAE_NIPAXI@Z:PROC ; ZipFileSystem::getResourceBinaryData
EXTRN	?getResourceName@ZipFileSystem@@QAE?AVResourceName@@I@Z:PROC ; ZipFileSystem::getResourceName
EXTRN	??_EZipFileSystem@@UAEPAXI@Z:PROC		; ZipFileSystem::`vector deleting destructor'
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	?getResourceSize@NativeFileSystem@@UAE_NABVResourceName@@AAI@Z:PROC ; NativeFileSystem::getResourceSize
EXTRN	?getResourceData@NativeFileSystem@@UAE_NABVResourceName@@PAXI@Z:PROC ; NativeFileSystem::getResourceData
EXTRN	?getResourceBinaryData@NativeFileSystem@@UAE_NABVResourceName@@PAXI@Z:PROC ; NativeFileSystem::getResourceBinaryData
EXTRN	??_ENativeFileSystem@@UAEPAXI@Z:PROC		; NativeFileSystem::`vector deleting destructor'
EXTRN	?release@ResourceAsyncLoader@@QAEXXZ:PROC	; ResourceAsyncLoader::release
EXTRN	?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z:PROC ; ResourceAsyncLoader::loadResource
EXTRN	?WildcardMatch@@YA_NPBD0@Z:PROC			; WildcardMatch
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
?uniqueResourceManager@?1??get@ResourceManager@@SAAAV2@XZ@4V2@A DB 090H DUP (?) ; `ResourceManager::get'::`2'::uniqueResourceManager
?$TSS0@?1??get@ResourceManager@@SAAAV2@XZ@4HA DD 01H DUP (?) ; `ResourceManager::get'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R4IndexedFileSystem@@6B@
rdata$r	SEGMENT
??_R4IndexedFileSystem@@6B@ DD 00H			; IndexedFileSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIndexedFileSystem@@@8
	DD	FLAT:??_R3IndexedFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R4FileSystem@@6B@
rdata$r	SEGMENT
??_R4FileSystem@@6B@ DD 00H				; FileSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFileSystem@@@8
	DD	FLAT:??_R3FileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NativeFileSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NativeFileSystem@@8 DD FLAT:??_R0?AVNativeFileSystem@@@8 ; NativeFileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NativeFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2NativeFileSystem@@8
rdata$r	SEGMENT
??_R2NativeFileSystem@@8 DD FLAT:??_R1A@?0A@EA@NativeFileSystem@@8 ; NativeFileSystem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R3NativeFileSystem@@8
rdata$r	SEGMENT
??_R3NativeFileSystem@@8 DD 00H				; NativeFileSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2NativeFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNativeFileSystem@@@8
data$rs	SEGMENT
??_R0?AVNativeFileSystem@@@8 DD FLAT:??_7type_info@@6B@	; NativeFileSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNativeFileSystem@@', 00H
data$rs	ENDS
;	COMDAT ??_R4NativeFileSystem@@6B@
rdata$r	SEGMENT
??_R4NativeFileSystem@@6B@ DD 00H			; NativeFileSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNativeFileSystem@@@8
	DD	FLAT:??_R3NativeFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2FileSystem@@8
rdata$r	SEGMENT
??_R2FileSystem@@8 DD FLAT:??_R1A@?0A@EA@FileSystem@@8	; FileSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3FileSystem@@8
rdata$r	SEGMENT
??_R3FileSystem@@8 DD 00H				; FileSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2FileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFileSystem@@@8
data$rs	SEGMENT
??_R0?AVFileSystem@@@8 DD FLAT:??_7type_info@@6B@	; FileSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFileSystem@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@FileSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FileSystem@@8 DD FLAT:??_R0?AVFileSystem@@@8 ; FileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2IndexedFileSystem@@8
rdata$r	SEGMENT
??_R2IndexedFileSystem@@8 DD FLAT:??_R1A@?0A@EA@IndexedFileSystem@@8 ; IndexedFileSystem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R3IndexedFileSystem@@8
rdata$r	SEGMENT
??_R3IndexedFileSystem@@8 DD 00H			; IndexedFileSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IndexedFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIndexedFileSystem@@@8
data$rs	SEGMENT
??_R0?AVIndexedFileSystem@@@8 DD FLAT:??_7type_info@@6B@ ; IndexedFileSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIndexedFileSystem@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@IndexedFileSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IndexedFileSystem@@8 DD FLAT:??_R0?AVIndexedFileSystem@@@8 ; IndexedFileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IndexedFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ZipFileSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ZipFileSystem@@8 DD FLAT:??_R0?AVZipFileSystem@@@8 ; ZipFileSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ZipFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2ZipFileSystem@@8
rdata$r	SEGMENT
??_R2ZipFileSystem@@8 DD FLAT:??_R1A@?0A@EA@ZipFileSystem@@8 ; ZipFileSystem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IndexedFileSystem@@8
	DD	FLAT:??_R1A@?0A@EA@FileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R3ZipFileSystem@@8
rdata$r	SEGMENT
??_R3ZipFileSystem@@8 DD 00H				; ZipFileSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ZipFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVZipFileSystem@@@8
data$rs	SEGMENT
??_R0?AVZipFileSystem@@@8 DD FLAT:??_7type_info@@6B@	; ZipFileSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVZipFileSystem@@', 00H
data$rs	ENDS
;	COMDAT ??_R4ZipFileSystem@@6B@
rdata$r	SEGMENT
??_R4ZipFileSystem@@6B@ DD 00H				; ZipFileSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVZipFileSystem@@@8
	DD	FLAT:??_R3ZipFileSystem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DefaultResourceCreator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DefaultResourceCreator@@8 DD FLAT:??_R0?AVDefaultResourceCreator@@@8 ; DefaultResourceCreator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DefaultResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R2DefaultResourceCreator@@8
rdata$r	SEGMENT
??_R2DefaultResourceCreator@@8 DD FLAT:??_R1A@?0A@EA@DefaultResourceCreator@@8 ; DefaultResourceCreator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R3DefaultResourceCreator@@8
rdata$r	SEGMENT
??_R3DefaultResourceCreator@@8 DD 00H			; DefaultResourceCreator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DefaultResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDefaultResourceCreator@@@8
data$rs	SEGMENT
??_R0?AVDefaultResourceCreator@@@8 DD FLAT:??_7type_info@@6B@ ; DefaultResourceCreator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDefaultResourceCreator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4DefaultResourceCreator@@6B@
rdata$r	SEGMENT
??_R4DefaultResourceCreator@@6B@ DD 00H			; DefaultResourceCreator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDefaultResourceCreator@@@8
	DD	FLAT:??_R3DefaultResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceCreator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceCreator@@8 DD FLAT:??_R0?AVResourceCreator@@@8 ; ResourceCreator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceCreator@@8
rdata$r	SEGMENT
??_R2ResourceCreator@@8 DD FLAT:??_R1A@?0A@EA@ResourceCreator@@8 ; ResourceCreator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ResourceCreator@@8
rdata$r	SEGMENT
??_R3ResourceCreator@@8 DD 00H				; ResourceCreator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceCreator@@@8
data$rs	SEGMENT
??_R0?AVResourceCreator@@@8 DD FLAT:??_7type_info@@6B@	; ResourceCreator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVResourceCreator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4ResourceCreator@@6B@
rdata$r	SEGMENT
??_R4ResourceCreator@@6B@ DD 00H			; ResourceCreator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVResourceCreator@@@8
	DD	FLAT:??_R3ResourceCreator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$rs	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD FLAT:??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD FLAT:??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_System_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 00H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD FLAT:??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 00H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error@std@@@8
	DD	FLAT:??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$rs	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BK@OGNNAFAB@invalid?5hash?5bucket?5count@
CONST	SEGMENT
??_C@_0BK@OGNNAFAB@invalid?5hash?5bucket?5count@ DB 'invalid hash bucket '
	DB	'count', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GOIGLPKN@unordered_map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BL@GOIGLPKN@unordered_map?1set?5too?5long@ DB 'unordered_map/set t'
	DB	'oo long', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'x', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\xutility', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@1@XZ@4U?$_Constexpr_immortalize_impl@V_Generic_error_category@std@@@1@A
_DATA	SEGMENT
?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@1@XZ@4U?$_Constexpr_immortalize_impl@V_Generic_error_category@std@@@1@A DD FLAT:??_7_Generic_error_category@std@@6B@ ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static
	DD	03H
_DATA	ENDS
;	COMDAT ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
CONST	SEGMENT
??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@ DB '"'
	DB	00H, 'd', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'p', 00H, 'o', 00H, 'p', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BDG@ONCOIODA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@
CONST	SEGMENT
??_C@_1BDG@ONCOIODA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'd', 00H, 'e', 00H
	DB	'q', 00H, 'u', 00H, 'e', 00H, '<', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'A'
	DB	00H, 's', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'R'
	DB	00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'A', 00H, 's', 00H, 'y'
	DB	00H, 'n', 00H, 'c', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ':', 00H, ':', 00H, 'R', 00H, 'e', 00H, 's'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'L', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'o', 00H, 'p', 00H, '_', 00H
	DB	'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'd', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\deque', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
CONST	SEGMENT
??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@ DB 'deque empty before pop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BDI@DOLLGKIL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1BDI@DOLLGKIL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'a'
	DB	00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 'r', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
CONST	SEGMENT
??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@ DB 'cannot derefe'
	DB	'rence end list iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized list iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@
CONST	SEGMENT
??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@ DB '"'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BDK@GJICOFCC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1BDK@GJICOFCC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'H', 00H, 'a'
	DB	00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 'r', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@FLPGDINF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@FLPGDINF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@DIELDAIG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@DIELDAIG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@ DB 'list iterators inco'
	DB	'mpatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIDODEPL@Assets?4zip@
CONST	SEGMENT
??_C@_0L@EIDODEPL@Assets?4zip@ DB 'Assets.zip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7NativeFileSystem@@6B@
CONST	SEGMENT
??_7NativeFileSystem@@6B@ DD FLAT:??_R4NativeFileSystem@@6B@ ; NativeFileSystem::`vftable'
	DD	FLAT:??_ENativeFileSystem@@UAEPAXI@Z
	DD	FLAT:?init@NativeFileSystem@@UAE_NABVResourceName@@@Z
	DD	FLAT:?release@NativeFileSystem@@UAEXXZ
	DD	FLAT:?getResourceSize@NativeFileSystem@@UAE_NABVResourceName@@AAI@Z
	DD	FLAT:?getResourceData@NativeFileSystem@@UAE_NABVResourceName@@PAXI@Z
	DD	FLAT:?getResourceBinaryData@NativeFileSystem@@UAE_NABVResourceName@@PAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GL@IOHNGPIE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GL@IOHNGPIE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\xlocnum', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 05aH ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GL@NDAGNCF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GL@NDAGNCF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Professional\VC\'
	DB	'Tools\MSVC\14.28.29333\include\xlocale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ZipFileSystem@@6B@
CONST	SEGMENT
??_7ZipFileSystem@@6B@ DD FLAT:??_R4ZipFileSystem@@6B@	; ZipFileSystem::`vftable'
	DD	FLAT:??_EZipFileSystem@@UAEPAXI@Z
	DD	FLAT:?init@ZipFileSystem@@UAE_NABVResourceName@@@Z
	DD	FLAT:?release@ZipFileSystem@@UAEXXZ
	DD	FLAT:?getResourceSize@ZipFileSystem@@UAE_NABVResourceName@@AAI@Z
	DD	FLAT:?getResourceData@ZipFileSystem@@UAE_NABVResourceName@@PAXI@Z
	DD	FLAT:?getResourceBinaryData@ZipFileSystem@@UAE_NABVResourceName@@PAXI@Z
	DD	FLAT:?getResourceSize@ZipFileSystem@@UAE_NIAAI@Z
	DD	FLAT:?getResourceData@ZipFileSystem@@UAE_NIPAXI@Z
	DD	FLAT:?getResourceBinaryData@ZipFileSystem@@UAE_NIPAXI@Z
CONST	ENDS
;	COMDAT ??_7IndexedFileSystem@@6B@
CONST	SEGMENT
??_7IndexedFileSystem@@6B@ DD FLAT:??_R4IndexedFileSystem@@6B@ ; IndexedFileSystem::`vftable'
	DD	FLAT:??_EIndexedFileSystem@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7FileSystem@@6B@
CONST	SEGMENT
??_7FileSystem@@6B@ DD FLAT:??_R4FileSystem@@6B@	; FileSystem::`vftable'
	DD	FLAT:??_EFileSystem@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK@ DB '*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7DefaultResourceCreator@@6B@
CONST	SEGMENT
??_7DefaultResourceCreator@@6B@ DD FLAT:??_R4DefaultResourceCreator@@6B@ ; DefaultResourceCreator::`vftable'
	DD	FLAT:??_EDefaultResourceCreator@@UAEPAXI@Z
	DD	FLAT:?getFilePattern@DefaultResourceCreator@@UBEPBDXZ
	DD	FLAT:?createResourceFromZipFileSystem@DefaultResourceCreator@@UAEXAAVResourceHandler@@IAAVZipFileSystem@@@Z
	DD	FLAT:?createResourceFromMemory@DefaultResourceCreator@@UAEXAAVResourceHandler@@PAXI@Z
CONST	ENDS
;	COMDAT ??_7ResourceCreator@@6B@
CONST	SEGMENT
??_7ResourceCreator@@6B@ DD FLAT:??_R4ResourceCreator@@6B@ ; ResourceCreator::`vftable'
	DD	FLAT:??_EResourceCreator@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ?_Min_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@2IB
CONST	SEGMENT
?_Min_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@2IB DD 08H ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Min_buckets
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QAE@ABV01@@Z20
xdata$x	SEGMENT
__CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QAE@ABV01@@Z20 DD 00H
	DD	FLAT:??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0_System_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
xdata$x	SEGMENT
__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20 DD 00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0system_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT __CTA4?AVsystem_error@std@@
xdata$x	SEGMENT
__CTA4?AVsystem_error@std@@ DD 04H
	DD	FLAT:__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
	DD	FLAT:__CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QAE@ABV01@@Z20
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVsystem_error@std@@
xdata$x	SEGMENT
__TI4?AVsystem_error@std@@ DD 00H
	DD	FLAT:??1system_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVsystem_error@std@@
xdata$x	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DD FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DD	FLAT:??_Esystem_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DD FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DD	FLAT:??_E_System_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 'f', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, '1', 00H, '4', 00H, '.', 00H, '2', 00H, '8', 00H, '.', 00H
	DB	'2', 00H, '9', 00H, '3', 00H, '3', 00H, '3', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'x', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r'
	DB	00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Professional\VC'
	DB	'\Tools\MSVC\14.28.29333\include\xmemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA DD 084H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z$0
__ehfuncinfo$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z$2
__ehfuncinfo$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z$0
__ehfuncinfo$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z$0
__ehfuncinfo$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z$0
__ehfuncinfo$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ResourceAsyncLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ResourceAsyncLoader@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceAsyncLoader@@QAE@XZ$0
__ehfuncinfo$??0ResourceAsyncLoader@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ResourceAsyncLoader@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ$1
__ehfuncinfo$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ZipFileSystem@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ZipFileSystem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ZipFileSystem@@QAE@XZ$0
__ehfuncinfo$??0ZipFileSystem@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ZipFileSystem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1ZipFile@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$1
__ehfuncinfo$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$1
__ehfuncinfo$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$1
__ehfuncinfo$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$1
__ehfuncinfo$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?init@ResourceManager@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init@ResourceManager@@QAE_NXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@ResourceManager@@QAE_NXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?init@ResourceManager@@QAE_NXZ$2
__ehfuncinfo$?init@ResourceManager@@QAE_NXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?init@ResourceManager@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get@ResourceManager@@SAAAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get@ResourceManager@@SAAAV1@XZ$0
__ehfuncinfo$?get@ResourceManager@@SAAAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get@ResourceManager@@SAAAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ResourceManager@@AAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ResourceManager@@AAE@XZ$0
__ehfuncinfo$??0ResourceManager@@AAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ResourceManager@@AAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z$0
__ehfuncinfo$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0system_error@std@@QAE@Verror_code@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@@Z$0
__ehfuncinfo$??0system_error@std@@QAE@Verror_code@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0system_error@std@@QAE@Verror_code@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$1
__ehfuncinfo$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z PROC ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBIVResourceHandler@@@std@@U?$pair@IVResourceHandler@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@$$CBIVResourceHandler@@@std@@U?$pair@IVResourceHandler@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::construct<std::pair<unsigned int const ,ResourceHandler>,std::pair<unsigned int,ResourceHandler> >, COMDAT

; 700  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int,ResourceHandler> >
	add	esp, 4
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0IVResourceHandler@@$0A@@?$pair@$$CBIVResourceHandler@@@std@@QAE@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::pair<unsigned int const ,ResourceHandler>::pair<unsigned int const ,ResourceHandler><unsigned int,ResourceHandler,0>

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 702  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U?$pair@$$CBIVResourceHandler@@@std@@U?$pair@IVResourceHandler@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::construct<std::pair<unsigned int const ,ResourceHandler>,std::pair<unsigned int,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::~_Range_eraser, COMDAT
; _this$ = ecx

; 1114 :         ~_Range_eraser() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1115 :             _List._Unchecked_erase(_First, _Next);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR tv72[ebp]
	call	?_Unchecked_erase@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_erase

; 1116 :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::~_Range_eraser
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Bump_erased, COMDAT
; _this$ = ecx

; 1110 :         void _Bump_erased() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1111 :             _Next = _Next->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], eax

; 1112 :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Bump_erased
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__List_$ = 8						; size = 4
__First_$ = 12						; size = 4
??0_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Range_eraser, COMDAT
; _this$ = ecx

; 1108 :             : _List(_List_), _First(_First_), _Next(_First_) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __List_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First_$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First_$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Range_eraser
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z
_TEXT	SEGMENT
tv76 = -212						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>, COMDAT
; _this$ = ecx

; 162  :         noexcept(_Nothrow_compare<_Keyeq, _Keyty1, _Keyty2>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 163  :         // test if _Keyval1 NOT equal to _Keyval2
; 164  :         return !static_cast<bool>(_Mypair._Myval2._Get_first()(_Keyval1, _Keyval2));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QBEABU?$equal_to@I@2@XZ ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first
	mov	DWORD PTR tv73[ebp], eax
	mov	eax, DWORD PTR __Keyval2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv73[ebp]
	call	??R?$equal_to@I@std@@QBE_NABI0@Z	; std::equal_to<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv76[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv76[ebp]

; 165  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??1_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::~_Clear_guard, COMDAT
; _this$ = ecx

; 497  :         ~_Clear_guard() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 498  :             if (_Target) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Clear_guar

; 499  :                 _Target->clear();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::clear
$LN3@Clear_guar:

; 500  :             }
; 501  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::~_Clear_guard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Target_$ = 8						; size = 4
??0_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@QAV12@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::_Clear_guard, COMDAT
; _this$ = ecx

; 492  :         explicit _Clear_guard(_Hash* const _Target_) : _Target(_Target_) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Target_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@QAV12@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::_Clear_guard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAABQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$exchange@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@$$T@std@@YAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -8						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@$$T@std@@YAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::nullptr_t>, COMDAT

; 596  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 597  :     // assign _New_val to _Val, return previous _Val
; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __New_val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 600  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 601  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@$$T@std@@YAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$_Fnv1a_append_value@W4ResourceType@@@std@@YAIIABW4ResourceType@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??$_Fnv1a_append_value@W4ResourceType@@@std@@YAIIABW4ResourceType@@@Z PROC ; std::_Fnv1a_append_value<enum ResourceType>, COMDAT

; 2167 :     const size_t _Val, const _Kty& _Keyval) noexcept { // accumulate _Keyval into partial FNV-1a hash _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2168 :     static_assert(is_trivial_v<_Kty>, "Only trivial types can be directly hashed.");
; 2169 :     return _Fnv1a_append_bytes(_Val, &reinterpret_cast<const unsigned char&>(_Keyval), sizeof(_Kty));

	push	4
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Fnv1a_append_bytes@std@@YAIIQBEI@Z	; std::_Fnv1a_append_bytes
	add	esp, 12					; 0000000cH

; 2170 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fnv1a_append_value@W4ResourceType@@@std@@YAIIABW4ResourceType@@@Z ENDP ; std::_Fnv1a_append_value<enum ResourceType>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >, COMDAT

; 1241 : constexpr void _Verify_range(const _Ty* const _First, const _Ty* const _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4
$LN4@Verify_ran:

; 1242 :     // special case range verification for pointers
; 1243 :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	mov	esi, esp
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran

; 1244 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >, COMDAT

; 1241 : constexpr void _Verify_range(const _Ty* const _First, const _Ty* const _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4
$LN4@Verify_ran:

; 1242 :     // special case range verification for pointers
; 1243 :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	mov	esi, esp
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran

; 1244 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z PROC ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >, COMDAT

; 1241 : constexpr void _Verify_range(const _Ty* const _First, const _Ty* const _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4
$LN4@Verify_ran:

; 1242 :     // special case range verification for pointers
; 1243 :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_0GM@MAOIBKAD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	mov	esi, esp
	push	0
	push	1243					; 000004dbH
	push	OFFSET ??_C@_1NI@EIPGEIKG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran

; 1244 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ENDP ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBIVResourceHandler@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBIVResourceHandler@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::destroy<std::pair<unsigned int const ,ResourceHandler> >, COMDAT

; 705  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 706  :         _Ptr->~_Uty();
; 707  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBIVResourceHandler@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::destroy<std::pair<unsigned int const ,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBII@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@QAU?$pair@$$CBII@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBII@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@QAU?$pair@$$CBII@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::destroy<std::pair<unsigned int const ,unsigned int> >, COMDAT

; 705  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 706  :         _Ptr->~_Uty();
; 707  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBII@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@QAU?$pair@$$CBII@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::destroy<std::pair<unsigned int const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBII@std@@@std@@YAPAU?$pair@$$CBII@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBII@std@@@std@@YAPAU?$pair@$$CBII@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned int const ,unsigned int> >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBII@std@@@std@@YAPAU?$pair@$$CBII@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned int const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 694  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 695  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 697  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z PROC ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>, COMDAT

; 56   :     static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val) noexcept { // extract key from element value

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4

; 57   :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ENDP ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
_TEXT	SEGMENT
tv132 = -228						; size = 4
tv134 = -224						; size = 4
tv136 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
_<_Vals_0>$ = 12					; size = 4
??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > ><std::pair<unsigned int,ResourceHandler> >, COMDAT
; _this$ = ecx

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Al_$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 586  :         this->_Allocate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Allocate

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int,ResourceHandler> >
	add	esp, 4
	mov	DWORD PTR tv136[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 8
	push	edx
	call	??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv132[ebp], ecx
	mov	edx, DWORD PTR tv136[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	mov	ecx, DWORD PTR tv132[ebp]
	push	ecx
	call	??$construct@U?$pair@$$CBIVResourceHandler@@@std@@U?$pair@IVResourceHandler@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::construct<std::pair<unsigned int const ,ResourceHandler>,std::pair<unsigned int,ResourceHandler> >
	add	esp, 12					; 0000000cH

; 588  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > ><std::pair<unsigned int,ResourceHandler> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv91 = -224						; size = 4
tv93 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >, COMDAT
; _this$ = ecx

; 590  :     ~_List_node_emplace_op2() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 591  :         if (this->_Ptr != pointer{}) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@List_node_

; 592  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 8
	push	ecx
	call	??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >
	add	esp, 4
	mov	DWORD PTR tv93[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv91[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR tv91[ebp]
	push	edx
	call	??$destroy@U?$pair@$$CBIVResourceHandler@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::destroy<std::pair<unsigned int const ,ResourceHandler> >
	add	esp, 8
$LN1@List_node_:

; 593  :         }
; 594  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >, COMDAT
; _this$ = ecx

; 1056 :     ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1057 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Alloc_cons

; 1058 :             _Al.deallocate(_Ptr, 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	call	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEXQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::deallocate
$LN3@Alloc_cons:

; 1059 :         }
; 1060 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Allocate, COMDAT
; _this$ = ecx

; 1051 :     void _Allocate() { // disengage *this, then allocate a new memory block

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1052 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1053 :         _Ptr = _Al.allocate(1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	push	1
	mov	ecx, DWORD PTR tv73[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1054 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Release, COMDAT
; _this$ = ecx

; 1047 :     _NODISCARD pointer _Release() noexcept { // disengage *this and return contained pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1048 :         return _STD exchange(_Ptr, nullptr);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$exchange@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@$$T@std@@YAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::nullptr_t>
	add	esp, 8

; 1049 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al_$ = 8						; size = 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >, COMDAT
; _this$ = ecx

; 1045 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+12], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z
_TEXT	SEGMENT
tv143 = -256						; size = 4
__Bucket_lo$ = -56					; size = 4
__End$ = -44						; size = 4
__Where$ = -32						; size = 4
__Bucket$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
__Hashval$ = 16						; size = 4
??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find_last<unsigned int>, COMDAT
; _this$ = ecx

; 1652 :     _NODISCARD _Hash_find_last_result<_Nodeptr> _Find_last(const _Keyty& _Keyval, const size_t _Hashval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1653 :         // find the insertion point for _Keyval and whether an element identical to _Keyval is already in the container
; 1654 :         const size_type _Bucket = _Hashval & _Mask;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Hashval$[ebp]
	and	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR __Bucket$[ebp], ecx

; 1655 :         _Nodeptr _Where         = _Vec._Mypair._Myval2._Myfirst[(_Bucket << 1) + 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+eax*4+4]
	mov	DWORD PTR __Where$[ebp], eax

; 1656 :         const _Nodeptr _End     = _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __End$[ebp], ecx

; 1657 :         if (_Where == _End) {

	mov	eax, DWORD PTR __Where$[ebp]
	cmp	eax, DWORD PTR __End$[ebp]
	jne	SHORT $LN5@Find_last

; 1658 :             return {_End, _Nodeptr{}};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@Find_last
$LN5@Find_last:

; 1659 :         }
; 1660 : 
; 1661 :         const _Nodeptr _Bucket_lo = _Vec._Mypair._Myval2._Myfirst[_Bucket << 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR __Bucket_lo$[ebp], eax
$LN4@Find_last:

; 1662 :         for (;;) {
; 1663 :             // Search backwards to maintain sorted [_Bucket_lo, _Bucket_hi] when !_Standard
; 1664 :             if (!_Traitsobj(_Keyval, _Traits::_Kfn(_Where->_Myval))) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	add	ecx, 8
	push	ecx
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv143[ebp]
	call	??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@Find_last

; 1665 :                 if _CONSTEXPR_IF (!_Traits::_Standard) {
; 1666 :                     if (_Traitsobj(_Traits::_Kfn(_Where->_Myval), _Keyval)) {
; 1667 :                         return {_Where->_Next, _Nodeptr{}};
; 1668 :                     }
; 1669 :                 }
; 1670 : 
; 1671 :                 return {_Where->_Next, _Where};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Find_last
$LN6@Find_last:

; 1672 :             }
; 1673 : 
; 1674 :             if (_Where == _Bucket_lo) {

	mov	eax, DWORD PTR __Where$[ebp]
	cmp	eax, DWORD PTR __Bucket_lo$[ebp]
	jne	SHORT $LN7@Find_last

; 1675 :                 return {_Where, _Nodeptr{}};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Find_last
$LN7@Find_last:

; 1676 :             }
; 1677 : 
; 1678 :             _Where = _Where->_Prev;

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Where$[ebp], ecx

; 1679 :         }

	jmp	SHORT $LN4@Find_last
$LN1@Find_last:

; 1680 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find_last<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@IU?$pair@IVResourceHandler@@@std@@@std@@SAABIABU?$pair@IVResourceHandler@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Extract@?$_In_place_key_extract_map@IU?$pair@IVResourceHandler@@@std@@@std@@SAABIABU?$pair@IVResourceHandler@@@2@@Z PROC ; std::_In_place_key_extract_map<unsigned int,std::pair<unsigned int,ResourceHandler> >::_Extract, COMDAT

; 1999 :     static const _Key& _Extract(const pair<_First, _Second>& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 2000 :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 2001 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Extract@?$_In_place_key_extract_map@IU?$pair@IVResourceHandler@@@std@@@std@@SAABIABU?$pair@IVResourceHandler@@@2@@Z ENDP ; std::_In_place_key_extract_map<unsigned int,std::pair<unsigned int,ResourceHandler> >::_Extract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z PROC ; std::move<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::move<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z PROC ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z ENDP ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$_Hash_representation@W4ResourceType@@@std@@YAIABW4ResourceType@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??$_Hash_representation@W4ResourceType@@@std@@YAIABW4ResourceType@@@Z PROC ; std::_Hash_representation<enum ResourceType>, COMDAT

; 2174 : _NODISCARD size_t _Hash_representation(const _Kty& _Keyval) noexcept { // bitwise hashes the representation of a key

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2175 :     return _Fnv1a_append_value(_FNV_offset_basis, _Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	push	-2128831035				; 811c9dc5H
	call	??$_Fnv1a_append_value@W4ResourceType@@@std@@YAIIABW4ResourceType@@@Z ; std::_Fnv1a_append_value<enum ResourceType>
	add	esp, 8

; 2176 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Hash_representation@W4ResourceType@@@std@@YAIABW4ResourceType@@@Z ENDP ; std::_Hash_representation<enum ResourceType>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@QAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@QAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::destroy<std::pair<enum ResourceType const ,ResourceCreator *> >, COMDAT

; 705  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 706  :         _Ptr->~_Uty();
; 707  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@QAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::destroy<std::pair<enum ResourceType const ,ResourceCreator *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@YAPAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@YAPAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@0@AAU10@@Z PROC ; std::addressof<std::pair<enum ResourceType const ,ResourceCreator *> >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@YAPAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<enum ResourceType const ,ResourceCreator *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAI@std@@YA$$QAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAI@std@@YA$$QAIAAI@Z PROC			; std::move<unsigned int &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAI@std@@YA$$QAIAAI@Z ENDP			; std::move<unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@AAV10@@Z PROC ; std::move<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@AAV10@@Z ENDP ; std::move<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
tv70 = -212						; size = 4
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>, COMDAT
; _this$ = ecx

; 1440 :     /* _CONSTEXPR20_DYNALLOC */ void _Emplace_back(_Types&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1441 :         // construct a new element at *_Last and increment
; 1442 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv70[ebp], edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	push	ecx
	call	??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@ABV10@@Z ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
	add	esp, 8

; 1443 :         ++_Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1444 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Release, COMDAT
; _this$ = ecx

; 1446 :     /* _CONSTEXPR20_DYNALLOC */ _NoThrowFwdIt _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1447 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1448 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1449 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>, COMDAT
; _this$ = ecx

; 1435 :     /* _CONSTEXPR20_DYNALLOC */ ~_Uninitialized_backout() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1436 :         _Destroy_range(_First, _Last);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	add	esp, 8

; 1437 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Dest$ = 8						; size = 4
??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>, COMDAT
; _this$ = ecx

; 1428 :     constexpr explicit _Uninitialized_backout(_NoThrowFwdIt _Dest) : _First(_Dest), _Last(_Dest) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>, COMDAT

; 1300 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1301 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1302 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1303 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1304 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1305 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1306 :     } else {
; 1307 :         return static_cast<_Iter&&>(_It);
; 1308 :     }
; 1309 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>, COMDAT

; 1264 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1265 :     // check that [_First, _Last) forms an iterator range
; 1266 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1267 :         _Verify_range(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	add	esp, 8

; 1268 :     }
; 1269 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
tv70 = -212						; size = 4
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>, COMDAT
; _this$ = ecx

; 1440 :     /* _CONSTEXPR20_DYNALLOC */ void _Emplace_back(_Types&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1441 :         // construct a new element at *_Last and increment
; 1442 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv70[ebp], edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	push	ecx
	call	??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@ABV10@@Z ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
	add	esp, 8

; 1443 :         ++_Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1444 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Release, COMDAT
; _this$ = ecx

; 1446 :     /* _CONSTEXPR20_DYNALLOC */ _NoThrowFwdIt _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1447 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1448 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1449 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>, COMDAT
; _this$ = ecx

; 1435 :     /* _CONSTEXPR20_DYNALLOC */ ~_Uninitialized_backout() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1436 :         _Destroy_range(_First, _Last);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 1437 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Dest$ = 8						; size = 4
??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>, COMDAT
; _this$ = ecx

; 1428 :     constexpr explicit _Uninitialized_backout(_NoThrowFwdIt _Dest) : _First(_Dest), _Last(_Dest) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>, COMDAT

; 1300 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1301 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1302 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1303 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1304 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1305 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1306 :     } else {
; 1307 :         return static_cast<_Iter&&>(_It);
; 1308 :     }
; 1309 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>, COMDAT

; 1264 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1265 :     // check that [_First, _Last) forms an iterator range
; 1266 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1267 :         _Verify_range(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	add	esp, 8

; 1268 :     }
; 1269 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
tv70 = -212						; size = 4
tv72 = -208						; size = 4
_this$ = -8						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>, COMDAT
; _this$ = ecx

; 1440 :     /* _CONSTEXPR20_DYNALLOC */ void _Emplace_back(_Types&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1441 :         // construct a new element at *_Last and increment
; 1442 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ; std::forward<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv70[ebp], edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	push	ecx
	call	??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@ABV12@@std@@YAXAAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@ABV10@@Z ; std::_Construct_in_place<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
	add	esp, 8

; 1443 :         ++_Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1444 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Release, COMDAT
; _this$ = ecx

; 1446 :     /* _CONSTEXPR20_DYNALLOC */ _NoThrowFwdIt _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1447 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1448 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1449 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>, COMDAT
; _this$ = ecx

; 1435 :     /* _CONSTEXPR20_DYNALLOC */ ~_Uninitialized_backout() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1436 :         _Destroy_range(_First, _Last);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	add	esp, 8

; 1437 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Dest$ = 8						; size = 4
??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>, COMDAT
; _this$ = ecx

; 1428 :     constexpr explicit _Uninitialized_backout(_NoThrowFwdIt _Dest) : _First(_Dest), _Last(_Dest) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>, COMDAT

; 1300 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1301 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1302 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1303 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1304 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1305 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1306 :     } else {
; 1307 :         return static_cast<_Iter&&>(_It);
; 1308 :     }
; 1309 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>, COMDAT

; 1264 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 1265 :     // check that [_First, _Last) forms an iterator range
; 1266 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1267 :         _Verify_range(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YAXQBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ; std::_Verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
	add	esp, 8

; 1268 :     }
; 1269 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Ptr_container$ = -20					; size = 4
__Block_size$ = -8					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax

; 116  :     if (_Block_size <= _Bytes) {

	mov	eax, DWORD PTR __Block_size$[ebp]
	cmp	eax, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m

; 117  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	eax, DWORD PTR __Block_size$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	mov	esi, esp
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	eax, eax
	jne	SHORT $LN4@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH

; 127  : #endif // _DEBUG
; 128  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABQAD@std@@YAABQADABQAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAD@std@@YAABQADABQAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABQAD@std@@YAABQADABQAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>, COMDAT

; 270  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >, COMDAT

; 316  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 317  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 8
	push	eax
	call	??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBIVResourceHandler@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@QAU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::destroy<std::pair<unsigned int const ,ResourceHandler> >
	add	esp, 8

; 318  :         _Freenode0(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	add	esp, 8

; 319  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > ><std::pair<unsigned int const ,ResourceHandler> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > ><std::pair<unsigned int const ,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > ><std::pair<unsigned int const ,ResourceHandler> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z PROC ; std::forward<std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QAMAAM@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@M@std@@YA$$QAMAAM@Z PROC			; std::forward<float>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@M@std@@YA$$QAMAAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>, COMDAT

; 270  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > ><std::pair<enum ResourceType const ,ResourceCreator *> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > ><std::pair<enum ResourceType const ,ResourceCreator *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > ><std::pair<enum ResourceType const ,ResourceCreator *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z PROC ; std::forward<std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>, COMDAT

; 270  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >, COMDAT

; 316  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 317  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 8
	push	eax
	call	??$addressof@U?$pair@$$CBII@std@@@std@@YAPAU?$pair@$$CBII@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBII@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@QAU?$pair@$$CBII@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::destroy<std::pair<unsigned int const ,unsigned int> >
	add	esp, 8

; 318  :         _Freenode0(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
	add	esp, 8

; 319  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBII@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBII@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > ><std::pair<unsigned int const ,unsigned int> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBII@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > ><std::pair<unsigned int const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBII@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > ><std::pair<unsigned int const ,unsigned int> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z PROC ; std::forward<std::allocator<std::pair<unsigned int const ,unsigned int> > const &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1003 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1004 :     // deallocate a plain pointer using an allocator
; 1005 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1006 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1007 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	add	esp, 12					; 0000000cH

; 1008 :     } else {
; 1009 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1010 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1011 :     }
; 1012 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$_Find@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@ABII@Z
_TEXT	SEGMENT
$T1 = -228						; size = 8
__Target$2 = -20					; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
__Hashval$ = 12						; size = 4
??$_Find@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@ABII@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find<unsigned int>, COMDAT
; _this$ = ecx

; 1312 :     _Nodeptr _Find(const _Keyty& _Keyval, const size_t _Hashval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1313 :         if _CONSTEXPR_IF (_Traits::_Multi) {
; 1314 :             return _Find_first(_Keyval, _Hashval);
; 1315 :         } else {
; 1316 :             // use _Find_last for unique containers to avoid increase in code size of instantiating _Find_first
; 1317 :             auto _Target = _Find_last(_Keyval, _Hashval)._Duplicate;

	mov	eax, DWORD PTR __Hashval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find_last<unsigned int>
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR __Target$2[ebp], eax

; 1318 :             if (_Target) {

	cmp	DWORD PTR __Target$2[ebp], 0
	je	SHORT $LN2@Find

; 1319 :                 return _Target;

	mov	eax, DWORD PTR __Target$2[ebp]
	jmp	SHORT $LN1@Find
$LN2@Find:

; 1320 :             }
; 1321 : 
; 1322 :             return _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
$LN1@Find:

; 1323 :         }
; 1324 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Find@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@ABII@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>, COMDAT
; _this$ = ecx

; 155  :     _NODISCARD size_t operator()(const _Keyty& _Keyval) const noexcept(_Nothrow_hash<_Hasher, _Keyty>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 156  :         // hash _Keyval to size_t value
; 157  :         return static_cast<size_t>(_Mypair._Get_first()(_Keyval));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QBEABU?$hash@I@2@XZ ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	call	??R?$_Conditionally_enabled_hash@I$00@std@@QBEIABI@Z ; std::_Conditionally_enabled_hash<unsigned int,1>::operator()

; 158  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
_TEXT	SEGMENT
tv188 = -380						; size = 4
tv95 = -380						; size = 4
tv199 = -376						; size = 4
tv192 = -376						; size = 4
tv140 = -376						; size = 4
tv183 = -372						; size = 4
tv142 = -372						; size = 4
tv90 = -372						; size = 4
tv75 = -372						; size = 4
$T2 = -364						; size = 4
$T3 = -352						; size = 12
$T4 = -329						; size = 1
$T5 = -320						; size = 8
$T6 = -304						; size = 12
$T7 = -281						; size = 1
__Newnode$8 = -80					; size = 8
__Target$9 = -64					; size = 8
__Hashval$10 = -48					; size = 4
__Keyval$11 = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::emplace<std::pair<unsigned int,ResourceHandler> >, COMDAT
; _this$ = ecx

; 592  :     conditional_t<_Multi, iterator, pair<iterator, bool>> emplace(_Valtys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 593  :         // try to insert value_type(_Vals...)
; 594  :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Remove_cvref_t<_Valtys>...>;
; 595  :         if constexpr (_Multi) {
; 596  :             _Check_max_size();
; 597  :             _List_node_emplace_op2<_Alnode> _Newnode(_List._Getal(), _STD forward<_Valtys>(_Vals)...);
; 598  :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 599  :             const auto _Hashval = _Traitsobj(_Keyval);
; 600  :             if (_Check_rehash_required_1()) {
; 601  :                 _Rehash_for_1();
; 602  :             }
; 603  : 
; 604  :             const auto _Target = _Find_last(_Keyval, _Hashval);
; 605  :             return _List._Make_iter(_Insert_new_node_before(_Hashval, _Target._Insert_before, _Newnode._Release()));
; 606  :         } else if constexpr (_In_place_key_extractor::_Extractable) {
; 607  :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	?_Extract@?$_In_place_key_extract_map@IU?$pair@IVResourceHandler@@@std@@@std@@SAABIABU?$pair@IVResourceHandler@@@2@@Z ; std::_In_place_key_extract_map<unsigned int,std::pair<unsigned int,ResourceHandler> >::_Extract
	add	esp, 4
	mov	DWORD PTR __Keyval$11[ebp], eax

; 608  :             const auto _Hashval = _Traitsobj(_Keyval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR __Keyval$11[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv75[ebp]
	call	??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
	mov	DWORD PTR __Hashval$10[ebp], eax

; 609  :             auto _Target        = _Find_last(_Keyval, _Hashval);

	mov	eax, DWORD PTR __Hashval$10[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$11[ebp]
	push	ecx
	lea	edx, DWORD PTR __Target$9[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find_last<unsigned int>

; 610  :             if (_Target._Duplicate) {

	cmp	DWORD PTR __Target$9[ebp+4], 0
	je	SHORT $LN2@emplace

; 611  :                 return {_List._Make_iter(_Target._Duplicate), false};

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR __Target$9[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR tv90[ebp]
	call	?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Make_iter
	mov	DWORD PTR tv192[ebp], eax
	mov	eax, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	BYTE PTR $T7[ebp], 0
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	edx, DWORD PTR tv95[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool,0>
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@emplace
$LN2@emplace:

; 612  :             }
; 613  : 
; 614  :             _Check_max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_max_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_max_size

; 615  :             // invalidates _Keyval:
; 616  :             _List_node_emplace_op2<_Alnode> _Newnode(_List._Getal(), _STD forward<_Valtys>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int,ResourceHandler> >
	add	esp, 4
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	mov	DWORD PTR tv140[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	push	ecx
	mov	edx, DWORD PTR tv140[ebp]
	push	edx
	lea	ecx, DWORD PTR __Newnode$8[ebp]
	call	??$?0U?$pair@IVResourceHandler@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > ><std::pair<unsigned int,ResourceHandler> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 617  :             if (_Check_rehash_required_1()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE_NXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_rehash_required_1
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@emplace

; 618  :                 _Rehash_for_1();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rehash_for_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Rehash_for_1

; 619  :                 _Target = _Find_last(_Traits::_Kfn(_Newnode._Ptr->_Myval), _Hashval);

	mov	eax, DWORD PTR __Hashval$10[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$8[ebp+4]
	add	ecx, 8
	push	ecx
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find_last@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Hash_find_last_result@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@ABII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find_last<unsigned int>
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Target$9[ebp], ecx
	mov	DWORD PTR __Target$9[ebp+4], edx
$LN3@emplace:

; 620  :             }
; 621  : 
; 622  :             return {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv183[ebp], eax
	lea	ecx, DWORD PTR __Newnode$8[ebp]
	call	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::_Release
	push	eax
	mov	ecx, DWORD PTR __Target$9[ebp]
	push	ecx
	mov	edx, DWORD PTR __Hashval$10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@IQAU32@0@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Insert_new_node_before
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR tv183[ebp]
	call	?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Make_iter
	mov	DWORD PTR tv199[ebp], eax
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv188[ebp], ecx
	mov	BYTE PTR $T4[ebp], 1
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR tv188[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool><std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool,0>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Newnode$8[ebp]
	call	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@emplace:

; 623  :                 _List._Make_iter(_Insert_new_node_before(_Hashval, _Target._Insert_before, _Newnode._Release())), true};
; 624  :         } else {
; 625  :             _List_node_emplace_op2<_Alnode> _Newnode(_List._Getal(), _STD forward<_Valtys>(_Vals)...);
; 626  :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 627  :             const auto _Hashval = _Traitsobj(_Keyval);
; 628  :             auto _Target        = _Find_last(_Keyval, _Hashval);
; 629  :             if (_Target._Duplicate) {
; 630  :                 return {_List._Make_iter(_Target._Duplicate), false};
; 631  :             }
; 632  : 
; 633  :             _Check_max_size();
; 634  :             if (_Check_rehash_required_1()) {
; 635  :                 _Rehash_for_1();
; 636  :                 _Target = _Find_last(_Traits::_Kfn(_Newnode._Ptr->_Myval), _Hashval);
; 637  :             }
; 638  : 
; 639  :             return {
; 640  :                 _List._Make_iter(_Insert_new_node_before(_Hashval, _Target._Insert_before, _Newnode._Release())), true};
; 641  :         }
; 642  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN14@emplace:
	DD	2
	DD	$LN13@emplace
$LN13@emplace:
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN10@emplace
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN11@emplace
$LN11@emplace:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN10@emplace:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z$2:
	lea	ecx, DWORD PTR __Newnode$8[ebp]
	jmp	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::emplace<std::pair<unsigned int,ResourceHandler> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned int,ResourceHandler> >, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned int,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$?0AAIVResourceHandler@@$0A@@?$pair@IVResourceHandler@@@std@@QAE@AAI$$QAVResourceHandler@@@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAIVResourceHandler@@$0A@@?$pair@IVResourceHandler@@@std@@QAE@AAI$$QAVResourceHandler@@@Z PROC ; std::pair<unsigned int,ResourceHandler>::pair<unsigned int,ResourceHandler><unsigned int &,ResourceHandler,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAI@std@@YAAAIAAI@Z		; std::forward<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ; std::forward<ResourceHandler>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	call	??0ResourceHandler@@QAE@$$QAV0@@Z	; ResourceHandler::ResourceHandler
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAIVResourceHandler@@$0A@@?$pair@IVResourceHandler@@@std@@QAE@AAI$$QAVResourceHandler@@@Z ENDP ; std::pair<unsigned int,ResourceHandler>::pair<unsigned int,ResourceHandler><unsigned int &,ResourceHandler,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z PROC ; std::forward<ResourceHandler>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ENDP ; std::forward<ResourceHandler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@AAI@std@@YAAAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAI@std@@YAAAIAAI@Z PROC			; std::forward<unsigned int &>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@AAI@std@@YAAAIAAI@Z ENDP			; std::forward<unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$_Fnv1a_append_value@I@std@@YAIIABI@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??$_Fnv1a_append_value@I@std@@YAIIABI@Z PROC		; std::_Fnv1a_append_value<unsigned int>, COMDAT

; 2167 :     const size_t _Val, const _Kty& _Keyval) noexcept { // accumulate _Keyval into partial FNV-1a hash _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2168 :     static_assert(is_trivial_v<_Kty>, "Only trivial types can be directly hashed.");
; 2169 :     return _Fnv1a_append_bytes(_Val, &reinterpret_cast<const unsigned char&>(_Keyval), sizeof(_Kty));

	push	4
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Fnv1a_append_bytes@std@@YAIIQBEI@Z	; std::_Fnv1a_append_bytes
	add	esp, 12					; 0000000cH

; 2170 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fnv1a_append_value@I@std@@YAIIABI@Z ENDP		; std::_Fnv1a_append_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >, COMDAT

; 316  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 317  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 8
	push	eax
	call	??$addressof@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@YAPAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@0@AAU10@@Z ; std::addressof<std::pair<enum ResourceType const ,ResourceCreator *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@QAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::destroy<std::pair<enum ResourceType const ,ResourceCreator *> >
	add	esp, 8

; 318  :         _Freenode0(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 319  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BE@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0BE@@std@@YAII@Z PROC		; std::_Get_size_of_n<20>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 214748364 ; 0cccccccH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 214748364	; 0cccccccH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 20
$LN3@Get_size_o:

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0BE@@std@@YAII@Z ENDP		; std::_Get_size_of_n<20>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$swap@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@$0A@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@$0A@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z PROC ; std::swap<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,0>, COMDAT

; 103  :     is_nothrow_move_constructible_v<_Ty>&& is_nothrow_move_assignable_v<_Ty>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 104  :     _Ty _Tmp = _STD move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::move<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 105  :     _Left    = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::move<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 106  :     _Right   = _STD move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$move@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YA$$QAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::move<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 107  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@$0A@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ENDP ; std::swap<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$_Swap_adl@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z PROC ; std::_Swap_adl<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>, COMDAT

; 111  : _CONSTEXPR20 void _Swap_adl(_Ty& _Left, _Ty& _Right) noexcept(_Is_nothrow_swappable<_Ty>::value) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 112  :     swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@$0A@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::swap<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,0>
	add	esp, 8

; 113  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Swap_adl@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ENDP ; std::_Swap_adl<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??$_Kfn@$$CBW4ResourceType@@PAVResourceCreator@@@?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@SAABW4ResourceType@@ABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBW4ResourceType@@PAVResourceCreator@@@?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@SAABW4ResourceType@@ABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z PROC ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Kfn<enum ResourceType const ,ResourceCreator *>, COMDAT

; 56   :     static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val) noexcept { // extract key from element value

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4

; 57   :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 58   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Kfn@$$CBW4ResourceType@@PAVResourceCreator@@@?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@SAABW4ResourceType@@ABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ENDP ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Kfn<enum ResourceType const ,ResourceCreator *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::~_Range_eraser, COMDAT
; _this$ = ecx

; 1114 :         ~_Range_eraser() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1115 :             _List._Unchecked_erase(_First, _Next);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR tv72[ebp]
	call	?_Unchecked_erase@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_erase

; 1116 :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::~_Range_eraser
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Bump_erased, COMDAT
; _this$ = ecx

; 1110 :         void _Bump_erased() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1111 :             _Next = _Next->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], eax

; 1112 :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Bump_erased
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__List_$ = 8						; size = 4
__First_$ = 12						; size = 4
??0_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Range_eraser, COMDAT
; _this$ = ecx

; 1108 :             : _List(_List_), _First(_First_), _Next(_First_) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __List_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First_$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First_$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Range_eraser
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$swap@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z PROC ; std::swap<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,0>, COMDAT

; 103  :     is_nothrow_move_constructible_v<_Ty>&& is_nothrow_move_assignable_v<_Ty>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 104  :     _Ty _Tmp = _STD move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 105  :     _Left    = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 106  :     _Right   = _STD move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$move@AAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA$$QAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@AAPAV10@@Z ; std::move<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 107  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ENDP ; std::swap<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Swap_adl<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>, COMDAT

; 111  : _CONSTEXPR20 void _Swap_adl(_Ty& _Left, _Ty& _Right) noexcept(_Is_nothrow_swappable<_Ty>::value) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 112  :     swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::swap<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,0>
	add	esp, 8

; 113  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Swap_adl<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$swap@I$0A@@std@@YAXAAI0@Z
_TEXT	SEGMENT
__Tmp$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@I$0A@@std@@YAXAAI0@Z PROC			; std::swap<unsigned int,0>, COMDAT

; 103  :     is_nothrow_move_constructible_v<_Ty>&& is_nothrow_move_assignable_v<_Ty>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 104  :     _Ty _Tmp = _STD move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$move@AAI@std@@YA$$QAIAAI@Z		; std::move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 105  :     _Left    = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAI@std@@YA$$QAIAAI@Z		; std::move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 106  :     _Right   = _STD move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$move@AAI@std@@YA$$QAIAAI@Z		; std::move<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 107  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@I$0A@@std@@YAXAAI0@Z ENDP			; std::swap<unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@0@Z PROC ; std::_Pocma<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >, COMDAT

; 908  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 909  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 910  :         _Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::move<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > &>
	add	esp, 4

; 911  :     }
; 912  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pocma@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Pocma<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@0@Z PROC ; std::_Pocma<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >, COMDAT

; 908  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 909  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 910  :         _Left = _STD move(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@AAV10@@Z ; std::move<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > &>
	add	esp, 4

; 911  :     }
; 912  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pocma@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@0@Z ENDP ; std::_Pocma<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$?RW4ResourceType@@@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QBEIABW4ResourceType@@@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??$?RW4ResourceType@@@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QBEIABW4ResourceType@@@Z PROC ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::operator()<enum ResourceType>, COMDAT
; _this$ = ecx

; 155  :     _NODISCARD size_t operator()(const _Keyty& _Keyval) const noexcept(_Nothrow_hash<_Hasher, _Keyty>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 156  :         // hash _Keyval to size_t value
; 157  :         return static_cast<size_t>(_Mypair._Get_first()(_Keyval));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QBEABU?$hash@W4ResourceType@@@2@XZ ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Get_first
	mov	DWORD PTR tv75[ebp], eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	call	??R?$_Conditionally_enabled_hash@W4ResourceType@@$00@std@@QBEIABW4ResourceType@@@Z ; std::_Conditionally_enabled_hash<enum ResourceType,1>::operator()

; 158  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?RW4ResourceType@@@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QBEIABW4ResourceType@@@Z ENDP ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::operator()<enum ResourceType>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *,std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAPAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *,std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$03@std@@YAII@Z PROC			; std::_Get_size_of_n<4>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 1073741823 ; 3fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
$LN3@Get_size_o:

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$03@std@@YAII@Z ENDP			; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YAII@Z
_TEXT	SEGMENT
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$00@std@@YAII@Z PROC			; std::_Get_size_of_n<1>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 0

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 60   :         if (_Count > _Max_possible) {
; 61   :             _Throw_bad_array_new_length(); // multiply overflow
; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$00@std@@YAII@Z ENDP			; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> ><std::pair<unsigned int const ,ResourceHandler> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> ><std::pair<unsigned int const ,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBIVResourceHandler@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> ><std::pair<unsigned int const ,ResourceHandler> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__ULast$1 = -20						; size = 4
__UFirst$2 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >, COMDAT

; 4798 : _CONSTEXPR20 void fill(const _FwdIt _First, const _FwdIt _Last, const _Ty& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 4799 :     // copy _Val through [_First, _Last)
; 4800 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	add	esp, 8

; 4801 :     if constexpr (_Is_vb_iterator<_FwdIt, true>) {
; 4802 :         _Fill_vbool(_First, _Last, _Val);
; 4803 :     } else {
; 4804 :         auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$2[ebp], eax

; 4805 :         const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$1[ebp], eax

; 4806 :         if constexpr (_Fill_memset_is_safe<decltype(_UFirst), _Ty>) {
; 4807 : #ifdef __cpp_lib_is_constant_evaluated
; 4808 :             if (!_STD is_constant_evaluated())
; 4809 : #endif // __cpp_lib_is_constant_evaluated
; 4810 :             {
; 4811 :                 _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 4812 :                 return;
; 4813 :             }
; 4814 :         }
; 4815 : 
; 4816 :         for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@fill
$LN2@fill:
	mov	eax, DWORD PTR __UFirst$2[ebp]
	add	eax, 4
	mov	DWORD PTR __UFirst$2[ebp], eax
$LN4@fill:
	mov	eax, DWORD PTR __UFirst$2[ebp]
	cmp	eax, DWORD PTR __ULast$1[ebp]
	je	SHORT $LN1@fill

; 4817 :             *_UFirst = _Val;

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __UFirst$2[ebp]
	mov	DWORD PTR [edx], ecx

; 4818 :         }

	jmp	SHORT $LN2@fill
$LN1@fill:

; 4819 :     }
; 4820 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__Backout$2 = -52					; size = 8
__ULast$ = -36						; size = 4
__UFirst$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >, COMDAT

; 1799 : void uninitialized_fill(const _NoThrowFwdIt _First, const _NoThrowFwdIt _Last, const _Tval& _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1800 :     // copy _Val throughout raw [_First, _Last)
; 1801 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	add	esp, 8

; 1802 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1803 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1804 :     if constexpr (_Fill_memset_is_safe<_Unwrapped_t<const _NoThrowFwdIt&>, _Tval>) {
; 1805 :         _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 1806 :     } else {
; 1807 :         _Uninitialized_backout<_Unwrapped_t<const _NoThrowFwdIt&>> _Backout{_UFirst};

	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN2@uninitiali:

; 1808 :         while (_Backout._Last != _ULast) {

	mov	eax, DWORD PTR __Backout$2[ebp+4]
	cmp	eax, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@uninitiali

; 1809 :             _Backout._Emplace_back(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > const &>

; 1810 :         }

	jmp	SHORT $LN2@uninitiali
$LN3@uninitiali:

; 1811 : 
; 1812 :         _Backout._Release();

	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::_Release

; 1813 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>

; 1814 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@uninitiali:
	DD	1
	DD	$LN8@uninitiali
$LN8@uninitiali:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN6@uninitiali
$LN6@uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z$0:
	lea	ecx, DWORD PTR __Backout$2[ebp]
	jmp	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> ><std::pair<enum ResourceType const ,ResourceCreator *> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> ><std::pair<enum ResourceType const ,ResourceCreator *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> ><std::pair<enum ResourceType const ,ResourceCreator *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__ULast$1 = -20						; size = 4
__UFirst$2 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >, COMDAT

; 4798 : _CONSTEXPR20 void fill(const _FwdIt _First, const _FwdIt _Last, const _Ty& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 4799 :     // copy _Val through [_First, _Last)
; 4800 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 4801 :     if constexpr (_Is_vb_iterator<_FwdIt, true>) {
; 4802 :         _Fill_vbool(_First, _Last, _Val);
; 4803 :     } else {
; 4804 :         auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$2[ebp], eax

; 4805 :         const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$1[ebp], eax

; 4806 :         if constexpr (_Fill_memset_is_safe<decltype(_UFirst), _Ty>) {
; 4807 : #ifdef __cpp_lib_is_constant_evaluated
; 4808 :             if (!_STD is_constant_evaluated())
; 4809 : #endif // __cpp_lib_is_constant_evaluated
; 4810 :             {
; 4811 :                 _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 4812 :                 return;
; 4813 :             }
; 4814 :         }
; 4815 : 
; 4816 :         for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@fill
$LN2@fill:
	mov	eax, DWORD PTR __UFirst$2[ebp]
	add	eax, 4
	mov	DWORD PTR __UFirst$2[ebp], eax
$LN4@fill:
	mov	eax, DWORD PTR __UFirst$2[ebp]
	cmp	eax, DWORD PTR __ULast$1[ebp]
	je	SHORT $LN1@fill

; 4817 :             *_UFirst = _Val;

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __UFirst$2[ebp]
	mov	DWORD PTR [edx], ecx

; 4818 :         }

	jmp	SHORT $LN2@fill
$LN1@fill:

; 4819 :     }
; 4820 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__Backout$2 = -52					; size = 8
__ULast$ = -36						; size = 4
__UFirst$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >, COMDAT

; 1799 : void uninitialized_fill(const _NoThrowFwdIt _First, const _NoThrowFwdIt _Last, const _Tval& _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1800 :     // copy _Val throughout raw [_First, _Last)
; 1801 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 1802 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1803 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1804 :     if constexpr (_Fill_memset_is_safe<_Unwrapped_t<const _NoThrowFwdIt&>, _Tval>) {
; 1805 :         _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 1806 :     } else {
; 1807 :         _Uninitialized_backout<_Unwrapped_t<const _NoThrowFwdIt&>> _Backout{_UFirst};

	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN2@uninitiali:

; 1808 :         while (_Backout._Last != _ULast) {

	mov	eax, DWORD PTR __Backout$2[ebp+4]
	cmp	eax, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@uninitiali

; 1809 :             _Backout._Emplace_back(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > const &>

; 1810 :         }

	jmp	SHORT $LN2@uninitiali
$LN3@uninitiali:

; 1811 : 
; 1812 :         _Backout._Release();

	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::_Release

; 1813 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>

; 1814 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@uninitiali:
	DD	1
	DD	$LN8@uninitiali
$LN8@uninitiali:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN6@uninitiali
$LN6@uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z$0:
	lea	ecx, DWORD PTR __Backout$2[ebp]
	jmp	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBII@std@@@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBII@std@@@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> ><std::pair<unsigned int const ,unsigned int> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBII@std@@@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> ><std::pair<unsigned int const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0U?$pair@$$CBII@std@@@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> ><std::pair<unsigned int const ,unsigned int> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__ULast$1 = -20						; size = 4
__UFirst$2 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >, COMDAT

; 4798 : _CONSTEXPR20 void fill(const _FwdIt _First, const _FwdIt _Last, const _Ty& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 4799 :     // copy _Val through [_First, _Last)
; 4800 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	add	esp, 8

; 4801 :     if constexpr (_Is_vb_iterator<_FwdIt, true>) {
; 4802 :         _Fill_vbool(_First, _Last, _Val);
; 4803 :     } else {
; 4804 :         auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$2[ebp], eax

; 4805 :         const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$1[ebp], eax

; 4806 :         if constexpr (_Fill_memset_is_safe<decltype(_UFirst), _Ty>) {
; 4807 : #ifdef __cpp_lib_is_constant_evaluated
; 4808 :             if (!_STD is_constant_evaluated())
; 4809 : #endif // __cpp_lib_is_constant_evaluated
; 4810 :             {
; 4811 :                 _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 4812 :                 return;
; 4813 :             }
; 4814 :         }
; 4815 : 
; 4816 :         for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@fill
$LN2@fill:
	mov	eax, DWORD PTR __UFirst$2[ebp]
	add	eax, 4
	mov	DWORD PTR __UFirst$2[ebp], eax
$LN4@fill:
	mov	eax, DWORD PTR __UFirst$2[ebp]
	cmp	eax, DWORD PTR __ULast$1[ebp]
	je	SHORT $LN1@fill

; 4817 :             *_UFirst = _Val;

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __UFirst$2[ebp]
	mov	DWORD PTR [edx], ecx

; 4818 :         }

	jmp	SHORT $LN2@fill
$LN1@fill:

; 4819 :     }
; 4820 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z
_TEXT	SEGMENT
__Backout$2 = -52					; size = 8
__ULast$ = -36						; size = 4
__UFirst$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z PROC ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >, COMDAT

; 1799 : void uninitialized_fill(const _NoThrowFwdIt _First, const _NoThrowFwdIt _Last, const _Tval& _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1800 :     // copy _Val throughout raw [_First, _Last)
; 1801 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	add	esp, 8

; 1802 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1803 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@YA@ABQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1804 :     if constexpr (_Fill_memset_is_safe<_Unwrapped_t<const _NoThrowFwdIt&>, _Tval>) {
; 1805 :         _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 1806 :     } else {
; 1807 :         _Uninitialized_backout<_Unwrapped_t<const _NoThrowFwdIt&>> _Backout{_UFirst};

	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??0?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN2@uninitiali:

; 1808 :         while (_Backout._Last != _ULast) {

	mov	eax, DWORD PTR __Backout$2[ebp+4]
	cmp	eax, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@uninitiali

; 1809 :             _Backout._Emplace_back(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??$_Emplace_back@ABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXABV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Emplace_back<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > const &>

; 1810 :         }

	jmp	SHORT $LN2@uninitiali
$LN3@uninitiali:

; 1811 : 
; 1812 :         _Backout._Release();

	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	?_Release@?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::_Release

; 1813 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$2[ebp]
	call	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>

; 1814 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@uninitiali:
	DD	1
	DD	$LN8@uninitiali
$LN8@uninitiali:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN6@uninitiali
$LN6@uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z$0:
	lea	ecx, DWORD PTR __Backout$2[ebp]
	jmp	??1?$_Uninitialized_backout@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>::~_Uninitialized_backout<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z ENDP ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0BA@@std@@YAII@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 268435455 ; 0fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
$LN3@Get_size_o:

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0BA@@std@@YAII@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 222  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT

; 705  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 706  :         _Ptr->~_Uty();
; 707  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z PROC ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 289  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ENDP ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate

; 206  :         return _Traits::_Allocate(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 207  :     }
; 208  : 
; 209  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 210  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:

; 66   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ??$_Atomic_reinterpret_as@JPAVResource@@@std@@YAJABQAVResource@@@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_reinterpret_as@JPAVResource@@@std@@YAJABQAVResource@@@Z PROC ; std::_Atomic_reinterpret_as<long,Resource *>, COMDAT

; 287  : _NODISCARD _Integral _Atomic_reinterpret_as(const _Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 288  :     // interprets _Source as the supplied integral type
; 289  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 290  : #if _HAS_IF_CONSTEXPR
; 291  :     if constexpr (is_integral_v<_Ty> && sizeof(_Integral) == sizeof(_Ty)) {
; 292  :         return static_cast<_Integral>(_Source);
; 293  :     } else if constexpr (is_pointer_v<_Ty> && sizeof(_Integral) == sizeof(_Ty)) {
; 294  :         return reinterpret_cast<_Integral>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 295  :     } else
; 296  : #endif // _HAS_IF_CONSTEXPR
; 297  :     {
; 298  :         _Integral _Result{}; // zero padding bits
; 299  :         _CSTD memcpy(&_Result, _STD addressof(_Source), sizeof(_Source));
; 300  :         return _Result;
; 301  :     }
; 302  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_reinterpret_as@JPAVResource@@@std@@YAJABQAVResource@@@Z ENDP ; std::_Atomic_reinterpret_as<long,Resource *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@JU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPCJAAU?$_Atomic_padded@PAVResource@@@0@@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_address_as@JU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPCJAAU?$_Atomic_padded@PAVResource@@@0@@Z PROC ; std::_Atomic_address_as<long,std::_Atomic_padded<Resource *> >, COMDAT

; 94   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8C597A7F_xatomic@h
	call	@__CheckForDebuggerJustMyCode@4

; 95   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 96   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 97   :     return &reinterpret_cast<volatile _Integral&>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]

; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_address_as@JU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPCJAAU?$_Atomic_padded@PAVResource@@@0@@Z ENDP ; std::_Atomic_address_as<long,std::_Atomic_padded<Resource *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ??$_Atomic_reinterpret_as@JI@std@@YAJABI@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_reinterpret_as@JI@std@@YAJABI@Z PROC		; std::_Atomic_reinterpret_as<long,unsigned int>, COMDAT

; 287  : _NODISCARD _Integral _Atomic_reinterpret_as(const _Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 288  :     // interprets _Source as the supplied integral type
; 289  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 290  : #if _HAS_IF_CONSTEXPR
; 291  :     if constexpr (is_integral_v<_Ty> && sizeof(_Integral) == sizeof(_Ty)) {
; 292  :         return static_cast<_Integral>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]
	mov	eax, DWORD PTR [eax]

; 293  :     } else if constexpr (is_pointer_v<_Ty> && sizeof(_Integral) == sizeof(_Ty)) {
; 294  :         return reinterpret_cast<_Integral>(_Source);
; 295  :     } else
; 296  : #endif // _HAS_IF_CONSTEXPR
; 297  :     {
; 298  :         _Integral _Result{}; // zero padding bits
; 299  :         _CSTD memcpy(&_Result, _STD addressof(_Source), sizeof(_Source));
; 300  :         return _Result;
; 301  :     }
; 302  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_reinterpret_as@JI@std@@YAJABI@Z ENDP		; std::_Atomic_reinterpret_as<long,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAD@std@@YAABQADABQAD@Z	; std::forward<char * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z
_TEXT	SEGMENT
__Old_ptr$1 = -120					; size = 4
__Raw_new$ = -108					; size = 4
__New_ptr$ = -96					; size = 4
__Al$ = -84						; size = 4
__New_capacity$ = -72					; size = 4
__Old_capacity$ = -60					; size = 4
__New_size$ = -48					; size = 4
__Old_size$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Size_increase$ = 8					; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
_<_Args_1>$ = 20					; size = 4
??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>, COMDAT
; _this$ = ecx

; 4328 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4329 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4330 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4331 :         auto& _My_data            = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 4332 :         const size_type _Old_size = _My_data._Mysize;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx

; 4333 :         if (max_size() - _Old_size < _Size_increase) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, DWORD PTR __Old_size$[ebp]
	cmp	eax, DWORD PTR __Size_increase$[ebp]
	jae	SHORT $LN2@Reallocate

; 4334 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4335 :         }
; 4336 : 
; 4337 :         const size_type _New_size     = _Old_size + _Size_increase;

	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Size_increase$[ebp]
	mov	DWORD PTR __New_size$[ebp], eax

; 4338 :         const size_type _Old_capacity = _My_data._Myres;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx

; 4339 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax

; 4340 :         auto& _Al                     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 4341 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax

; 4342 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 4343 :         _My_data._Mysize      = _New_size;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 4344 :         _My_data._Myres       = _New_capacity;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 4345 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

	mov	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Raw_new$[ebp], eax

; 4346 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate

; 4347 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Old_ptr$1[ebp], ecx

; 4348 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	mov	eax, DWORD PTR __Old_ptr$1[ebp]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Raw_new$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()

; 4349 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate

; 4350 :             _My_data._Bx._Ptr = _New_ptr;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 4351 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4352 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

	mov	eax, DWORD PTR _<_Args_1>$[ebp]
	push	eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Raw_new$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()

; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:

; 4354 :         }
; 4355 : 
; 4356 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:

; 4357 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Old_ptr$ = 12						; size = 4
__Old_size$ = 16					; size = 4
__Ptr$ = 20						; size = 4
__Count$ = 24						; size = 4
??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z PROC ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator(), COMDAT
; _this$ = ecx

; 2949 :                 const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2950 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

	mov	eax, DWORD PTR __Old_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH

; 2951 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	add	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH

; 2952 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	add	ecx, DWORD PTR __New_ptr$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 2953 :             },

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??R<lambda_ab246b20b9526e2ef7792587e4298a77>@@QBEXQADQBDI1I@Z ENDP ; <lambda_ab246b20b9526e2ef7792587e4298a77>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z
_TEXT	SEGMENT
__New_ptr$ = -60					; size = 4
__Al$ = -48						; size = 4
__New_capacity$ = -36					; size = 4
__Old_capacity$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>, COMDAT
; _this$ = ecx

; 4302 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4303 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4304 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4305 :         if (_New_size > max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	DWORD PTR __New_size$[ebp], eax
	jbe	SHORT $LN2@Reallocate

; 4306 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:

; 4307 :         }
; 4308 : 
; 4309 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx

; 4310 :         const size_type _New_capacity = _Calculate_growth(_New_size);

	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax

; 4311 :         auto& _Al                     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax

; 4313 :         _Mypair._Myval2._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 4314 :         _Mypair._Myval2._Mysize = _New_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 4316 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate

; 4318 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate

; 4319 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 4320 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:

; 4322 :         }
; 4323 : 
; 4324 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:

; 4325 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z PROC ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator(), COMDAT
; _this$ = ecx

; 3054 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3055 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 3057 :             },

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ENDP ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 289  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 270  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0M@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0M@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z PROC ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Compressed_pair<std::equal_to<unsigned int>,float,1><float>, COMDAT
; _this$ = ecx

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@M@std@@YA$$QAMAAM@Z		; std::forward<float>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0M@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z ENDP ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Compressed_pair<std::equal_to<unsigned int>,float,1><float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z
_TEXT	SEGMENT
tv79 = -224						; size = 4
tv81 = -220						; size = 4
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
_<_Val2_1>$ = 16					; size = 4
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z PROC ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1><std::_Zero_then_variadic_args_t,float>, COMDAT
; _this$ = ecx

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR _<_Val2_1>$[ebp]
	push	ecx
	call	??$forward@M@std@@YA$$QAMAAM@Z		; std::forward<float>
	add	esp, 4
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR _<_Val2_0>$[ebp]
	push	edx
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR tv81[ebp]
	call	??$?0M@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Compressed_pair<std::equal_to<unsigned int>,float,1><float>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z ENDP ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1><std::_Zero_then_variadic_args_t,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >, COMDAT

; 307  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 308  :         // destroy pointer members in _Ptr and deallocate with _Al
; 309  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 310  :         _Destroy_in_place(_Ptr->_Next);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
	add	esp, 4

; 311  :         _Destroy_in_place(_Ptr->_Prev);

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *>
	add	esp, 4

; 312  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 313  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
__Pnode$ = -8						; size = 4
__Al$ = 8						; size = 4
__Head$ = 12						; size = 4
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >, COMDAT

; 323  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 324  :         _Head->_Prev->_Next = nullptr;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	jmp	SHORT $LN4@Free_non_h
$LN2@Free_non_h:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN4@Free_non_h:
	cmp	DWORD PTR __Pnode$[ebp], 0
	je	SHORT $LN5@Free_non_h

; 328  :             _Pnext = _Pnode->_Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], ecx

; 329  :             _Freenode(_Al, _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	add	esp, 8

; 330  :         }

	jmp	SHORT $LN2@Free_non_h
$LN5@Free_non_h:

; 331  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
tv73 = -260						; size = 4
tv90 = -256						; size = 4
tv75 = -256						; size = 4
$T2 = -245						; size = 1
$T3 = -233						; size = 1
$T4 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > ><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &,0>, COMDAT
; _this$ = ecx

; 280  :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Any_alloc>(_Al)) { // construct empty vector, allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>
	add	esp, 4
	mov	DWORD PTR tv73[ebp], eax
	mov	dl, BYTE PTR $T4[ebp]
	mov	BYTE PTR $T3[ebp], dl
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv75[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>

; 281  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Aliter, _Mypair._Get_first()));

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	push	eax
	mov	ecx, DWORD PTR tv90[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 282  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > ><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z PROC ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>, COMDAT

; 974  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_range(_NoThrowFwdIt _First, const _NoThrowSentinel _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 975  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 976  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 977  :         for (; _First != _Last; ++_First) {
; 978  :             _Destroy_in_place(*_First);
; 979  :         }
; 980  :     }
; 981  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z ENDP ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator++, COMDAT
; _this$ = ecx

; 107  :     _List_unchecked_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 108  :         _Mybase::operator++();

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator++

; 109  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 110  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*, COMDAT
; _this$ = ecx

; 99   :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 100  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator*

; 101  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEXI@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEXI@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 77   :     _NODISCARD bool operator!=(const _List_unchecked_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 78   :         return !(*this == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 79   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 73   :     _NODISCARD bool operator==(const _List_unchecked_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 74   :         return _Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 75   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 62   :     _List_unchecked_const_iterator& operator--() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 63   :         _Ptr = _Ptr->_Prev;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax

; 64   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 65   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 51   :     _List_unchecked_const_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 52   :         _Ptr = _Ptr->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 53   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 54   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 43   :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 44   :         return _Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 8

; 45   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 40   :         this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 41   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0M@?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
??$?0M@?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z PROC ; std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>::_Compressed_pair<std::equal_to<enum ResourceType>,float,1><float>, COMDAT
; _this$ = ecx

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _<_Val2_0>$[ebp]
	push	eax
	call	??$forward@M@std@@YA$$QAMAAM@Z		; std::forward<float>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0M@?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z ENDP ; std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>::_Compressed_pair<std::equal_to<enum ResourceType>,float,1><float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z
_TEXT	SEGMENT
tv79 = -224						; size = 4
tv81 = -220						; size = 4
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
_<_Val2_0>$ = 12					; size = 4
_<_Val2_1>$ = 16					; size = 4
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z PROC ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1><std::_Zero_then_variadic_args_t,float>, COMDAT
; _this$ = ecx

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR _<_Val2_1>$[ebp]
	push	ecx
	call	??$forward@M@std@@YA$$QAMAAM@Z		; std::forward<float>
	add	esp, 4
	mov	DWORD PTR tv79[ebp], eax
	mov	edx, DWORD PTR _<_Val2_0>$[ebp]
	push	edx
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR tv81[ebp]
	call	??$?0M@?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAM@Z ; std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>::_Compressed_pair<std::equal_to<enum ResourceType>,float,1><float>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z ENDP ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1><std::_Zero_then_variadic_args_t,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >, COMDAT

; 307  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 308  :         // destroy pointer members in _Ptr and deallocate with _Al
; 309  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 310  :         _Destroy_in_place(_Ptr->_Next);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
	add	esp, 4

; 311  :         _Destroy_in_place(_Ptr->_Prev);

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
	add	esp, 4

; 312  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 313  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
__Pnode$ = -8						; size = 4
__Al$ = 8						; size = 4
__Head$ = 12						; size = 4
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >, COMDAT

; 323  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 324  :         _Head->_Prev->_Next = nullptr;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	jmp	SHORT $LN4@Free_non_h
$LN2@Free_non_h:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN4@Free_non_h:
	cmp	DWORD PTR __Pnode$[ebp], 0
	je	SHORT $LN5@Free_non_h

; 328  :             _Pnext = _Pnode->_Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], ecx

; 329  :             _Freenode(_Al, _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 330  :         }

	jmp	SHORT $LN2@Free_non_h
$LN5@Free_non_h:

; 331  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
tv73 = -260						; size = 4
tv90 = -256						; size = 4
tv75 = -256						; size = 4
$T2 = -245						; size = 1
$T3 = -233						; size = 1
$T4 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > ><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &,0>, COMDAT
; _this$ = ecx

; 280  :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Any_alloc>(_Al)) { // construct empty vector, allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>
	add	esp, 4
	mov	DWORD PTR tv73[ebp], eax
	mov	dl, BYTE PTR $T4[ebp]
	mov	BYTE PTR $T3[ebp], dl
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv75[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>

; 281  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Aliter, _Mypair._Get_first()));

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	push	eax
	mov	ecx, DWORD PTR tv90[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 282  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > ><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@@std@@YAPAV?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@@std@@YAPAV?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@@std@@YAPAV?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z PROC ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>, COMDAT

; 974  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_range(_NoThrowFwdIt _First, const _NoThrowSentinel _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 975  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 976  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 977  :         for (; _First != _Last; ++_First) {
; 978  :             _Destroy_in_place(*_First);
; 979  :         }
; 980  :     }
; 981  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z ENDP ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >, COMDAT

; 307  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 308  :         // destroy pointer members in _Ptr and deallocate with _Al
; 309  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 310  :         _Destroy_in_place(_Ptr->_Next);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
	add	esp, 4

; 311  :         _Destroy_in_place(_Ptr->_Prev);

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *>
	add	esp, 4

; 312  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 313  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
__Pnode$ = -8						; size = 4
__Al$ = 8						; size = 4
__Head$ = 12						; size = 4
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >, COMDAT

; 323  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 324  :         _Head->_Prev->_Next = nullptr;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	jmp	SHORT $LN4@Free_non_h
$LN2@Free_non_h:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN4@Free_non_h:
	cmp	DWORD PTR __Pnode$[ebp], 0
	je	SHORT $LN5@Free_non_h

; 328  :             _Pnext = _Pnode->_Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], ecx

; 329  :             _Freenode(_Al, _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
	add	esp, 8

; 330  :         }

	jmp	SHORT $LN2@Free_non_h
$LN5@Free_non_h:

; 331  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
tv73 = -260						; size = 4
tv90 = -256						; size = 4
tv75 = -256						; size = 4
$T2 = -245						; size = 1
$T3 = -233						; size = 1
$T4 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > ><std::allocator<std::pair<unsigned int const ,unsigned int> > const &,0>, COMDAT
; _this$ = ecx

; 280  :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Any_alloc>(_Al)) { // construct empty vector, allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$forward@ABV?$allocator@U?$pair@$$CBII@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBII@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,unsigned int> > const &>
	add	esp, 4
	mov	DWORD PTR tv73[ebp], eax
	mov	dl, BYTE PTR $T4[ebp]
	mov	BYTE PTR $T3[ebp], dl
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv75[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>

; 281  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Aliter, _Mypair._Get_first()));

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
	push	eax
	mov	ecx, DWORD PTR tv90[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 282  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > ><std::allocator<std::pair<unsigned int const ,unsigned int> > const &,0>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z PROC ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>, COMDAT

; 974  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_range(_NoThrowFwdIt _First, const _NoThrowSentinel _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 975  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 976  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 977  :         for (; _First != _Last; ++_First) {
; 978  :             _Destroy_in_place(*_First);
; 979  :         }
; 980  :     }
; 981  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z ENDP ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 40   :         this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 41   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXAAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXAAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z PROC ; std::_Destroy_in_place<ResourceAsyncLoader::ResourceLoadingInformation *>, COMDAT

; 270  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_in_place@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXAAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ENDP ; std::_Destroy_in_place<ResourceAsyncLoader::ResourceLoadingInformation *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 288  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 289  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z PROC ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >, COMDAT

; 101  : _NODISCARD const volatile _Integral* _Atomic_address_as(const _Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8C597A7F_xatomic@h
	call	@__CheckForDebuggerJustMyCode@4

; 102  :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 103  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 104  :     return &reinterpret_cast<const volatile _Integral&>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z ENDP ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@HU?$_Atomic_padded@I@std@@@std@@YAPDHABU?$_Atomic_padded@I@0@@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_address_as@HU?$_Atomic_padded@I@std@@@std@@YAPDHABU?$_Atomic_padded@I@0@@Z PROC ; std::_Atomic_address_as<int,std::_Atomic_padded<unsigned int> >, COMDAT

; 101  : _NODISCARD const volatile _Integral* _Atomic_address_as(const _Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8C597A7F_xatomic@h
	call	@__CheckForDebuggerJustMyCode@4

; 102  :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 103  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 104  :     return &reinterpret_cast<const volatile _Integral&>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_address_as@HU?$_Atomic_padded@I@std@@@std@@YAPDHABU?$_Atomic_padded@I@0@@Z ENDP ; std::_Atomic_address_as<int,std::_Atomic_padded<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPCJAAU?$_Atomic_padded@I@0@@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPCJAAU?$_Atomic_padded@I@0@@Z PROC ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >, COMDAT

; 94   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8C597A7F_xatomic@h
	call	@__CheckForDebuggerJustMyCode@4

; 95   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 96   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 97   :     return &reinterpret_cast<volatile _Integral&>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]

; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPCJAAU?$_Atomic_padded@I@0@@Z ENDP ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT
; _this$ = ecx

; 1344 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT

; 42   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 43   :     // return larger of _Left and _Right
; 44   :     return _Left < _Right ? _Right : _Left;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1303 :     ~_Container_proxy_ptr12() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1304 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Container_

; 1305 :             _Delete_plain_internal(_Al, _Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
$LN3@Container_:

; 1306 :         }
; 1307 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1289 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1290 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1291 :         _Ptr = _Unfancy(_Al_.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al_$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 1292 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	eax, DWORD PTR __Mycont$[ebp]
	push	eax
	call	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1293 :         _Mycont._Myproxy = _Ptr;

	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1294 :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z PROC ; std::addressof<std::mutex>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ENDP ; std::addressof<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@@std@@YA$$QAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@@std@@YA$$QAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@0@AAV10@@Z PROC ; std::move<std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > > &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@@std@@YA$$QAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@0@AAV10@@Z ENDP ; std::move<std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT

; 66   :     const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 67   :     // return smaller of _Left and _Right
; 68   :     return _Right < _Left ? _Right : _Left;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
__New_proxy$ = -20					; size = 4
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1106 :     void _Alloc_proxy(_Alloc&& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1107 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	DWORD PTR __New_proxy$[ebp], eax

; 1108 :         _Construct_in_place(*_New_proxy, this);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_proxy$[ebp]
	push	edx
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1109 :         _Myproxy            = _New_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_proxy$[ebp]
	mov	DWORD PTR [eax], ecx

; 1110 :         _New_proxy->_Mycont = this;

	mov	eax, DWORD PTR __New_proxy$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx

; 1111 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1><>, COMDAT
; _this$ = ecx

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@XZ ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocator<ResourceAsyncLoader::ResourceLoadingInformation>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1031 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1032 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1033 :     using _Ty = typename _Alloc::value_type;
; 1034 :     _Ptr->~_Ty();
; 1035 :     _Deallocate_plain(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1036 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -8						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 596  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 597  :     // assign _New_val to _Val, return previous _Val
; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __New_val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 600  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 601  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT
; _this$ = ecx

; 806  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBIVResourceHandler@@@std@@@std@@SAPAU?$pair@$$CBIVResourceHandler@@@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBIVResourceHandler@@@std@@@std@@SAPAU?$pair@$$CBIVResourceHandler@@@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned int const ,ResourceHandler> *>::pointer_to, COMDAT

; 150  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DEE7E6EF_xutility
	call	@__CheckForDebuggerJustMyCode@4

; 151  :         return _STD addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBIVResourceHandler@@@std@@@std@@YAPAU?$pair@$$CBIVResourceHandler@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,ResourceHandler> >
	add	esp, 4

; 152  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBIVResourceHandler@@@std@@@std@@SAPAU?$pair@$$CBIVResourceHandler@@@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned int const ,ResourceHandler> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z
_TEXT	SEGMENT
tv78 = -224						; size = 4
tv84 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>, COMDAT
; _this$ = ecx

; 1328 :     _NODISCARD iterator find(typename _Traits::template _Deduce_key<_Keyty> _Keyval) {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1329 :         return _List._Make_iter(_Find(_Keyval, _Traitsobj(_Keyval)));

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv78[ebp]
	call	??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find@I@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@ABII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Find<unsigned int>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv84[ebp]
	call	?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Make_iter
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1330 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::~pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>::~pair<std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->, COMDAT
; _this$ = ecx

; 242  :     _NODISCARD pointer operator->() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 243  :         return pointer_traits<pointer>::pointer_to(**this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBIVResourceHandler@@@std@@@std@@SAPAU?$pair@$$CBIVResourceHandler@@@2@AAU32@@Z ; std::pointer_traits<std::pair<unsigned int const ,ResourceHandler> *>::pointer_to
	add	esp, 4

; 244  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*, COMDAT
; _this$ = ecx

; 238  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 239  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*

; 240  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv136 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==, COMDAT
; _this$ = ecx

; 194  :     _NODISCARD bool operator==(const _List_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
$LN4@operator:

; 195  : #if _ITERATOR_DEBUG_LEVEL == 2
; 196  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "list iterators incompatible");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	jne	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	196					; 000000c4H
	push	OFFSET ??_C@_0GI@DIELDAIG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	mov	esi, esp
	push	0
	push	196					; 000000c4H
	push	OFFSET ??_C@_1NA@FLPGDINF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1BDK@GJICOFCC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator

; 197  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 198  : 
; 199  :         return this->_Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN12@operator
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN13@operator
$LN12@operator:
	mov	DWORD PTR tv136[ebp], 0
$LN13@operator:
	mov	al, BYTE PTR tv136[ebp]

; 200  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -20						; size = 4
_this$ = -8						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*, COMDAT
; _this$ = ecx

; 145  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 146  : #if _ITERATOR_DEBUG_LEVEL == 2
; 147  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 148  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized list iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	mov	esi, esp
	push	OFFSET ??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	148					; 00000094H
	push	OFFSET ??_C@_0GI@DIELDAIG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	mov	esi, esp
	push	0
	push	148					; 00000094H
	push	OFFSET ??_C@_1NA@FLPGDINF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1BDI@DOLLGKIL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 149  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end list iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	mov	esi, esp
	push	OFFSET ??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	149					; 00000095H
	push	OFFSET ??_C@_0GI@DIELDAIG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	mov	esi, esp
	push	0
	push	149					; 00000095H
	push	OFFSET ??_C@_1NA@FLPGDINF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1BDI@DOLLGKIL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	eax, eax
	jne	SHORT $LN10@operator

; 150  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 151  : 
; 152  :         return this->_Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	add	eax, 8

; 153  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 40   :         this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 41   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??$insert@U?$pair@IVResourceHandler@@@std@@$0A@@?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@IVResourceHandler@@@std@@$0A@@?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z PROC ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::insert<std::pair<unsigned int,ResourceHandler>,0>, COMDAT
; _this$ = ecx

; 221  :     pair<iterator, bool> insert(_Valty&& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4

; 222  :         return this->emplace(_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@IVResourceHandler@@@std@@@std@@YA$$QAU?$pair@IVResourceHandler@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int,ResourceHandler> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@U?$pair@IVResourceHandler@@@std@@@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::emplace<std::pair<unsigned int,ResourceHandler> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 223  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@U?$pair@IVResourceHandler@@@std@@$0A@@?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ENDP ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::insert<std::pair<unsigned int,ResourceHandler>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$?0IVResourceHandler@@$0A@@?$pair@$$CBIVResourceHandler@@@std@@QAE@$$QAU?$pair@IVResourceHandler@@@1@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??$?0IVResourceHandler@@$0A@@?$pair@$$CBIVResourceHandler@@@std@@QAE@$$QAU?$pair@IVResourceHandler@@@1@@Z PROC ; std::pair<unsigned int const ,ResourceHandler>::pair<unsigned int const ,ResourceHandler><unsigned int,ResourceHandler,0>, COMDAT
; _this$ = ecx

; 246  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@I@std@@YA$$QAIAAI@Z		; std::forward<unsigned int>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	call	??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ; std::forward<ResourceHandler>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv76[ebp]
	call	??0ResourceHandler@@QAE@$$QAV0@@Z	; ResourceHandler::ResourceHandler
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0IVResourceHandler@@$0A@@?$pair@$$CBIVResourceHandler@@@std@@QAE@$$QAU?$pair@IVResourceHandler@@@1@@Z ENDP ; std::pair<unsigned int const ,ResourceHandler>::pair<unsigned int const ,ResourceHandler><unsigned int,ResourceHandler,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$make_pair@AAIVResourceHandler@@@std@@YA?AU?$pair@IVResourceHandler@@@0@AAI$$QAVResourceHandler@@@Z
_TEXT	SEGMENT
tv73 = -200						; size = 4
tv75 = -196						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@AAIVResourceHandler@@@std@@YA?AU?$pair@IVResourceHandler@@@0@AAI$$QAVResourceHandler@@@Z PROC ; std::make_pair<unsigned int &,ResourceHandler>, COMDAT

; 389  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DE4BE9BA_utility
	call	@__CheckForDebuggerJustMyCode@4

; 390  :     // return pair composed from arguments
; 391  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 392  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@VResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ; std::forward<ResourceHandler>
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@AAI@std@@YAAAIAAI@Z		; std::forward<unsigned int &>
	add	esp, 4
	mov	DWORD PTR tv73[ebp], eax
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAIVResourceHandler@@$0A@@?$pair@IVResourceHandler@@@std@@QAE@AAI$$QAVResourceHandler@@@Z ; std::pair<unsigned int,ResourceHandler>::pair<unsigned int,ResourceHandler><unsigned int &,ResourceHandler,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 393  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$make_pair@AAIVResourceHandler@@@std@@YA?AU?$pair@IVResourceHandler@@@0@AAI$$QAVResourceHandler@@@Z ENDP ; std::make_pair<unsigned int &,ResourceHandler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$move@AAVResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAVResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z PROC ; std::move<ResourceHandler &>, COMDAT

; 1454 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1455 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1456 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAVResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ENDP ; std::move<ResourceHandler &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator++, COMDAT
; _this$ = ecx

; 107  :     _List_unchecked_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 108  :         _Mybase::operator++();

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator++

; 109  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 110  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator*, COMDAT
; _this$ = ecx

; 99   :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 100  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator*

; 101  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 77   :     _NODISCARD bool operator!=(const _List_unchecked_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 78   :         return !(*this == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 79   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 73   :     _NODISCARD bool operator==(const _List_unchecked_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 74   :         return _Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 75   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 51   :     _List_unchecked_const_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 52   :         _Ptr = _Ptr->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 53   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 54   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 43   :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 44   :         return _Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 8

; 45   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 40   :         this->_Adopt(_Plist);

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 41   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FuniqueResourceManager@?1??get@ResourceManager@@SAAAV1@XZ@YAXXZ
text$yd	SEGMENT
??__FuniqueResourceManager@?1??get@ResourceManager@@SAAAV1@XZ@YAXXZ PROC ; `ResourceManager::get'::`2'::`dynamic atexit destructor for 'uniqueResourceManager'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?uniqueResourceManager@?1??get@ResourceManager@@SAAAV2@XZ@4V2@A
	call	??1ResourceManager@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FuniqueResourceManager@?1??get@ResourceManager@@SAAAV1@XZ@YAXXZ ENDP ; `ResourceManager::get'::`2'::`dynamic atexit destructor for 'uniqueResourceManager''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GResourceAsyncLoader@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GResourceAsyncLoader@@QAEPAXI@Z PROC			; ResourceAsyncLoader::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ResourceAsyncLoader@@QAE@XZ		; ResourceAsyncLoader::~ResourceAsyncLoader
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	120					; 00000078H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GResourceAsyncLoader@@QAEPAXI@Z ENDP			; ResourceAsyncLoader::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@ResourceAsyncLoader@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@ResourceAsyncLoader@@QAEXI@Z PROC	; ResourceAsyncLoader::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@ResourceAsyncLoader@@QAEXI@Z ENDP	; ResourceAsyncLoader::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.h
;	COMDAT ??1ResourceAsyncLoader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ResourceAsyncLoader@@QAE@XZ PROC			; ResourceAsyncLoader::~ResourceAsyncLoader, COMDAT
; _this$ = ecx

; 25   : 	~ResourceAsyncLoader() { release(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ResourceAsyncLoader@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __45916EAF_ResourceAsyncLoader@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release@ResourceAsyncLoader@@QAEXXZ	; ResourceAsyncLoader::release
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ResourceAsyncLoader@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ResourceAsyncLoader@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ResourceAsyncLoader@@QAE@XZ ENDP			; ResourceAsyncLoader::~ResourceAsyncLoader
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.h
;	COMDAT ??0ResourceAsyncLoader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0ResourceAsyncLoader@@QAE@XZ PROC			; ResourceAsyncLoader::ResourceAsyncLoader, COMDAT
; _this$ = ecx

; 24   : 	ResourceAsyncLoader() : isRunning(false) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ResourceAsyncLoader@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __45916EAF_ResourceAsyncLoader@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0Thread@@QAE@XZ			; Thread::Thread
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+116], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ResourceAsyncLoader@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0ResourceAsyncLoader@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ResourceAsyncLoader@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ResourceAsyncLoader@@QAE@XZ ENDP			; ResourceAsyncLoader::ResourceAsyncLoader
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ PROC ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::~ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1condition_variable@std@@QAE@XZ	; std::condition_variable::~condition_variable
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1mutex@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ ENDP ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::~ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.h
;	COMDAT ??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ PROC ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT
; _this$ = ecx

; 31   : };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __45916EAF_ResourceAsyncLoader@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0mutex@std@@QAE@XZ			; std::mutex::mutex
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0condition_variable@std@@QAE@XZ	; std::condition_variable::condition_variable
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1mutex@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ThreadItemQueue@UResourceLoadingInformation@ResourceAsyncLoader@@@@QAE@XZ ENDP ; ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>::ThreadItemQueue<ResourceAsyncLoader::ResourceLoadingInformation>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ PROC ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::~queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::~deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::~queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\queue
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.h
;	COMDAT ??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ PROC ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >, COMDAT
; _this$ = ecx

; 31   : };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __45916EAF_ResourceAsyncLoader@h
	call	@__CheckForDebuggerJustMyCode@4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\queue

; 154  :     _Container c{};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceAsyncLoader.h

; 31   : };

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$queue@UResourceLoadingInformation@ResourceAsyncLoader@@V?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >::queue<ResourceAsyncLoader::ResourceLoadingInformation,std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock, COMDAT
; _this$ = ecx

; 546  :     size_type _Getblock(size_type _Off) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 547  :         // NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

	mov	eax, DWORD PTR __Off$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 1
	and	eax, edx

; 549  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >, COMDAT
; _this$ = ecx

; 544  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize, COMDAT
; _this$ = ecx

; 1565 :     const size_type& _Mysize() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1566 :         return _Get_data()._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 16					; 00000010H

; 1567 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize, COMDAT
; _this$ = ecx

; 1561 :     size_type& _Mysize() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1562 :         return _Get_data()._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 16					; 00000010H

; 1563 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff, COMDAT
; _this$ = ecx

; 1557 :     const size_type& _Myoff() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1558 :         return _Get_data()._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 12					; 0000000cH

; 1559 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff, COMDAT
; _this$ = ecx

; 1553 :     size_type& _Myoff() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1554 :         return _Get_data()._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 12					; 0000000cH

; 1555 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize, COMDAT
; _this$ = ecx

; 1545 :     size_type& _Mapsize() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1546 :         return _Get_data()._Mapsize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 8

; 1547 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map, COMDAT
; _this$ = ecx

; 1537 :     _Mapptr& _Map() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1538 :         return _Get_data()._Map;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	add	eax, 4

; 1539 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data, COMDAT
; _this$ = ecx

; 1533 :     const _Scary_val& _Get_data() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1534 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 1535 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data, COMDAT
; _this$ = ecx

; 1529 :     _Scary_val& _Get_data() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1530 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 1531 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal, COMDAT
; _this$ = ecx

; 1521 :     _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1522 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Get_first

; 1523 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all, COMDAT
; _this$ = ecx

; 1517 :     void _Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1518 :         _Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1519 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock, COMDAT
; _this$ = ecx

; 1513 :     size_type _Getblock(size_type _Off) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1514 :         return _Get_data()._Getblock(_Off);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock

; 1515 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z
_TEXT	SEGMENT
tv71 = -260						; size = 4
__Pnextoff$1 = -60					; size = 4
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
__Offhigh$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Offlo$ = 8						; size = 4
?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off, COMDAT
; _this$ = ecx

; 1493 :     void _Orphan_off(size_type _Offlo) const noexcept { // orphan iterators with specified offset(s)

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1494 :         size_type _Offhigh = _Myoff() + _Mysize() <= _Offlo + 1 ? static_cast<size_type>(-1) : _Offlo;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Offlo$[ebp]
	add	edx, 1
	cmp	ecx, edx
	ja	SHORT $LN9@Orphan_off
	mov	DWORD PTR tv71[ebp], -1
	jmp	SHORT $LN10@Orphan_off
$LN9@Orphan_off:
	mov	eax, DWORD PTR __Offlo$[ebp]
	mov	DWORD PTR tv71[ebp], eax
$LN10@Orphan_off:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Offhigh$[ebp], ecx

; 1495 :         if (_Offlo == _Myoff()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	ecx, DWORD PTR __Offlo$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN4@Orphan_off

; 1496 :             _Offlo = 0;

	mov	DWORD PTR __Offlo$[ebp], 0
$LN4@Orphan_off:

; 1497 :         }
; 1498 : 
; 1499 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1500 :         _Iterator_base12** _Pnext = &_Get_data()._Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	eax, DWORD PTR [eax]
	add	eax, 4
	mov	DWORD PTR __Pnext$[ebp], eax
$LN2@Orphan_off:

; 1501 :         while (*_Pnext) {

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_off

; 1502 :             const auto _Pnextoff = static_cast<const_iterator&>(**_Pnext)._Myoff;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextoff$1[ebp], edx

; 1503 :             if (_Pnextoff < _Offlo || _Offhigh < _Pnextoff) {

	mov	eax, DWORD PTR __Pnextoff$1[ebp]
	cmp	eax, DWORD PTR __Offlo$[ebp]
	jb	SHORT $LN7@Orphan_off
	mov	eax, DWORD PTR __Offhigh$[ebp]
	cmp	eax, DWORD PTR __Pnextoff$1[ebp]
	jae	SHORT $LN5@Orphan_off
$LN7@Orphan_off:

; 1504 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 1505 :             } else { // orphan the iterator

	jmp	SHORT $LN6@Orphan_off
$LN5@Orphan_off:

; 1506 :                 (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1507 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN6@Orphan_off:

; 1508 :             }
; 1509 :         }

	jmp	SHORT $LN2@Orphan_off
$LN3@Orphan_off:

; 1510 :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_off
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@Orphan_off:
	DD	1
	DD	$LN12@Orphan_off
$LN12@Orphan_off:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN11@Orphan_off
$LN11@Orphan_off:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
tv144 = -252						; size = 4
tv93 = -252						; size = 4
tv146 = -248						; size = 4
tv95 = -248						; size = 4
__Block$2 = -48						; size = 4
__Almap$ = -33						; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Tidy, COMDAT
; _this$ = ecx

; 1469 :     void _Tidy() noexcept { // free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1470 :         _Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_all

; 1471 : 
; 1472 :         _Alpty _Almap(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::allocator<ResourceAsyncLoader::ResourceLoadingInformation *><ResourceAsyncLoader::ResourceLoadingInformation>
$LN2@Tidy:

; 1473 :         while (!empty()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@Tidy

; 1474 :             pop_back();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_back

; 1475 :         }

	jmp	SHORT $LN2@Tidy
$LN3@Tidy:

; 1476 : 
; 1477 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Block$2[ebp], eax
$LN6@Tidy:
	cmp	DWORD PTR __Block$2[ebp], 0
	jbe	SHORT $LN5@Tidy

; 1478 :             if (_Map()[--_Block]) { // free block and destroy its pointer

	mov	eax, DWORD PTR __Block$2[ebp]
	sub	eax, 1
	mov	DWORD PTR __Block$2[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Block$2[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN7@Tidy

; 1479 :                 _Getal().deallocate(_Map()[_Block], _DEQUESIZ);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Block$2[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv93[ebp], edx
	push	2
	mov	eax, DWORD PTR tv93[ebp]
	push	eax
	mov	ecx, DWORD PTR tv95[ebp]
	call	?deallocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::deallocate

; 1480 :                 _Destroy_in_place(_Map()[_Block]);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Block$2[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	??$_Destroy_in_place@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAXAAPAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Destroy_in_place<ResourceAsyncLoader::ResourceLoadingInformation *>
	add	esp, 4
$LN7@Tidy:

; 1481 :             }
; 1482 :         }

	jmp	SHORT $LN6@Tidy
$LN5@Tidy:

; 1483 : 
; 1484 :         if (_Map() != _Mapptr()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@Tidy

; 1485 :             _Almap.deallocate(_Map(), _Mapsize()); // free storage for map

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv144[ebp], ecx
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate
$LN8@Tidy:

; 1486 :         }
; 1487 : 
; 1488 :         _Mapsize() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mapsize
	mov	DWORD PTR [eax], 0

; 1489 :         _Map()     = _Mapptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	DWORD PTR [eax], 0

; 1490 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Tidy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@Tidy:
	DD	1
	DD	$LN12@Tidy
$LN12@Tidy:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN10@Tidy
$LN10@Tidy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv140 = -248						; size = 4
tv145 = -244						; size = 4
tv142 = -244						; size = 4
__Block$2 = -44						; size = 4
__Newoff$3 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_back, COMDAT
; _this$ = ecx

; 1126 :     void pop_back() noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1127 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1128 :         if (empty()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@pop_back
$LN4@pop_back:

; 1129 :             _STL_REPORT_ERROR("deque empty before pop");

	mov	esi, esp
	push	OFFSET ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1129					; 00000469H
	push	OFFSET ??_C@_0GJ@JOABDPBH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN9@pop_back
	int	3
$LN9@pop_back:
	mov	esi, esp
	push	0
	push	1129					; 00000469H
	push	OFFSET ??_C@_1NC@ENPMJHKL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1BDG@ONCOIODA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?$DM?$AAs?$AAt?$AAr?$AAu@
	push	OFFSET ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN4@pop_back

; 1130 :         } else { // something to erase, do it

	jmp	$LN8@pop_back
$LN5@pop_back:

; 1131 :             size_type _Newoff = _Myoff() + _Mysize() - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	DWORD PTR __Newoff$3[ebp], eax

; 1132 :             _Orphan_off(_Newoff);

	mov	eax, DWORD PTR __Newoff$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_off@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEXI@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Orphan_off

; 1133 :             size_type _Block = _Getblock(_Newoff);

	mov	eax, DWORD PTR __Newoff$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEII@Z ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getblock
	mov	DWORD PTR __Block$2[ebp], eax

; 1134 :             _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _DEQUESIZ));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAPAPAUResourceLoadingInformation@ResourceAsyncLoader@@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Newoff$3[ebp]
	xor	edx, edx
	mov	esi, 2
	div	esi
	mov	eax, DWORD PTR __Block$2[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4]
	lea	edx, DWORD PTR [ecx+edx*8]
	push	edx
	call	??$_Unfancy@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@YAPAUResourceLoadingInformation@ResourceAsyncLoader@@PAU12@@Z ; std::_Unfancy<ResourceAsyncLoader::ResourceLoadingInformation>
	add	esp, 4
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	mov	DWORD PTR tv140[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	call	??$destroy@UResourceLoadingInformation@ResourceAsyncLoader@@@?$_Default_allocator_traits@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@SAXAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@QAUResourceLoadingInformation@ResourceAsyncLoader@@@Z ; std::_Default_allocator_traits<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::destroy<ResourceAsyncLoader::ResourceLoadingInformation>
	add	esp, 8

; 1135 :             if (--_Mysize() == 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR tv145[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR tv145[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN8@pop_back

; 1136 :                 _Myoff() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Myoff
	mov	DWORD PTR [eax], 0
$LN8@pop_back:

; 1137 :             }
; 1138 :         }
; 1139 : 
; 1140 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1141 :         size_type _Newoff = _Myoff() + _Mysize() - 1;
; 1142 :         size_type _Block  = _Getblock(_Newoff);
; 1143 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1144 :         if (--_Mysize() == 0) {
; 1145 :             _Myoff() = 0;
; 1146 :         }
; 1147 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1148 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?pop_back@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAEXXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::pop_back
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty, COMDAT
; _this$ = ecx

; 1009 :     _NODISCARD bool empty() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 1010 :         return _Mysize() == 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@ABEABIXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Mysize
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv67[ebp]

; 1011 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QBE_NXZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??1?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -228						; size = 4
__Proxy_allocator$ = -21				; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::~deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >, COMDAT
; _this$ = ecx

; 869  :     ~deque() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4

; 870  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEXXZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Tidy

; 871  :         _Alproxy_ty _Proxy_allocator(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Proxy_allocator$[ebp]
	call	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ResourceAsyncLoader::ResourceLoadingInformation>

; 872  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	push	eax
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR __Proxy_allocator$[ebp]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 873  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@deque
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@deque:
	DD	1
	DD	$LN4@deque
$LN4@deque:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN3@deque
$LN3@deque:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
??1?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::~deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ??0?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv83 = -236						; size = 4
tv85 = -232						; size = 4
tv69 = -232						; size = 4
$T1 = -221						; size = 1
$T2 = -209						; size = 1
_this$ = -8						; size = 4
??0?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ PROC ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >, COMDAT
; _this$ = ecx

; 596  :     deque() : _Mypair(_Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __4D4A49D7_deque
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@V?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1>::_Compressed_pair<std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>,std::_Deque_val<std::_Deque_simple_types<ResourceAsyncLoader::ResourceLoadingInformation> >,1><>

; 597  :         _Get_data()._Alloc_proxy(static_cast<_Alproxy_ty>(_Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Get_data
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@AAEAAV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@2@XZ ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0UResourceLoadingInformation@ResourceAsyncLoader@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ResourceAsyncLoader::ResourceLoadingInformation>
	mov	DWORD PTR tv83[ebp], eax
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	mov	ecx, DWORD PTR tv85[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 598  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$deque@UResourceLoadingInformation@ResourceAsyncLoader@@V?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@@std@@QAE@XZ ENDP ; std::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >::deque<ResourceAsyncLoader::ResourceLoadingInformation,std::allocator<ResourceAsyncLoader::ResourceLoadingInformation> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAPAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAEXQAUResourceLoadingInformation@ResourceAsyncLoader@@I@Z ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@XZ PROC ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocator<ResourceAsyncLoader::ResourceLoadingInformation>, COMDAT
; _this$ = ecx

; 802  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UResourceLoadingInformation@ResourceAsyncLoader@@@std@@QAE@XZ ENDP ; std::allocator<ResourceAsyncLoader::ResourceLoadingInformation>::allocator<ResourceAsyncLoader::ResourceLoadingInformation>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Multithreading\Thread.h
;	COMDAT ??0Thread@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Thread@@QAE@XZ PROC					; Thread::Thread, COMDAT
; _this$ = ecx

; 16   : 	Thread() : handle(NULL) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D3396542_Thread@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Thread@@QAE@XZ ENDP					; Thread::Thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GNativeFileSystem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GNativeFileSystem@@UAEPAXI@Z PROC			; NativeFileSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NativeFileSystem@@UAE@XZ		; NativeFileSystem::~NativeFileSystem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNativeFileSystem@@UAEPAXI@Z ENDP			; NativeFileSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\NativeFileSystem.h
;	COMDAT ?release@NativeFileSystem@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release@NativeFileSystem@@UAEXXZ PROC			; NativeFileSystem::release, COMDAT
; _this$ = ecx

; 16   : 	virtual void release() override {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D426F35F_NativeFileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release@NativeFileSystem@@UAEXXZ ENDP			; NativeFileSystem::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\NativeFileSystem.h
;	COMDAT ?init@NativeFileSystem@@UAE_NABVResourceName@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_path$ = 8						; size = 4
?init@NativeFileSystem@@UAE_NABVResourceName@@@Z PROC	; NativeFileSystem::init, COMDAT
; _this$ = ecx

; 15   : 	virtual bool init(const ResourceName& path) override { return true; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D426F35F_NativeFileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?init@NativeFileSystem@@UAE_NABVResourceName@@@Z ENDP	; NativeFileSystem::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\NativeFileSystem.h
;	COMDAT ??1NativeFileSystem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1NativeFileSystem@@UAE@XZ PROC			; NativeFileSystem::~NativeFileSystem, COMDAT
; _this$ = ecx

; 13   : 	virtual ~NativeFileSystem() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D426F35F_NativeFileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NativeFileSystem@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileSystem@@UAE@XZ			; FileSystem::~FileSystem
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1NativeFileSystem@@UAE@XZ ENDP			; NativeFileSystem::~NativeFileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\NativeFileSystem.h
;	COMDAT ??0NativeFileSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0NativeFileSystem@@QAE@XZ PROC			; NativeFileSystem::NativeFileSystem, COMDAT
; _this$ = ecx

; 12   : 	NativeFileSystem() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D426F35F_NativeFileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FileSystem@@QAE@XZ			; FileSystem::FileSystem
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7NativeFileSystem@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0NativeFileSystem@@QAE@XZ ENDP			; NativeFileSystem::NativeFileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$forward@I@std@@YA$$QAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@I@std@@YA$$QAIAAI@Z PROC			; std::forward<unsigned int>, COMDAT

; 1442 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 1443 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1444 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@I@std@@YA$$QAIAAI@Z ENDP			; std::forward<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -252						; size = 44
_this$ = -8						; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 181  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __15AC5F2C_xloctime
	call	@__CheckForDebuggerJustMyCode@4

; 182  :         _Cvt = _Lobj._Getcvt();

	mov	esi, esp
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 24					; 00000018H
	mov	ecx, 11					; 0000000bH
	mov	esi, eax
	rep movsd

; 183  : 
; 184  :         if (is_same_v<_Elem2, wchar_t>) {

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Getvals

; 185  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 186  :             _Months =

	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 187  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 188  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

	push	OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 189  :         } else {

	jmp	SHORT $LN1@Getvals
$LN2@Getvals:

; 190  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 191  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 192  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	0
	push	OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
	call	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 193  :         }
; 194  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -252						; size = 44
_this$ = -8						; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 181  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __15AC5F2C_xloctime
	call	@__CheckForDebuggerJustMyCode@4

; 182  :         _Cvt = _Lobj._Getcvt();

	mov	esi, esp
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 24					; 00000018H
	mov	ecx, 11					; 0000000bH
	mov	esi, eax
	rep movsd

; 183  : 
; 184  :         if (is_same_v<_Elem2, wchar_t>) {

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Getvals

; 185  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 186  :             _Months =

	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 187  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 188  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

	push	OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 189  :         } else {

	jmp	SHORT $LN1@Getvals
$LN2@Getvals:

; 190  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 191  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR __Lobj$[ebp]
	call	DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 192  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	0
	push	OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
	call	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 193  :         }
; 194  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -32					; size = 4
__Ptrdest$ = -20					; size = 4
__Count$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 520  : _Elem* __CRTDECL _Maklocstr(const char* _Ptr, _Elem*, const _Locinfo::_Cvtvec&) {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __1F3378D4_xlocale
	call	@__CheckForDebuggerJustMyCode@4

; 521  :     // convert C string to _Elem sequence using _Cvtvec
; 522  :     size_t _Count = _CSTD strlen(_Ptr) + 1;

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR __Count$[ebp], eax

; 523  : 
; 524  :     _Elem* _Ptrdest = static_cast<_Elem*>(_calloc_dbg(_Count, sizeof(_Elem), _CRT_BLOCK, __FILE__, __LINE__));

	mov	esi, esp
	push	524					; 0000020cH
	push	OFFSET ??_C@_0GL@NDAGNCF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	push	1
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	DWORD PTR __imp___calloc_dbg
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Ptrdest$[ebp], eax

; 525  : 
; 526  :     if (!_Ptrdest) {

	cmp	DWORD PTR __Ptrdest$[ebp], 0
	jne	SHORT $LN5@Maklocstr

; 527  :         _Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN5@Maklocstr:

; 528  :     }
; 529  : 
; 530  :     for (_Elem* _Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr) {

	mov	eax, DWORD PTR __Ptrdest$[ebp]
	mov	DWORD PTR __Ptrnext$1[ebp], eax
	jmp	SHORT $LN4@Maklocstr
$LN2@Maklocstr:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Ptrnext$1[ebp]
	add	ecx, 1
	mov	DWORD PTR __Ptrnext$1[ebp], ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@Maklocstr

; 531  :         *_Ptrnext = static_cast<_Elem>(static_cast<unsigned char>(*_Ptr));

	mov	eax, DWORD PTR __Ptrnext$1[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 532  :     }

	jmp	SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 533  : 
; 534  :     return _Ptrdest;

	mov	eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 535  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -20					; size = 4
__Count$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 90   : inline wchar_t* _Maklocwcs(const wchar_t* _Ptr) { // copy NTWCS to allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __81B41EC3_xlocnum
	call	@__CheckForDebuggerJustMyCode@4

; 91   :     const size_t _Count = _CSTD wcslen(_Ptr) + 1;

	mov	esi, esp
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR __Count$[ebp], eax

; 92   : 
; 93   :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Count, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

	mov	eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
	add	eax, 3
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0GL@IOHNGPIE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	push	2
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	DWORD PTR __imp___calloc_dbg
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Ptrdest$[ebp], eax

; 94   : 
; 95   :     if (!_Ptrdest) {

	cmp	DWORD PTR __Ptrdest$[ebp], 0
	jne	SHORT $LN2@Maklocwcs

; 96   :         _Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN2@Maklocwcs:

; 97   :     }
; 98   : 
; 99   :     _CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptrdest$[ebp]
	push	edx
	call	_wmemcpy
	add	esp, 12					; 0000000cH

; 100  :     return _Ptrdest;

	mov	eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 101  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -128						; size = 8
__Ptrnext$ = -112					; size = 4
__Ptrdest$ = -100					; size = 4
__Mbst1$ = -88						; size = 8
__Wc$ = -72						; size = 2
__Bytes$ = -60						; size = 4
__Ptr1$ = -48						; size = 4
__Wchars$ = -36						; size = 4
__Count1$ = -24						; size = 4
__Count$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 538  : inline wchar_t* __CRTDECL _Maklocstr(const char* _Ptr, wchar_t*, const _Locinfo::_Cvtvec& _Cvt) {

	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __1F3378D4_xlocale
	call	@__CheckForDebuggerJustMyCode@4

; 539  :     // convert C string to wchar_t sequence using _Cvtvec
; 540  :     size_t _Count;
; 541  :     size_t _Count1;
; 542  :     size_t _Wchars;
; 543  :     const char* _Ptr1;
; 544  :     int _Bytes;
; 545  :     wchar_t _Wc;
; 546  :     mbstate_t _Mbst1 = {};

	xor	eax, eax
	mov	DWORD PTR __Mbst1$[ebp], eax
	mov	DWORD PTR __Mbst1$[ebp+4], eax

; 547  : 
; 548  :     _Count1 = _CSTD strlen(_Ptr) + 1;

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR __Count1$[ebp], eax

; 549  :     for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count; _Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars) {

	mov	eax, DWORD PTR __Count1$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Wchars$[ebp], 0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Ptr1$[ebp], ecx
	jmp	SHORT $LN4@Maklocstr
$LN2@Maklocstr:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Ptr1$[ebp]
	add	ecx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR __Ptr1$[ebp], ecx
	mov	edx, DWORD PTR __Wchars$[ebp]
	add	edx, 1
	mov	DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@Maklocstr

; 550  :         if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0) {

	mov	eax, DWORD PTR __Cvt$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Mbst1$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr1$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Wc$[ebp]
	push	ecx
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	mov	DWORD PTR __Bytes$[ebp], eax
	cmp	DWORD PTR __Bytes$[ebp], 0
	jg	SHORT $LN8@Maklocstr

; 551  :             break;

	jmp	SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 552  :         }
; 553  :     }

	jmp	SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 554  : 
; 555  :     ++_Wchars; // count terminating nul

	mov	eax, DWORD PTR __Wchars$[ebp]
	add	eax, 1
	mov	DWORD PTR __Wchars$[ebp], eax

; 556  : 
; 557  :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Wchars, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

	mov	esi, esp
	push	557					; 0000022dH
	push	OFFSET ??_C@_0GL@NDAGNCF@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	push	2
	mov	eax, DWORD PTR __Wchars$[ebp]
	push	eax
	call	DWORD PTR __imp___calloc_dbg
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Ptrdest$[ebp], eax

; 558  : 
; 559  :     if (!_Ptrdest) {

	cmp	DWORD PTR __Ptrdest$[ebp], 0
	jne	SHORT $LN9@Maklocstr

; 560  :         _Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN9@Maklocstr:

; 561  :     }
; 562  : 
; 563  :     wchar_t* _Ptrnext = _Ptrdest;

	mov	eax, DWORD PTR __Ptrdest$[ebp]
	mov	DWORD PTR __Ptrnext$[ebp], eax

; 564  :     mbstate_t _Mbst2  = {};

	xor	eax, eax
	mov	DWORD PTR __Mbst2$[ebp], eax
	mov	DWORD PTR __Mbst2$[ebp+4], eax

; 565  : 
; 566  :     for (; 0 < _Wchars; _Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext) {

	jmp	SHORT $LN7@Maklocstr
$LN5@Maklocstr:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	mov	edx, DWORD PTR __Wchars$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Wchars$[ebp], edx
	mov	eax, DWORD PTR __Ptrnext$[ebp]
	add	eax, 2
	mov	DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:
	cmp	DWORD PTR __Wchars$[ebp], 0
	jbe	SHORT $LN6@Maklocstr

; 567  :         if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0) {

	mov	eax, DWORD PTR __Cvt$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Mbst2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count1$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptrnext$[ebp]
	push	ecx
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	mov	DWORD PTR __Bytes$[ebp], eax
	cmp	DWORD PTR __Bytes$[ebp], 0
	jg	SHORT $LN10@Maklocstr

; 568  :             break;

	jmp	SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 569  :         }
; 570  :     }

	jmp	SHORT $LN5@Maklocstr
$LN6@Maklocstr:

; 571  : 
; 572  :     *_Ptrnext = L'\0';

	xor	eax, eax
	mov	ecx, DWORD PTR __Ptrnext$[ebp]
	mov	WORD PTR [ecx], ax

; 573  : 
; 574  :     return _Ptrdest;

	mov	eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 575  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Maklocstr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@Maklocstr:
	DD	3
	DD	$LN15@Maklocstr
$LN15@Maklocstr:
	DD	-72					; ffffffb8H
	DD	2
	DD	$LN12@Maklocstr
	DD	-88					; ffffffa8H
	DD	8
	DD	$LN13@Maklocstr
	DD	-128					; ffffff80H
	DD	8
	DD	$LN14@Maklocstr
$LN14@Maklocstr:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN13@Maklocstr:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$LN12@Maklocstr:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	99					; 00000063H
	DB	0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GZipFileSystem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GZipFileSystem@@UAEPAXI@Z PROC			; ZipFileSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ZipFileSystem@@UAE@XZ		; ZipFileSystem::~ZipFileSystem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	56					; 00000038H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GZipFileSystem@@UAEPAXI@Z ENDP			; ZipFileSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@ZipFileSystem@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@ZipFileSystem@@QAEXI@Z PROC		; ZipFileSystem::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@ZipFileSystem@@QAEXI@Z ENDP		; ZipFileSystem::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\Zip\ZipFileSystem.h
;	COMDAT ??1ZipFileSystem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ZipFileSystem@@UAE@XZ PROC				; ZipFileSystem::~ZipFileSystem, COMDAT
; _this$ = ecx

; 12   : 	~ZipFileSystem() { release(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ZipFileSystem@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CAC6B671_ZipFileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ZipFileSystem@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release@ZipFileSystem@@UAEXXZ		; ZipFileSystem::release
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1ZipFile@@QAE@XZ			; ZipFile::~ZipFile
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IndexedFileSystem@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ZipFileSystem@@UAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ZipFileSystem@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ZipFileSystem@@UAE@XZ ENDP				; ZipFileSystem::~ZipFileSystem
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ??0ZipFileSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0ZipFileSystem@@QAE@XZ PROC				; ZipFileSystem::ZipFileSystem, COMDAT
; _this$ = ecx

; 32   : }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ZipFileSystem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IndexedFileSystem@@QAE@XZ		; IndexedFileSystem::IndexedFileSystem
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ZipFileSystem@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ZipFile@@QAE@XZ			; ZipFile::ZipFile
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ZipFileSystem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1IndexedFileSystem@@UAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0ZipFileSystem@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ZipFileSystem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ZipFileSystem@@QAE@XZ ENDP				; ZipFileSystem::ZipFileSystem
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\Zip\ZipFile.h
;	COMDAT ??1ZipFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ZipFile@@QAE@XZ PROC					; ZipFile::~ZipFile, COMDAT
; _this$ = ecx

; 79   : 	~ZipFile() { release(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ZipFile@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8DDDD29B_ZipFile@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release@ZipFile@@QAEXXZ		; ZipFile::release
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ZipFile@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ZipFile@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ZipFile@@QAE@XZ ENDP					; ZipFile::~ZipFile
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\Zip\ZipFile.h
;	COMDAT ??0ZipFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ZipFile@@QAE@XZ PROC					; ZipFile::ZipFile, COMDAT
; _this$ = ecx

; 78   : 	ZipFile() : centralDir(nullptr), centralDirEntryHeaders(nullptr), zipFile(nullptr) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8DDDD29B_ZipFile@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ZipFile@@QAE@XZ ENDP					; ZipFile::ZipFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ PROC ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ENDP ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??0?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
tv77 = -236						; size = 4
tv79 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -209						; size = 1
_this$ = -8						; size = 4
??0?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ PROC ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@U?$pair@$$CBII@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,unsigned int> >::allocator<std::pair<unsigned int const ,unsigned int> >
	mov	DWORD PTR tv79[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAE@XZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_map@IIU?$hash@I@std@@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ENDP ; std::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >, COMDAT
; _this$ = ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E9D2A317_vector
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -240						; size = 4
_$S5$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >, COMDAT
; _this$ = ecx

; 327  :     ~_Hash_vec() {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 328  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Tidy

; 329  : #if _ITERATOR_DEBUG_LEVEL != 0
; 330  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Aliter, _Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first
	push	eax
	lea	ecx, DWORD PTR _$S5$[ebp]
	call	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
	lea	eax, DWORD PTR _$S5$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 331  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 332  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 333  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Hash_vec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Hash_vec:
	DD	1
	DD	$LN4@Hash_vec
$LN4@Hash_vec:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@Hash_vec
$LN3@Hash_vec:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	53					; 00000035H
	DB	0
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv84 = -228						; size = 4
tv86 = -224						; size = 4
tv88 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 319  :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 320  :         _Destroy_range(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	add	esp, 8

; 321  :         _Mypair._Get_first().deallocate(_Mypair._Myval2._Myfirst, size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::size
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	push	edx
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	mov	ecx, DWORD PTR tv88[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::deallocate

; 322  :         _Mypair._Myval2._Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 323  :         _Mypair._Myval2._Mylast  = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 324  :         _Mypair._Myval2._Myend   = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 325  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Newend$1 = -56					; size = 4
__Newvec$2 = -44					; size = 4
__Alvec$ = -32						; size = 4
__Oldsize$ = -20					; size = 4
_this$ = -8						; size = 4
__Cells$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Assign_grow, COMDAT
; _this$ = ecx

; 296  :     void _Assign_grow(const size_type _Cells, const value_type _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 297  :         // set the elements stored here to _Cells copies of _Val, leaving the value unchanged if an exception is thrown
; 298  :         const auto _Oldsize = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::size
	mov	DWORD PTR __Oldsize$[ebp], eax

; 299  :         _STL_INTERNAL_CHECK(_Oldsize <= _Cells);
; 300  :         auto& _Alvec = _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >,1>::_Get_first
	mov	DWORD PTR __Alvec$[ebp], eax

; 301  :         if (_Oldsize < _Cells) {

	mov	eax, DWORD PTR __Oldsize$[ebp]
	cmp	eax, DWORD PTR __Cells$[ebp]
	jae	SHORT $LN2@Assign_gro

; 302  :             const auto _Newvec = _Alvec.allocate(_Cells); // throws

	mov	eax, DWORD PTR __Cells$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alvec$[ebp]
	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocate
	mov	DWORD PTR __Newvec$2[ebp], eax

; 303  :             // nothrow hereafter
; 304  :             if (_Oldsize != 0) {

	cmp	DWORD PTR __Oldsize$[ebp], 0
	je	SHORT $LN4@Assign_gro

; 305  :                 _Destroy_range(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *>
	add	esp, 8

; 306  :                 _Alvec.deallocate(_Mypair._Myval2._Myfirst, _Oldsize);

	mov	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Alvec$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::deallocate
$LN4@Assign_gro:

; 307  :             }
; 308  : 
; 309  :             _Mypair._Myval2._Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$2[ebp]
	mov	DWORD PTR [eax+4], ecx

; 310  :             const auto _Newend       = _Newvec + _Cells;

	mov	eax, DWORD PTR __Cells$[ebp]
	mov	ecx, DWORD PTR __Newvec$2[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Newend$1[ebp], edx

; 311  :             _Mypair._Myval2._Mylast  = _Newend;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newend$1[ebp]
	mov	DWORD PTR [eax+8], ecx

; 312  :             _Mypair._Myval2._Myend   = _Newend;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newend$1[ebp]
	mov	DWORD PTR [eax+12], ecx

; 313  :             _STD uninitialized_fill(_Newvec, _Newend, _Val);

	lea	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newend$1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$2[ebp]
	push	edx
	call	??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
	add	esp, 12					; 0000000cH

; 314  :         } else {

	jmp	SHORT $LN1@Assign_gro
$LN2@Assign_gro:

; 315  :             _STD fill(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast, _Val);

	lea	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >
	add	esp, 12					; 0000000cH
$LN1@Assign_gro:

; 316  :         }
; 317  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Assign_grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::size, COMDAT
; _this$ = ecx

; 287  :     _NODISCARD size_type size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 288  :         return static_cast<size_type>(_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 289  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$03@std@@YAII@Z	; std::_Get_size_of_n<4>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAEAAMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAEAAMXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 1887 :     float& _Max_bucket_size() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1888 :         return _Traitsobj._Get_max_bucket_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAEAAMXZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size

; 1889 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAEAAMXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
tv128 = -236						; size = 4
tv132 = -232						; size = 4
tv82 = -232						; size = 4
tv74 = -232						; size = 4
tv69 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 391  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	??0?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ; std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv74[ebp]
	call	??0?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv82[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > ><std::allocator<std::pair<unsigned int const ,unsigned int> > const &,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 8

; 392  :         // construct empty hash table
; 393  :         _Max_bucket_size() = _Bucket_size;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Max_bucket_size
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax], xmm0

; 394  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv128[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR tv128[ebp]
	call	?_Unchecked_end@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Unchecked_end
	mov	eax, DWORD PTR [eax]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR tv132[ebp]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::_Assign_grow

; 395  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 396  :         _Stl_internal_check_container_invariants();
; 397  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 398  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > > > > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal, COMDAT
; _this$ = ecx

; 1786 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1787 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Get_first

; 1788 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
__Newhead$ = -88					; size = 4
__Al$ = -76						; size = 4
__Proxy$ = -64						; size = 8
_$S26$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1771 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1772 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S26$[ebp]
	call	??$?0U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >
	lea	eax, DWORD PTR _$S26$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1773 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1774 :         auto& _Al     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1775 :         auto _Newhead = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocate
	mov	DWORD PTR __Newhead$[ebp], eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *,std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
	add	esp, 8

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBII@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> *,std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> * &>
	add	esp, 8

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newhead$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1779 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1780 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@Alloc_sent:
	DD	3
	DD	$LN8@Alloc_sent
$LN8@Alloc_sent:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN5@Alloc_sent
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN6@Alloc_sent
$LN6@Alloc_sent:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	54					; 00000036H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
__My_data$ = -32					; size = 4
__Al$ = -20						; size = 4
_this$ = -8						; size = 4
?_Tidy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Tidy, COMDAT
; _this$ = ecx

; 1436 :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1437 :         auto& _Al      = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1438 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1439 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
	add	esp, 8

; 1441 :         _Node::_Freenode0(_Al, _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBII@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >
	add	esp, 8

; 1442 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_end@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1115 :     _Unchecked_iterator _Unchecked_end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1116 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBII@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1117 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_$S6$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1046 :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Tidy

; 1047 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1048 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S6$[ebp]
	call	??$?0U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >
	lea	eax, DWORD PTR _$S6$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1049 :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1050 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1051 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@list
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@list:
	DD	1
	DD	$LN4@list
$LN4@list:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@list
$LN3@list:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	54					; 00000036H
	DB	0
??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 808  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR tv70[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBII@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBII@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,unsigned int> > >,1><std::allocator<std::pair<unsigned int const ,unsigned int> > const &>

; 809  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Alloc_sentinel_and_proxy

; 810  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::deallocate, COMDAT

; 694  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 695  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 697  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BA@@std@@YAII@Z	; std::_Get_size_of_n<16>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBII@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBII@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,unsigned int>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??0?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Traits$ = 8						; size = 4
??0?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z PROC ; std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>, COMDAT
; _this$ = ecx

; 51   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Traits$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Umap_traits@IIV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBII@std@@@2@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ENDP ; std::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>::_Umap_traits<unsigned int,unsigned int,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBII@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U?$pair@$$CBII@std@@@std@@QAE@XZ PROC	; std::allocator<std::pair<unsigned int const ,unsigned int> >::allocator<std::pair<unsigned int const ,unsigned int> >, COMDAT
; _this$ = ecx

; 802  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBII@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<unsigned int const ,unsigned int> >::allocator<std::pair<unsigned int const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIndexedFileSystem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIndexedFileSystem@@UAEPAXI@Z PROC			; IndexedFileSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IndexedFileSystem@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIndexedFileSystem@@UAEPAXI@Z ENDP			; IndexedFileSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1IndexedFileSystem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IndexedFileSystem@@UAE@XZ PROC			; IndexedFileSystem::~IndexedFileSystem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileSystem@@UAE@XZ			; FileSystem::~FileSystem
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1IndexedFileSystem@@UAE@XZ ENDP			; IndexedFileSystem::~IndexedFileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\FileSystem.h
;	COMDAT ??0IndexedFileSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IndexedFileSystem@@QAE@XZ PROC			; IndexedFileSystem::IndexedFileSystem, COMDAT
; _this$ = ecx

; 22   : 	IndexedFileSystem() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __810F60AC_FileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FileSystem@@QAE@XZ			; FileSystem::FileSystem
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IndexedFileSystem@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IndexedFileSystem@@QAE@XZ ENDP			; IndexedFileSystem::IndexedFileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFileSystem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFileSystem@@UAEPAXI@Z PROC				; FileSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FileSystem@@UAE@XZ			; FileSystem::~FileSystem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFileSystem@@UAEPAXI@Z ENDP				; FileSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\FileSystem.h
;	COMDAT ??1FileSystem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1FileSystem@@UAE@XZ PROC				; FileSystem::~FileSystem, COMDAT
; _this$ = ecx

; 10   : 	virtual ~FileSystem() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __810F60AC_FileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileSystem@@6B@
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FileSystem@@UAE@XZ ENDP				; FileSystem::~FileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\FileSystem.h
;	COMDAT ??0FileSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FileSystem@@QAE@XZ PROC				; FileSystem::FileSystem, COMDAT
; _this$ = ecx

; 9    : 	FileSystem() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __810F60AC_FileSystem@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FileSystem@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FileSystem@@QAE@XZ ENDP				; FileSystem::FileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GDefaultResourceCreator@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GDefaultResourceCreator@@UAEPAXI@Z PROC		; DefaultResourceCreator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DefaultResourceCreator@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDefaultResourceCreator@@UAEPAXI@Z ENDP		; DefaultResourceCreator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DefaultResourceCreator@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DefaultResourceCreator@@UAE@XZ PROC			; DefaultResourceCreator::~DefaultResourceCreator, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ResourceCreator@@UAE@XZ		; ResourceCreator::~ResourceCreator
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DefaultResourceCreator@@UAE@XZ ENDP			; DefaultResourceCreator::~DefaultResourceCreator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0DefaultResourceCreator@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0DefaultResourceCreator@@QAE@XZ PROC			; DefaultResourceCreator::DefaultResourceCreator, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ResourceCreator@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DefaultResourceCreator@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0DefaultResourceCreator@@QAE@XZ ENDP			; DefaultResourceCreator::DefaultResourceCreator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceCreator.h
;	COMDAT ?getFilePattern@DefaultResourceCreator@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFilePattern@DefaultResourceCreator@@UBEPBDXZ PROC	; DefaultResourceCreator::getFilePattern, COMDAT
; _this$ = ecx

; 21   : 	virtual const char* getFilePattern() const { return "*"; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E77FCB6C_ResourceCreator@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, OFFSET ??_C@_01NBENCBCI@?$CK@
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFilePattern@DefaultResourceCreator@@UBEPBDXZ ENDP	; DefaultResourceCreator::getFilePattern
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GResourceCreator@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GResourceCreator@@UAEPAXI@Z PROC			; ResourceCreator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ResourceCreator@@UAE@XZ		; ResourceCreator::~ResourceCreator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GResourceCreator@@UAEPAXI@Z ENDP			; ResourceCreator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ResourceCreator@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ResourceCreator@@QAE@XZ PROC				; ResourceCreator::ResourceCreator, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ResourceCreator@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ResourceCreator@@QAE@XZ ENDP				; ResourceCreator::ResourceCreator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceCreator.h
;	COMDAT ??1ResourceCreator@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ResourceCreator@@UAE@XZ PROC				; ResourceCreator::~ResourceCreator, COMDAT
; _this$ = ecx

; 12   : 	virtual ~ResourceCreator() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E77FCB6C_ResourceCreator@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ResourceCreator@@6B@
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ResourceCreator@@UAE@XZ ENDP				; ResourceCreator::~ResourceCreator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@ResourceManager@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@ResourceManager@@QAEXI@Z PROC		; ResourceManager::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@ResourceManager@@QAEXI@Z ENDP		; ResourceManager::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ResourceManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ResourceManager@@QAE@XZ PROC				; ResourceManager::~ResourceManager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1mutex@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ResourceManager@@QAE@XZ ENDP				; ResourceManager::~ResourceManager
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?getRawResourceFromNativeFileSystem@ResourceManager@@QAEPAXABVResourceName@@AAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_resourceName$ = 8					; size = 4
_resourceSize$ = 12					; size = 4
?getRawResourceFromNativeFileSystem@ResourceManager@@QAEPAXABVResourceName@@AAI@Z PROC ; ResourceManager::getRawResourceFromNativeFileSystem, COMDAT
; _this$ = ecx

; 164  : void* ResourceManager::getRawResourceFromNativeFileSystem(const ResourceName& resourceName, size_t& resourceSize) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 165  :     return nullptr;

	xor	eax, eax

; 166  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getRawResourceFromNativeFileSystem@ResourceManager@@QAEPAXABVResourceName@@AAI@Z ENDP ; ResourceManager::getRawResourceFromNativeFileSystem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?getRawResourceFromArchive@ResourceManager@@QAEPAXABVResourceName@@AAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_resourceName$ = 8					; size = 4
_resourceSize$ = 12					; size = 4
?getRawResourceFromArchive@ResourceManager@@QAEPAXABVResourceName@@AAI@Z PROC ; ResourceManager::getRawResourceFromArchive, COMDAT
; _this$ = ecx

; 160  : void* ResourceManager::getRawResourceFromArchive(const ResourceName& resourceName, size_t& resourceSize) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 161  :     return nullptr;

	xor	eax, eax

; 162  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getRawResourceFromArchive@ResourceManager@@QAEPAXABVResourceName@@AAI@Z ENDP ; ResourceManager::getRawResourceFromArchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
_TEXT	SEGMENT
tv167 = -320						; size = 4
tv151 = -316						; size = 4
tv135 = -316						; size = 4
tv83 = -316						; size = 4
$T2 = -308						; size = 4
$T3 = -296						; size = 12
$T4 = -273						; size = 1
_newHandler$5 = -72					; size = 4
_findHandlerIter$ = -60					; size = 12
_locker$ = -40						; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_resourceID$ = 12					; size = 4
?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z PROC ; ResourceManager::getResourceAsyncFromArchive, COMDAT
; _this$ = ecx

; 144  : ResourceReference ResourceManager::getResourceAsyncFromArchive(ResourceID resourceID) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 145  :     std::unique_lock<std::mutex> locker(resMutex);

	push	8
	lea	ecx, DWORD PTR _locker$[ebp]
	call	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 146  : 
; 147  :     auto findHandlerIter = resources.find(resourceID);

	push	12					; 0000000cH
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	lea	ecx, DWORD PTR _resourceID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _findHandlerIter$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv83[ebp]
	call	??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 148  :     if (findHandlerIter == resources.end()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv135[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv135[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end
	mov	DWORD PTR tv167[ebp], eax
	mov	edx, DWORD PTR tv167[ebp]
	push	edx
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==
	mov	BYTE PTR $T4[ebp], al
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T4[ebp]
	test	eax, eax
	je	SHORT $LN2@getResourc

; 149  :         ResourceHandler& newHandler = createNewHandler(resourceID);

	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z ; ResourceManager::createNewHandler
	mov	DWORD PTR _newHandler$5[ebp], eax

; 150  :         locker.unlock();

	lea	ecx, DWORD PTR _locker$[ebp]
	call	?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ ; std::unique_lock<std::mutex>::unlock

; 151  : 
; 152  :         resourceAsyncLoader->loadResource(resourceID, newHandler);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR tv151[ebp], ecx
	mov	edx, DWORD PTR _newHandler$5[ebp]
	push	edx
	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv151[ebp]
	call	?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z ; ResourceAsyncLoader::loadResource

; 153  : 
; 154  :         return newHandler;

	mov	eax, DWORD PTR _newHandler$5[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@getResourc
$LN2@getResourc:

; 155  :     }
; 156  : 
; 157  :     return findHandlerIter->second;

	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@getResourc:

; 158  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@getResourc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@getResourc:
	DD	2
	DD	$LN12@getResourc
$LN12@getResourc:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN9@getResourc
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN10@getResourc
$LN10@getResourc:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@getResourc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$0:
	lea	ecx, DWORD PTR _locker$[ebp]
	jmp	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$1:
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z ENDP ; ResourceManager::getResourceAsyncFromArchive
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
_TEXT	SEGMENT
tv169 = -332						; size = 4
tv153 = -328						; size = 4
tv137 = -328						; size = 4
tv85 = -328						; size = 4
$T2 = -320						; size = 4
$T3 = -308						; size = 12
$T4 = -285						; size = 1
_newHandler$5 = -84					; size = 4
_findHandlerIter$ = -72					; size = 12
_locker$ = -52						; size = 8
_resourceID$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_resourceName$ = 12					; size = 4
?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z PROC ; ResourceManager::getResourceAsyncFromArchive, COMDAT
; _this$ = ecx

; 126  : ResourceReference ResourceManager::getResourceAsyncFromArchive(const ResourceName& resourceName) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 127  :     ResourceID resourceID = resourceName.hash();

	mov	ecx, DWORD PTR _resourceName$[ebp]
	call	?hash@ResourceName@@QBEIXZ		; ResourceName::hash
	mov	DWORD PTR _resourceID$[ebp], eax

; 128  : 
; 129  :     std::unique_lock<std::mutex> locker(resMutex);

	push	8
	lea	ecx, DWORD PTR _locker$[ebp]
	call	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 130  : 
; 131  :     auto findHandlerIter = resources.find(resourceID);

	push	12					; 0000000cH
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv85[ebp], eax
	lea	ecx, DWORD PTR _resourceID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _findHandlerIter$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv85[ebp]
	call	??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 132  :     if (findHandlerIter == resources.end()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv137[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end
	mov	DWORD PTR tv169[ebp], eax
	mov	edx, DWORD PTR tv169[ebp]
	push	edx
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==
	mov	BYTE PTR $T4[ebp], al
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T4[ebp]
	test	eax, eax
	je	SHORT $LN2@getResourc

; 133  :         ResourceHandler& newHandler = createNewHandler(resourceID);

	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z ; ResourceManager::createNewHandler
	mov	DWORD PTR _newHandler$5[ebp], eax

; 134  :         locker.unlock();

	lea	ecx, DWORD PTR _locker$[ebp]
	call	?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ ; std::unique_lock<std::mutex>::unlock

; 135  : 
; 136  :         resourceAsyncLoader->loadResource(resourceID, newHandler);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR tv153[ebp], ecx
	mov	edx, DWORD PTR _newHandler$5[ebp]
	push	edx
	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv153[ebp]
	call	?loadResource@ResourceAsyncLoader@@QAEXIAAVResourceHandler@@@Z ; ResourceAsyncLoader::loadResource

; 137  : 
; 138  :         return newHandler;

	mov	eax, DWORD PTR _newHandler$5[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@getResourc
$LN2@getResourc:

; 139  :     }
; 140  : 
; 141  :     return findHandlerIter->second;

	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@getResourc:

; 142  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@getResourc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN14@getResourc:
	DD	3
	DD	$LN13@getResourc
$LN13@getResourc:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN9@getResourc
	DD	-52					; ffffffccH
	DD	8
	DD	$LN10@getResourc
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN11@getResourc
$LN11@getResourc:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@getResourc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@getResourc:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$0:
	lea	ecx, DWORD PTR _locker$[ebp]
	jmp	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
__unwindfunclet$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$1:
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getResourceAsyncFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z ENDP ; ResourceManager::getResourceAsyncFromArchive
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
_TEXT	SEGMENT
tv170 = -584						; size = 4
tv152 = -580						; size = 4
tv135 = -580						; size = 4
tv83 = -580						; size = 4
$T2 = -572						; size = 4
$T3 = -560						; size = 12
$T4 = -537						; size = 1
_resourceName$5 = -336					; size = 256
_newHandler$6 = -72					; size = 4
_findHandlerIter$ = -60					; size = 12
_locker$ = -40						; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_resourceID$ = 12					; size = 4
?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z PROC ; ResourceManager::getResourceFromArchive, COMDAT
; _this$ = ecx

; 110  : ResourceReference ResourceManager::getResourceFromArchive(ResourceID resourceID) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 572				; 0000023cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-584]
	mov	ecx, 143				; 0000008fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 111  :     std::unique_lock<std::mutex> locker(resMutex);

	push	8
	lea	ecx, DWORD PTR _locker$[ebp]
	call	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 
; 113  :     auto findHandlerIter = resources.find(resourceID);

	push	12					; 0000000cH
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	lea	ecx, DWORD PTR _resourceID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _findHandlerIter$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv83[ebp]
	call	??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 114  :     if (findHandlerIter == resources.end()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv135[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv135[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end
	mov	DWORD PTR tv170[ebp], eax
	mov	edx, DWORD PTR tv170[ebp]
	push	edx
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==
	mov	BYTE PTR $T4[ebp], al
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T4[ebp]
	test	eax, eax
	je	$LN2@getResourc

; 115  :         ResourceHandler& newHandler = createNewHandler(resourceID);

	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z ; ResourceManager::createNewHandler
	mov	DWORD PTR _newHandler$6[ebp], eax

; 116  :         locker.unlock();

	lea	ecx, DWORD PTR _locker$[ebp]
	call	?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ ; std::unique_lock<std::mutex>::unlock

; 117  : 
; 118  :         ResourceName resourceName = zipFileSystem->getResourceName(resourceID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR tv152[ebp], ecx
	mov	edx, DWORD PTR _resourceID$[ebp]
	push	edx
	lea	eax, DWORD PTR _resourceName$5[ebp]
	push	eax
	mov	ecx, DWORD PTR tv152[ebp]
	call	?getResourceName@ZipFileSystem@@QAE?AVResourceName@@I@Z ; ZipFileSystem::getResourceName

; 119  : 
; 120  :         return loadNewResourceFromArchive(newHandler, resourceName, resourceID);

	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _resourceName$5[ebp]
	push	ecx
	mov	edx, DWORD PTR _newHandler$6[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z ; ResourceManager::loadNewResourceFromArchive
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@getResourc
$LN2@getResourc:

; 121  :     }
; 122  : 
; 123  :     return findHandlerIter->second;

	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@getResourc:

; 124  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@getResourc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 584				; 00000248H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN14@getResourc:
	DD	3
	DD	$LN13@getResourc
$LN13@getResourc:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN9@getResourc
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN10@getResourc
	DD	-336					; fffffeb0H
	DD	256					; 00000100H
	DD	$LN11@getResourc
$LN11@getResourc:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN10@getResourc:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@getResourc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$0:
	lea	ecx, DWORD PTR _locker$[ebp]
	jmp	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z$1:
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-588]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@I@Z ENDP ; ResourceManager::getResourceFromArchive
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
_TEXT	SEGMENT
tv166 = -332						; size = 4
tv137 = -328						; size = 4
tv85 = -328						; size = 4
$T2 = -320						; size = 4
$T3 = -308						; size = 12
$T4 = -285						; size = 1
_newHandler$5 = -84					; size = 4
_findHandlerIter$ = -72					; size = 12
_locker$ = -52						; size = 8
_resourceID$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_resourceName$ = 12					; size = 4
?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z PROC ; ResourceManager::getResourceFromArchive, COMDAT
; _this$ = ecx

; 94   : ResourceReference ResourceManager::getResourceFromArchive(const ResourceName& resourceName) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 95   :     ResourceID resourceID = resourceName.hash();

	mov	ecx, DWORD PTR _resourceName$[ebp]
	call	?hash@ResourceName@@QBEIXZ		; ResourceName::hash
	mov	DWORD PTR _resourceID$[ebp], eax

; 96   : 
; 97   :     std::unique_lock<std::mutex> locker(resMutex);

	push	8
	lea	ecx, DWORD PTR _locker$[ebp]
	call	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 98   : 
; 99   :     auto findHandlerIter = resources.find(resourceID);

	push	12					; 0000000cH
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv85[ebp], eax
	lea	ecx, DWORD PTR _resourceID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _findHandlerIter$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv85[ebp]
	call	??$find@X@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@1@ABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::find<void>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 100  :     if (findHandlerIter == resources.end()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv137[ebp]
	call	?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end
	mov	DWORD PTR tv166[ebp], eax
	mov	edx, DWORD PTR tv166[ebp]
	push	edx
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator==
	mov	BYTE PTR $T4[ebp], al
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T4[ebp]
	test	eax, eax
	je	SHORT $LN2@getResourc

; 101  :         ResourceHandler& newHandler = createNewHandler(resourceID);

	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z ; ResourceManager::createNewHandler
	mov	DWORD PTR _newHandler$5[ebp], eax

; 102  :         locker.unlock();

	lea	ecx, DWORD PTR _locker$[ebp]
	call	?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ ; std::unique_lock<std::mutex>::unlock

; 103  : 
; 104  :         return loadNewResourceFromArchive(newHandler, resourceName, resourceID);

	mov	eax, DWORD PTR _resourceID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resourceName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newHandler$5[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z ; ResourceManager::loadNewResourceFromArchive
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@getResourc
$LN2@getResourc:

; 105  :     }
; 106  : 
; 107  :     return findHandlerIter->second;

	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _locker$[ebp]
	call	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@getResourc:

; 108  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@getResourc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN14@getResourc:
	DD	3
	DD	$LN13@getResourc
$LN13@getResourc:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN9@getResourc
	DD	-52					; ffffffccH
	DD	8
	DD	$LN10@getResourc
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN11@getResourc
$LN11@getResourc:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@getResourc:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@getResourc:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$0:
	lea	ecx, DWORD PTR _locker$[ebp]
	jmp	??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
__unwindfunclet$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z$1:
	lea	ecx, DWORD PTR _findHandlerIter$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z ENDP ; ResourceManager::getResourceFromArchive
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?release@ResourceManager@@QAEXXZ
_TEXT	SEGMENT
tv178 = -372						; size = 4
tv188 = -368						; size = 4
tv177 = -368						; size = 4
tv134 = -368						; size = 4
tv93 = -368						; size = 4
tv84 = -368						; size = 4
tv73 = -368						; size = 4
$T1 = -360						; size = 40
$T2 = -312						; size = 4
$T3 = -300						; size = 4
$T4 = -288						; size = 4
$T5 = -276						; size = 4
$T6 = -264						; size = 4
_creator$7 = -60					; size = 4
_<end>$L0$8 = -48					; size = 4
_<begin>$L0$9 = -36					; size = 4
_<range>$L0$10 = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?release@ResourceManager@@QAEXXZ PROC			; ResourceManager::release, COMDAT
; _this$ = ecx

; 34   : void ResourceManager::release() {

	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 35   :     if (zipFileSystem) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN5@release

; 36   :         zipFileSystem->release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?release@ZipFileSystem@@UAEXXZ		; ZipFileSystem::release

; 37   :         delete zipFileSystem;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR $T6[ebp], ecx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN10@release
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GZipFileSystem@@UAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN11@release
$LN10@release:
	mov	DWORD PTR tv73[ebp], 0
$LN11@release:

; 38   :         zipFileSystem = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
$LN5@release:

; 39   :     }
; 40   : 
; 41   :     if (nativeFileSystem) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN6@release

; 42   :         nativeFileSystem->release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	call	?release@NativeFileSystem@@UAEXXZ	; NativeFileSystem::release

; 43   :         delete nativeFileSystem;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	DWORD PTR $T5[ebp], ecx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN12@release
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GNativeFileSystem@@UAEPAXI@Z
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN13@release
$LN12@release:
	mov	DWORD PTR tv84[ebp], 0
$LN13@release:

; 44   :         nativeFileSystem = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
$LN6@release:

; 45   :     }
; 46   : 
; 47   :     if (resourceAsyncLoader) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN7@release

; 48   :         delete resourceAsyncLoader;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN14@release
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_GResourceAsyncLoader@@QAEPAXI@Z
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN15@release
$LN14@release:
	mov	DWORD PTR tv93[ebp], 0
$LN15@release:

; 49   :         resourceAsyncLoader = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
$LN7@release:

; 50   :     }
; 51   : 
; 52   :     if (defaultResourceCreator) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN8@release

; 53   :         delete defaultResourceCreator;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN16@release
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_GDefaultResourceCreator@@UAEPAXI@Z
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN17@release
$LN16@release:
	mov	DWORD PTR tv134[ebp], 0
$LN17@release:

; 54   :         defaultResourceCreator = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+140], 0
$LN8@release:

; 55   :     }
; 56   : 
; 57   :     for (auto& creator : resourceCreators) {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _<range>$L0$10[ebp], eax
	push	4
	lea	ecx, DWORD PTR _<begin>$L0$9[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z
	lea	eax, DWORD PTR _<begin>$L0$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$10[ebp]
	call	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_begin
	push	4
	lea	ecx, DWORD PTR _<end>$L0$8[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z
	lea	eax, DWORD PTR _<end>$L0$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$10[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_end
	jmp	SHORT $LN4@release
$LN2@release:
	lea	ecx, DWORD PTR _<begin>$L0$9[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator++
$LN4@release:
	lea	eax, DWORD PTR _<end>$L0$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L0$9[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@release
	lea	ecx, DWORD PTR _<begin>$L0$9[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator*
	mov	DWORD PTR _creator$7[ebp], eax

; 58   :         delete creator.second;

	mov	eax, DWORD PTR _creator$7[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN18@release
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv177[ebp], ecx
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	DWORD PTR tv177[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv178[ebp], eax
	jmp	SHORT $LN19@release
$LN18@release:
	mov	DWORD PTR tv178[ebp], 0
$LN19@release:

; 59   :     }

	jmp	SHORT $LN2@release
$LN3@release:

; 60   :     resourceCreators = std::unordered_map<ResourceType, ResourceCreator*>();

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
	mov	DWORD PTR tv188[ebp], eax
	mov	eax, DWORD PTR tv188[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::operator=
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ

; 61   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@release
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@release:
	DD	2
	DD	$LN23@release
$LN23@release:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN21@release
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN22@release
$LN22@release:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN21@release:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
?release@ResourceManager@@QAEXXZ ENDP			; ResourceManager::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?init@ResourceManager@@QAE_NXZ
_TEXT	SEGMENT
tv149 = -556						; size = 4
tv135 = -556						; size = 4
tv88 = -556						; size = 4
tv76 = -556						; size = 4
$T2 = -548						; size = 4
$T3 = -536						; size = 4
$T4 = -524						; size = 4
$T5 = -512						; size = 4
$T6 = -500						; size = 256
$T7 = -236						; size = 4
$T8 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?init@ResourceManager@@QAE_NXZ PROC			; ResourceManager::init, COMDAT
; _this$ = ecx

; 14   : bool ResourceManager::init() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init@ResourceManager@@QAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 544				; 00000220H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-556]
	mov	ecx, 136				; 00000088H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 15   :     zipFileSystem = new ZipFileSystem();

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN7@init
	push	56					; 00000038H
	mov	ecx, DWORD PTR $T7[ebp]
	call	?__autoclassinit2@ZipFileSystem@@QAEXI@Z
	push	56					; 00000038H
	push	0
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0ZipFileSystem@@QAE@XZ		; ZipFileSystem::ZipFileSystem
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN8@init
$LN7@init:
	mov	DWORD PTR tv76[ebp], 0
$LN8@init:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR [edx+132], eax

; 16   :     if (!zipFileSystem->init("Assets.zip")) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR tv88[ebp], ecx
	push	OFFSET ??_C@_0L@EIDODEPL@Assets?4zip@
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0ResourceName@@QAE@PBD@Z		; ResourceName::ResourceName
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR tv88[ebp]
	call	?init@ZipFileSystem@@UAE_NABVResourceName@@@Z ; ZipFileSystem::init
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@init

; 17   :         return false;

	xor	al, al
	jmp	$LN1@init
$LN2@init:

; 18   :     }
; 19   : 
; 20   :     nativeFileSystem = new NativeFileSystem();

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN9@init
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0NativeFileSystem@@QAE@XZ		; NativeFileSystem::NativeFileSystem
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN10@init
$LN9@init:
	mov	DWORD PTR tv135[ebp], 0
$LN10@init:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [ecx+136], edx

; 21   :     resourceAsyncLoader = new ResourceAsyncLoader();

	push	120					; 00000078H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN11@init
	push	120					; 00000078H
	mov	ecx, DWORD PTR $T2[ebp]
	call	?__autoclassinit2@ResourceAsyncLoader@@QAEXI@Z
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0ResourceAsyncLoader@@QAE@XZ		; ResourceAsyncLoader::ResourceAsyncLoader
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN12@init
$LN11@init:
	mov	DWORD PTR tv149[ebp], 0
$LN12@init:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+128], edx

; 22   : 
; 23   :     if (!nativeFileSystem || !resourceAsyncLoader) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN4@init
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jne	SHORT $LN3@init
$LN4@init:

; 24   :         return false;

	xor	al, al
	jmp	SHORT $LN1@init
$LN3@init:

; 25   :     }
; 26   : 
; 27   :     if (!initResourceCreators()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?initResourceCreators@ResourceManager@@AAE_NXZ ; ResourceManager::initResourceCreators
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@init

; 28   :         return false;

	xor	al, al
	jmp	SHORT $LN1@init
$LN5@init:

; 29   :     }
; 30   : 
; 31   :     return true;

	mov	al, 1
$LN1@init:

; 32   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 556				; 0000022cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init@ResourceManager@@QAE_NXZ$0:
	push	56					; 00000038H
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?init@ResourceManager@@QAE_NXZ$1:
	push	4
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?init@ResourceManager@@QAE_NXZ$2:
	push	120					; 00000078H
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?init@ResourceManager@@QAE_NXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init@ResourceManager@@QAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?init@ResourceManager@@QAE_NXZ ENDP			; ResourceManager::init
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?get@ResourceManager@@SAAAV1@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?get@ResourceManager@@SAAAV1@XZ PROC			; ResourceManager::get, COMDAT

; 9    : ResourceManager& ResourceManager::get() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get@ResourceManager@@SAAAV1@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 10   :     static ResourceManager uniqueResourceManager;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??get@ResourceManager@@SAAAV2@XZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@get
	push	OFFSET ?$TSS0@?1??get@ResourceManager@@SAAAV2@XZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??get@ResourceManager@@SAAAV2@XZ@4HA, -1
	jne	SHORT $LN2@get
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	144					; 00000090H
	mov	ecx, OFFSET ?uniqueResourceManager@?1??get@ResourceManager@@SAAAV2@XZ@4V2@A
	call	?__autoclassinit2@ResourceManager@@QAEXI@Z
	mov	ecx, OFFSET ?uniqueResourceManager@?1??get@ResourceManager@@SAAAV2@XZ@4V2@A
	call	??0ResourceManager@@AAE@XZ		; ResourceManager::ResourceManager
	push	OFFSET ??__FuniqueResourceManager@?1??get@ResourceManager@@SAAAV1@XZ@YAXXZ ; `ResourceManager::get'::`2'::`dynamic atexit destructor for 'uniqueResourceManager''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??get@ResourceManager@@SAAAV2@XZ@4HA
	call	__Init_thread_footer
	add	esp, 4
$LN2@get:

; 11   :     return uniqueResourceManager;

	mov	eax, OFFSET ?uniqueResourceManager@?1??get@ResourceManager@@SAAAV2@XZ@4V2@A

; 12   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get@ResourceManager@@SAAAV1@XZ$0:
	push	OFFSET ?$TSS0@?1??get@ResourceManager@@SAAAV2@XZ@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?get@ResourceManager@@SAAAV1@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get@ResourceManager@@SAAAV1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?get@ResourceManager@@SAAAV1@XZ ENDP			; ResourceManager::get
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -224						; size = 4
_creator$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_handler$ = 12						; size = 4
_resourceName$ = 16					; size = 4
_resourceID$ = 20					; size = 4
?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z PROC ; ResourceManager::loadNewResourceFromArchive, COMDAT
; _this$ = ecx

; 87   : ResourceReference ResourceManager::loadNewResourceFromArchive(ResourceHandler& handler, const ResourceName& resourceName, ResourceID resourceID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 88   :     ResourceCreator& creator = chooseResourceCreator(resourceName);

	mov	eax, DWORD PTR _resourceName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?chooseResourceCreator@ResourceManager@@AAEAAVResourceCreator@@ABVResourceName@@@Z ; ResourceManager::chooseResourceCreator
	mov	DWORD PTR _creator$[ebp], eax

; 89   :     creator.createResourceFromZipFileSystem(handler, resourceID, *zipFileSystem);

	mov	eax, DWORD PTR _creator$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv75[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _resourceID$[ebp]
	push	edx
	mov	eax, DWORD PTR _handler$[ebp]
	push	eax
	mov	ecx, DWORD PTR _creator$[ebp]
	call	DWORD PTR tv75[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp

; 90   : 
; 91   :     return handler;

	mov	eax, DWORD PTR _handler$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ResourceReference@@QAE@AAVResourceHandler@@@Z ; ResourceReference::ResourceReference
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 92   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?loadNewResourceFromArchive@ResourceManager@@AAE?AVResourceReference@@AAVResourceHandler@@ABVResourceName@@I@Z ENDP ; ResourceManager::loadNewResourceFromArchive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z
_TEXT	SEGMENT
tv77 = -284						; size = 4
$T1 = -276						; size = 4
$T2 = -264						; size = 12
_newHandlerIter$ = -52					; size = 16
_handler$ = -28						; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_resourceID$ = 8					; size = 4
?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z PROC ; ResourceManager::createNewHandler, COMDAT
; _this$ = ecx

; 81   : ResourceHandler& ResourceManager::createNewHandler(ResourceID resourceID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 82   :     ResourceHandler handler;

	lea	ecx, DWORD PTR _handler$[ebp]
	call	??0ResourceHandler@@QAE@XZ		; ResourceHandler::ResourceHandler

; 83   :     auto newHandlerIter = resources.insert(std::make_pair(resourceID, std::move(handler)));

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	lea	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	call	??$move@AAVResourceHandler@@@std@@YA$$QAVResourceHandler@@AAV1@@Z ; std::move<ResourceHandler &>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR _resourceID$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$make_pair@AAIVResourceHandler@@@std@@YA?AU?$pair@IVResourceHandler@@@0@AAI$$QAVResourceHandler@@@Z ; std::make_pair<unsigned int &,ResourceHandler>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _newHandlerIter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv77[ebp]
	call	??$insert@U?$pair@IVResourceHandler@@@std@@$0A@@?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@IVResourceHandler@@@1@@Z ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::insert<std::pair<unsigned int,ResourceHandler>,0>

; 84   :     return newHandlerIter.first->second;

	lea	ecx, DWORD PTR _newHandlerIter$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator->
	add	eax, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR _newHandlerIter$[ebp]
	call	??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	eax, DWORD PTR $T1[ebp]

; 85   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@createNewH
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@createNewH:
	DD	2
	DD	$LN6@createNewH
$LN6@createNewH:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN4@createNewH
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$LN5@createNewH
$LN5@createNewH:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN4@createNewH:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?createNewHandler@ResourceManager@@AAEAAVResourceHandler@@I@Z ENDP ; ResourceManager::createNewHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?chooseResourceCreator@ResourceManager@@AAEAAVResourceCreator@@ABVResourceName@@@Z
_TEXT	SEGMENT
tv148 = -276						; size = 4
tv150 = -272						; size = 4
_creator$1 = -72					; size = 4
_<end>$L0$2 = -60					; size = 4
_<begin>$L0$3 = -48					; size = 4
_<range>$L0$4 = -36					; size = 4
_resourceCreator$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_resourceName$ = 8					; size = 4
?chooseResourceCreator@ResourceManager@@AAEAAVResourceCreator@@ABVResourceName@@@Z PROC ; ResourceManager::chooseResourceCreator, COMDAT
; _this$ = ecx

; 69   : ResourceCreator& ResourceManager::chooseResourceCreator(const ResourceName &resourceName) {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 70   :     ResourceCreator* resourceCreator = defaultResourceCreator;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _resourceCreator$[ebp], ecx

; 71   :     for (auto& creator : resourceCreators) {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _<range>$L0$4[ebp], eax
	push	4
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z
	lea	eax, DWORD PTR _<begin>$L0$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$4[ebp]
	call	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_begin
	push	4
	lea	ecx, DWORD PTR _<end>$L0$2[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEXI@Z
	lea	eax, DWORD PTR _<end>$L0$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _<range>$L0$4[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_end
	jmp	SHORT $LN4@chooseReso
$LN2@chooseReso:
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator++
$LN4@chooseReso:
	lea	eax, DWORD PTR _<end>$L0$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,std::_Iterator_base0>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@chooseReso
	lea	ecx, DWORD PTR _<begin>$L0$3[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > >::operator*
	mov	DWORD PTR _creator$1[ebp], eax

; 72   :         if (WildcardMatch(creator.second->getFilePattern(), resourceName.c_str())) {

	mov	ecx, DWORD PTR _resourceName$[ebp]
	call	?c_str@ResourceName@@QBEPBDXZ		; ResourceName::c_str
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR _creator$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _creator$1[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	push	eax
	mov	ecx, DWORD PTR tv148[ebp]
	push	ecx
	call	?WildcardMatch@@YA_NPBD0@Z		; WildcardMatch
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@chooseReso

; 73   :             resourceCreator = creator.second;

	mov	eax, DWORD PTR _creator$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _resourceCreator$[ebp], ecx

; 74   :             break;

	jmp	SHORT $LN3@chooseReso
$LN5@chooseReso:

; 75   :         }
; 76   :     }

	jmp	SHORT $LN2@chooseReso
$LN3@chooseReso:

; 77   : 
; 78   :     return *resourceCreator;

	mov	eax, DWORD PTR _resourceCreator$[ebp]

; 79   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@chooseReso
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@chooseReso:
	DD	2
	DD	$LN9@chooseReso
$LN9@chooseReso:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN7@chooseReso
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN8@chooseReso
$LN8@chooseReso:
	DB	60					; 0000003cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
$LN7@chooseReso:
	DB	60					; 0000003cH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	62					; 0000003eH
	DB	36					; 00000024H
	DB	76					; 0000004cH
	DB	48					; 00000030H
	DB	0
?chooseResourceCreator@ResourceManager@@AAEAAVResourceCreator@@ABVResourceName@@@Z ENDP ; ResourceManager::chooseResourceCreator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?initResourceCreators@ResourceManager@@AAE_NXZ
_TEXT	SEGMENT
tv71 = -220						; size = 4
tv79 = -217						; size = 1
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?initResourceCreators@ResourceManager@@AAE_NXZ PROC	; ResourceManager::initResourceCreators, COMDAT
; _this$ = ecx

; 63   : bool ResourceManager::initResourceCreators() {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 64   :     defaultResourceCreator = new DefaultResourceCreator();

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@initResour
	xor	eax, eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0DefaultResourceCreator@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@initResour
$LN3@initResour:
	mov	DWORD PTR tv71[ebp], 0
$LN4@initResour:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR [edx+140], eax

; 65   : 
; 66   :     return defaultResourceCreator;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN5@initResour
	mov	BYTE PTR tv79[ebp], 1
	jmp	SHORT $LN6@initResour
$LN5@initResour:
	mov	BYTE PTR tv79[ebp], 0
$LN6@initResour:
	mov	al, BYTE PTR tv79[ebp]

; 67   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initResourceCreators@ResourceManager@@AAE_NXZ ENDP	; ResourceManager::initResourceCreators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ??0ResourceManager@@AAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0ResourceManager@@AAE@XZ PROC				; ResourceManager::ResourceManager, COMDAT
; _this$ = ecx

; 12   : }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ResourceManager@@AAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0mutex@std@@QAE@XZ			; std::mutex::mutex
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ResourceManager@@AAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0ResourceManager@@AAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ResourceManager@@AAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ResourceManager@@AAE@XZ ENDP				; ResourceManager::ResourceManager
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ PROC ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ ENDP ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::operator=, COMDAT
; _this$ = ecx

; 205  :             is_nothrow_move_assignable_v<_Hasher>&& is_nothrow_move_assignable_v<_Keyeq>) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4

; 206  :         _Mybase::operator=(_STD move(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@@std@@YA$$QAV?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@0@AAV10@@Z ; std::move<std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::operator=

; 207  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 208  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??0?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
tv77 = -236						; size = 4
tv79 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -209						; size = 1
_this$ = -8						; size = 4
??0?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ PROC ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >, COMDAT
; _this$ = ecx

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >
	mov	DWORD PTR tv79[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAE@XZ ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_map@W4ResourceType@@PAVResourceCreator@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@4@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@@std@@QAE@XZ ENDP ; std::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::unordered_map<enum ResourceType,ResourceCreator *,std::hash<enum ResourceType>,std::equal_to<enum ResourceType>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::~_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::~_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Swap_val, COMDAT
; _this$ = ecx

; 377  :     void _Swap_val(_Vector_val& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E9D2A317_vector
	call	@__CheckForDebuggerJustMyCode@4

; 378  :         this->_Swap_proxy_and_iterators(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 379  :         _Swap_adl(_Myfirst, _Right._Myfirst);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 380  :         _Swap_adl(_Mylast, _Right._Mylast);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 381  :         _Swap_adl(_Myend, _Right._Myend);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Swap_adl@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@YAXAAPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0@Z ; std::_Swap_adl<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 382  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Swap_val
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >, COMDAT
; _this$ = ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E9D2A317_vector
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -240						; size = 4
_$S7$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >, COMDAT
; _this$ = ecx

; 327  :     ~_Hash_vec() {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 328  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Tidy

; 329  : #if _ITERATOR_DEBUG_LEVEL != 0
; 330  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Aliter, _Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
	push	eax
	lea	ecx, DWORD PTR _$S7$[ebp]
	call	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	lea	eax, DWORD PTR _$S7$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 331  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 332  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 333  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Hash_vec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Hash_vec:
	DD	1
	DD	$LN4@Hash_vec
$LN4@Hash_vec:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@Hash_vec
$LN3@Hash_vec:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	55					; 00000037H
	DB	0
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv84 = -228						; size = 4
tv86 = -224						; size = 4
tv88 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 319  :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 320  :         _Destroy_range(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 321  :         _Mypair._Get_first().deallocate(_Mypair._Myval2._Myfirst, size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::size
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	push	edx
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	mov	ecx, DWORD PTR tv88[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::deallocate

; 322  :         _Mypair._Myval2._Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 323  :         _Mypair._Myval2._Mylast  = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 324  :         _Mypair._Myval2._Myend   = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 325  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Newend$1 = -56					; size = 4
__Newvec$2 = -44					; size = 4
__Alvec$ = -32						; size = 4
__Oldsize$ = -20					; size = 4
_this$ = -8						; size = 4
__Cells$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Assign_grow, COMDAT
; _this$ = ecx

; 296  :     void _Assign_grow(const size_type _Cells, const value_type _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 297  :         // set the elements stored here to _Cells copies of _Val, leaving the value unchanged if an exception is thrown
; 298  :         const auto _Oldsize = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::size
	mov	DWORD PTR __Oldsize$[ebp], eax

; 299  :         _STL_INTERNAL_CHECK(_Oldsize <= _Cells);
; 300  :         auto& _Alvec = _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
	mov	DWORD PTR __Alvec$[ebp], eax

; 301  :         if (_Oldsize < _Cells) {

	mov	eax, DWORD PTR __Oldsize$[ebp]
	cmp	eax, DWORD PTR __Cells$[ebp]
	jae	SHORT $LN2@Assign_gro

; 302  :             const auto _Newvec = _Alvec.allocate(_Cells); // throws

	mov	eax, DWORD PTR __Cells$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alvec$[ebp]
	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocate
	mov	DWORD PTR __Newvec$2[ebp], eax

; 303  :             // nothrow hereafter
; 304  :             if (_Oldsize != 0) {

	cmp	DWORD PTR __Oldsize$[ebp], 0
	je	SHORT $LN4@Assign_gro

; 305  :                 _Destroy_range(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *>
	add	esp, 8

; 306  :                 _Alvec.deallocate(_Mypair._Myval2._Myfirst, _Oldsize);

	mov	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Alvec$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::deallocate
$LN4@Assign_gro:

; 307  :             }
; 308  : 
; 309  :             _Mypair._Myval2._Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$2[ebp]
	mov	DWORD PTR [eax+4], ecx

; 310  :             const auto _Newend       = _Newvec + _Cells;

	mov	eax, DWORD PTR __Cells$[ebp]
	mov	ecx, DWORD PTR __Newvec$2[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Newend$1[ebp], edx

; 311  :             _Mypair._Myval2._Mylast  = _Newend;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newend$1[ebp]
	mov	DWORD PTR [eax+8], ecx

; 312  :             _Mypair._Myval2._Myend   = _Newend;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newend$1[ebp]
	mov	DWORD PTR [eax+12], ecx

; 313  :             _STD uninitialized_fill(_Newvec, _Newend, _Val);

	lea	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newend$1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$2[ebp]
	push	edx
	call	??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	add	esp, 12					; 0000000cH

; 314  :         } else {

	jmp	SHORT $LN1@Assign_gro
$LN2@Assign_gro:

; 315  :             _STD fill(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast, _Val);

	lea	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	add	esp, 12					; 0000000cH
$LN1@Assign_gro:

; 316  :         }
; 317  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Assign_grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::size, COMDAT
; _this$ = ecx

; 287  :     _NODISCARD size_type size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 288  :         return static_cast<size_type>(_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 289  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$03@std@@YAII@Z	; std::_Get_size_of_n<4>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAEAAMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAEAAMXZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 1887 :     float& _Max_bucket_size() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1888 :         return _Traitsobj._Get_max_bucket_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_max_bucket_size@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAEAAMXZ ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Get_max_bucket_size

; 1889 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAEAAMXZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv130 = -264						; size = 4
tv134 = -260						; size = 4
tv132 = -256						; size = 4
$T2 = -248						; size = 4
__Head$3 = -44						; size = 4
__Oldsize$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1251 :     void clear() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1252 :         // TRANSITION, ABI:
; 1253 :         // LWG-2550 requires implementations to make clear() O(size()), independent of bucket_count().
; 1254 :         // Unfortunately our current data structure / ABI does not allow achieving this in the general case because:
; 1255 :         //   (1) Finding the bucket that goes with an element requires running the hash function
; 1256 :         //   (2) The hash function operator() may throw exceptions, and
; 1257 :         //   (3) clear() is a noexcept function.
; 1258 :         // We do comply with LWG-2550 if the hash function is noexcept, or if the container was empty.
; 1259 :         const auto _Oldsize = _List._Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR __Oldsize$[ebp], ecx

; 1260 :         if (_Oldsize == 0) {

	cmp	DWORD PTR __Oldsize$[ebp], 0
	jne	SHORT $LN2@clear

; 1261 :             return;

	jmp	$LN4@clear
$LN2@clear:

; 1262 :         }
; 1263 : 
; 1264 :         if _CONSTEXPR_IF (_Nothrow_hash<_Traits, key_type>) {
; 1265 :             // In testing, hash<size_t>{}(size_t{}) takes about 14 times as much time as assigning a pointer, or
; 1266 :             // ~7-8 times as much as clearing a bucket. Therefore, if we would need to assign over more than 8 times
; 1267 :             // as many buckets as elements, remove element-by-element.
; 1268 :             if (bucket_count() / 8 > _Oldsize) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket_count@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket_count
	shr	eax, 3
	cmp	eax, DWORD PTR __Oldsize$[ebp]
	jbe	SHORT $LN3@clear

; 1269 :                 const auto _Head = _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Head$3[ebp], ecx

; 1270 :                 _Unchecked_erase(_Head->_Next, _Head);

	mov	eax, DWORD PTR __Head$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Head$3[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_erase@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_erase

; 1271 :                 return;

	jmp	SHORT $LN4@clear
$LN3@clear:

; 1272 :             }
; 1273 :         }
; 1274 : 
; 1275 :         // Bulk destroy items and reset buckets
; 1276 :         _List.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?clear@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::clear

; 1277 :         _STD fill(_Vec._Mypair._Myval2._Myfirst, _Vec._Mypair._Myval2._Mylast, _Unchecked_end());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_end
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv134[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv130[ebp], ecx
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >
	add	esp, 12					; 0000000cH
$LN4@clear:

; 1278 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Unchecked_erase@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z
_TEXT	SEGMENT
tv172 = -433						; size = 1
tv138 = -433						; size = 1
tv136 = -433						; size = 1
$T1 = -428						; size = 4
$T2 = -416						; size = 4
$T3 = -404						; size = 4
__At_bucket_back$4 = -197				; size = 1
__Old_hi$5 = -188					; size = 4
__Bucket_hi$6 = -176					; size = 4
__Bucket_lo$7 = -164					; size = 4
__Bucket$8 = -152					; size = 4
__At_bucket_back$9 = -137				; size = 1
__Old_hi$10 = -128					; size = 4
__Update_lo$11 = -113					; size = 1
__Bucket_hi$12 = -104					; size = 4
__Bucket_lo$13 = -92					; size = 4
__Bucket$14 = -80					; size = 4
__Predecessor$15 = -68					; size = 4
__Eraser$ = -56						; size = 12
__Bucket_bounds$ = -36					; size = 4
__End$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_erase, COMDAT
; _this$ = ecx

; 1144 :     _Nodeptr _Unchecked_erase(_Nodeptr _First, const _Nodeptr _Last) noexcept(_Nothrow_hash<_Traits, key_type>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1145 :         if (_First == _Last) {

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN10@Unchecked_

; 1146 :             return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	jmp	$LN18@Unchecked_
$LN10@Unchecked_:

; 1147 :         }
; 1148 : 
; 1149 :         const auto _End           = _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __End$[ebp], ecx

; 1150 :         const auto _Bucket_bounds = _Vec._Mypair._Myval2._Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Bucket_bounds$[ebp], ecx

; 1151 :         _Range_eraser _Eraser{_List, _First};

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	push	eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??0_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Range_eraser

; 1152 :         {
; 1153 :             // process the first bucket, which is special because here _First might not be the beginning of the bucket
; 1154 :             const auto _Predecessor = _First->_Prev;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Predecessor$15[ebp], ecx

; 1155 :             const size_type _Bucket = bucket(_Traits::_Kfn(_Eraser._Next->_Myval)); // throws

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	add	eax, 8
	push	eax
	call	??$_Kfn@$$CBW4ResourceType@@PAVResourceCreator@@@?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@SAABW4ResourceType@@ABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Kfn<enum ResourceType const ,ResourceCreator *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIABW4ResourceType@@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket
	mov	DWORD PTR __Bucket$14[ebp], eax

; 1156 :             // nothrow hereafter this block
; 1157 :             _Nodeptr& _Bucket_lo   = _Bucket_bounds[_Bucket << 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$14[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Bucket_lo$13[ebp], edx

; 1158 :             _Nodeptr& _Bucket_hi   = _Bucket_bounds[(_Bucket << 1) + 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$14[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR __Bucket_hi$12[ebp], edx

; 1159 :             const bool _Update_lo  = _Bucket_lo == _Eraser._Next;

	mov	eax, DWORD PTR __Bucket_lo$13[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Eraser$[ebp+8]
	jne	SHORT $LN19@Unchecked_
	mov	BYTE PTR tv136[ebp], 1
	jmp	SHORT $LN20@Unchecked_
$LN19@Unchecked_:
	mov	BYTE PTR tv136[ebp], 0
$LN20@Unchecked_:
	mov	dl, BYTE PTR tv136[ebp]
	mov	BYTE PTR __Update_lo$11[ebp], dl

; 1160 :             const _Nodeptr _Old_hi = _Bucket_hi;

	mov	eax, DWORD PTR __Bucket_hi$12[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_hi$10[ebp], ecx
$LN4@Unchecked_:

; 1161 :             for (;;) { // remove elements until we hit the end of the bucket
; 1162 :                 const bool _At_bucket_back = _Eraser._Next == _Old_hi;

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Old_hi$10[ebp]
	jne	SHORT $LN21@Unchecked_
	mov	BYTE PTR tv138[ebp], 1
	jmp	SHORT $LN22@Unchecked_
$LN21@Unchecked_:
	mov	BYTE PTR tv138[ebp], 0
$LN22@Unchecked_:
	mov	cl, BYTE PTR tv138[ebp]
	mov	BYTE PTR __At_bucket_back$9[ebp], cl

; 1163 :                 _Eraser._Bump_erased();

	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Bump_erased

; 1164 :                 if (_At_bucket_back) {

	movzx	eax, BYTE PTR __At_bucket_back$9[ebp]
	test	eax, eax
	je	SHORT $LN11@Unchecked_

; 1165 :                     break;

	jmp	SHORT $LN3@Unchecked_
$LN11@Unchecked_:

; 1166 :                 }
; 1167 : 
; 1168 :                 if (_Eraser._Next == _Last) {

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN12@Unchecked_

; 1169 :                     if (_Update_lo) {

	movzx	eax, BYTE PTR __Update_lo$11[ebp]
	test	eax, eax
	je	SHORT $LN13@Unchecked_

; 1170 :                         // erased the bucket's prefix
; 1171 :                         _Bucket_lo = _Eraser._Next;

	mov	eax, DWORD PTR __Bucket_lo$13[ebp]
	mov	ecx, DWORD PTR __Eraser$[ebp+8]
	mov	DWORD PTR [eax], ecx
$LN13@Unchecked_:

; 1172 :                     }
; 1173 : 
; 1174 :                     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::~_Range_eraser
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN18@Unchecked_
$LN12@Unchecked_:

; 1175 :                 }
; 1176 :             }

	jmp	SHORT $LN4@Unchecked_
$LN3@Unchecked_:

; 1177 : 
; 1178 :             if (_Update_lo) {

	movzx	eax, BYTE PTR __Update_lo$11[ebp]
	test	eax, eax
	je	SHORT $LN14@Unchecked_

; 1179 :                 // emptied the bucket
; 1180 :                 _Bucket_lo = _End;

	mov	eax, DWORD PTR __Bucket_lo$13[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1181 :                 _Bucket_hi = _End;

	mov	eax, DWORD PTR __Bucket_hi$12[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1182 :             } else {

	jmp	SHORT $LN5@Unchecked_
$LN14@Unchecked_:

; 1183 :                 _Bucket_hi = _Predecessor;

	mov	eax, DWORD PTR __Bucket_hi$12[ebp]
	mov	ecx, DWORD PTR __Predecessor$15[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Unchecked_:

; 1184 :             }
; 1185 :         }
; 1186 : 
; 1187 :         // hereafter we are always erasing buckets' prefixes
; 1188 :         while (_Eraser._Next != _Last) {

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN6@Unchecked_

; 1189 :             const size_type _Bucket = bucket(_Traits::_Kfn(_Eraser._Next->_Myval)); // throws

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	add	eax, 8
	push	eax
	call	??$_Kfn@$$CBW4ResourceType@@PAVResourceCreator@@@?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@SAABW4ResourceType@@ABU?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@1@@Z ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Kfn<enum ResourceType const ,ResourceCreator *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIABW4ResourceType@@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket
	mov	DWORD PTR __Bucket$8[ebp], eax

; 1190 :             // nothrow hereafter this block
; 1191 :             _Nodeptr& _Bucket_lo   = _Bucket_bounds[_Bucket << 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$8[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Bucket_lo$7[ebp], edx

; 1192 :             _Nodeptr& _Bucket_hi   = _Bucket_bounds[(_Bucket << 1) + 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$8[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR __Bucket_hi$6[ebp], edx

; 1193 :             const _Nodeptr _Old_hi = _Bucket_hi;

	mov	eax, DWORD PTR __Bucket_hi$6[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_hi$5[ebp], ecx
$LN9@Unchecked_:

; 1194 :             for (;;) { // remove elements until we hit the end of the bucket
; 1195 :                 const bool _At_bucket_back = _Eraser._Next == _Old_hi;

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Old_hi$5[ebp]
	jne	SHORT $LN23@Unchecked_
	mov	BYTE PTR tv172[ebp], 1
	jmp	SHORT $LN24@Unchecked_
$LN23@Unchecked_:
	mov	BYTE PTR tv172[ebp], 0
$LN24@Unchecked_:
	mov	cl, BYTE PTR tv172[ebp]
	mov	BYTE PTR __At_bucket_back$4[ebp], cl

; 1196 :                 _Eraser._Bump_erased();

	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::_Bump_erased

; 1197 :                 if (_At_bucket_back) {

	movzx	eax, BYTE PTR __At_bucket_back$4[ebp]
	test	eax, eax
	je	SHORT $LN16@Unchecked_

; 1198 :                     break;

	jmp	SHORT $LN8@Unchecked_
$LN16@Unchecked_:

; 1199 :                 }
; 1200 : 
; 1201 :                 if (_Eraser._Next == _Last) {

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN17@Unchecked_

; 1202 :                     // erased the bucket's prefix
; 1203 :                     _Bucket_lo = _Eraser._Next;

	mov	eax, DWORD PTR __Bucket_lo$7[ebp]
	mov	ecx, DWORD PTR __Eraser$[ebp+8]
	mov	DWORD PTR [eax], ecx

; 1204 :                     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::~_Range_eraser
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN18@Unchecked_
$LN17@Unchecked_:

; 1205 :                 }
; 1206 :             }

	jmp	SHORT $LN9@Unchecked_
$LN8@Unchecked_:

; 1207 : 
; 1208 :             // emptied the bucket
; 1209 :             _Bucket_lo = _End;

	mov	eax, DWORD PTR __Bucket_lo$7[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1210 :             _Bucket_hi = _End;

	mov	eax, DWORD PTR __Bucket_hi$6[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1211 :         }

	jmp	$LN5@Unchecked_
$LN6@Unchecked_:

; 1212 : 
; 1213 :         return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??1_Range_eraser@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Range_eraser::~_Range_eraser
	mov	eax, DWORD PTR $T1[ebp]
$LN18@Unchecked_:

; 1214 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@Unchecked_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN27@Unchecked_:
	DD	1
	DD	$LN26@Unchecked_
$LN26@Unchecked_:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN25@Unchecked_
$LN25@Unchecked_:
	DB	95					; 0000005fH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?bucket@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIABW4ResourceType@@@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
?bucket@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIABW4ResourceType@@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket, COMDAT
; _this$ = ecx

; 984  :         noexcept(_Nothrow_hash<_Traits, key_type>) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 985  :         return _Traitsobj(_Keyval) & _Mask;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv73[ebp]
	call	??$?RW4ResourceType@@@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QBEIABW4ResourceType@@@Z ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::operator()<enum ResourceType>
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx+32]

; 986  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?bucket@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIABW4ResourceType@@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?bucket_count@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 975  :     _NODISCARD size_type bucket_count() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 976  :         return _Maxidx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]

; 977  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::bucket_count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 940  :     _Unchecked_iterator _Unchecked_end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 941  :         return _List._Unchecked_end();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?_Unchecked_end@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 942  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Unchecked_begin@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 932  :     _Unchecked_iterator _Unchecked_begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 933  :         return _List._Unchecked_begin();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?_Unchecked_begin@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 934  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??4?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::operator=, COMDAT
; _this$ = ecx

; 577  :     _Hash& operator=(_Hash&& _Right) { // assign by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 578  :         if (this != _STD addressof(_Right)) {

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@V?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@@std@@YAPAV?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@0@AAV10@@Z ; std::addressof<std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> > >
	add	esp, 4
	cmp	DWORD PTR _this$[ebp], eax
	je	SHORT $LN2@operator

; 579  :             _Move_assign(_Right, _Choose_pocma<_Alnode>{});

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Move_assign@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Move_assign
$LN2@operator:

; 580  : 
; 581  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 582  :             _Stl_internal_check_container_invariants();
; 583  :             _Right._Stl_internal_check_container_invariants();
; 584  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 585  :         }
; 586  : 
; 587  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 588  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Move_assign@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Move_assign@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@U_Equal_allocators@2@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Move_assign, COMDAT
; _this$ = ecx

; 504  :     void _Move_assign(_Hash& _Right, _Equal_allocators) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 505  :         clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::clear

; 506  :         _Traitsobj = _Right._Traitsobj;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 507  :         _Pocma_both(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pocma_both@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Pocma_both

; 508  :         _Swap_val(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_val@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Swap_val

; 509  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Move_assign@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Pocma_both@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
tv87 = -212						; size = 4
tv73 = -212						; size = 4
tv89 = -208						; size = 4
tv75 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Pocma_both@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Pocma_both, COMDAT
; _this$ = ecx

; 484  :     void _Pocma_both(_Hash& _Right) {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 485  :         _Pocma(_List._Getal(), _Right._List._Getal());

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	mov	DWORD PTR tv73[ebp], eax
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	call	??$_Pocma@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@YAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@0@0@Z ; std::_Pocma<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 486  :         _Pocma(_Vec._Mypair._Get_first(), _Right._Vec._Mypair._Get_first());

	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 16					; 00000010H
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >,1>::_Get_first
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR tv89[ebp]
	push	eax
	mov	ecx, DWORD PTR tv87[ebp]
	push	ecx
	call	??$_Pocma@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@YAXAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@0@0@Z ; std::_Pocma<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
	add	esp, 8

; 487  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Pocma_both@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Pocma_both
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Swap_val@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
tv79 = -208						; size = 4
tv69 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_val@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Swap_val, COMDAT
; _this$ = ecx

; 460  :     void _Swap_val(_Hash& _Right) noexcept { // swap contents with equal allocator _Hash _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 461  :         _List._Swap_val(_Right._List);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?_Swap_val@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXAAV12@@Z ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Swap_val

; 462  :         _Vec._Mypair._Myval2._Swap_val(_Right._Vec._Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR tv79[ebp]
	call	?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Swap_val

; 463  :         _STD swap(_Mask, _Right._Mask);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	??$swap@I$0A@@std@@YAXAAI0@Z		; std::swap<unsigned int,0>
	add	esp, 8

; 464  :         _STD swap(_Maxidx, _Right._Maxidx);

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	call	??$swap@I$0A@@std@@YAXAAI0@Z		; std::swap<unsigned int,0>
	add	esp, 8

; 465  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_val@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@AAEXAAV12@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Swap_val
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
tv128 = -236						; size = 4
tv132 = -232						; size = 4
tv82 = -232						; size = 4
tv74 = -232						; size = 4
tv69 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >, COMDAT
; _this$ = ecx

; 391  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	??0?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@QAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@@Z ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv74[ebp]
	call	??0?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv82[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > ><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 8

; 392  :         // construct empty hash table
; 393  :         _Max_bucket_size() = _Bucket_size;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Max_bucket_size
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax], xmm0

; 394  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv128[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR tv128[ebp]
	call	?_Unchecked_end@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_end
	mov	eax, DWORD PTR [eax]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR tv132[ebp]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::_Assign_grow

; 395  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 396  :         _Stl_internal_check_container_invariants();
; 397  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 398  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > > > > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >::_Hash<std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnextnext$1 = -60					; size = 4
__Head$ = -48						; size = 4
__Pnext$ = -36						; size = 4
__Lock$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAEXXZ PROC ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Orphan_non_end, COMDAT
; _this$ = ecx

; 377  :     void _Orphan_non_end() noexcept { // orphan iterators except end()

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 378  : #if _ITERATOR_DEBUG_LEVEL == 2
; 379  :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 380  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 381  :         const auto _Head          = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx
$LN2@Orphan_non:

; 382  :         while (*_Pnext) {

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_non

; 383  :             _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnextnext$1[ebp], ecx

; 384  :             if (static_cast<_List_const_iterator<_List_val>&>(**_Pnext)._Ptr == _Head) { // iterator is end(), move on

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Head$[ebp]
	jne	SHORT $LN4@Orphan_non

; 385  :                 _Pnext = _Pnextnext;

	mov	eax, DWORD PTR __Pnextnext$1[ebp]
	mov	DWORD PTR __Pnext$[ebp], eax

; 386  :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_non
$LN4@Orphan_non:

; 387  :                 (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 388  :                 *_Pnext             = *_Pnextnext;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR __Pnextnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@Orphan_non:

; 389  :             }
; 390  :         }

	jmp	SHORT $LN2@Orphan_non
$LN3@Orphan_non:

; 391  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 392  :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Orphan_non
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Orphan_non:
	DD	1
	DD	$LN8@Orphan_non
$LN8@Orphan_non:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_non
$LN7@Orphan_non:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Orphan_non_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >, COMDAT
; _this$ = ecx

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal, COMDAT
; _this$ = ecx

; 1786 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1787 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Get_first

; 1788 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
__Newhead$ = -88					; size = 4
__Al$ = -76						; size = 4
__Proxy$ = -64						; size = 8
_$S27$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1771 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1772 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S27$[ebp]
	call	??$?0U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >
	lea	eax, DWORD PTR _$S27$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1773 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1774 :         auto& _Al     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1775 :         auto _Newhead = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocate
	mov	DWORD PTR __Newhead$[ebp], eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
	add	esp, 8

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *,std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> * &>
	add	esp, 8

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newhead$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1779 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1780 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@Alloc_sent:
	DD	3
	DD	$LN8@Alloc_sent
$LN8@Alloc_sent:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN5@Alloc_sent
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN6@Alloc_sent
$LN6@Alloc_sent:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	55					; 00000037H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
__My_data$ = -32					; size = 4
__Al$ = -20						; size = 4
_this$ = -8						; size = 4
?_Tidy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1436 :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1437 :         auto& _Al      = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1438 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1439 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 1441 :         _Node::_Freenode0(_Al, _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 1442 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?clear@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
tv73 = -224						; size = 4
tv75 = -220						; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
?clear@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::clear, COMDAT
; _this$ = ecx

; 1426 :     void clear() noexcept { // erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1427 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1428 :         _My_data._Orphan_non_end();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Orphan_non_end

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv75[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	mov	DWORD PTR tv73[ebp], eax
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1432 :         _My_data._Mysize        = 0;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [eax+8], 0

; 1433 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_erase@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z
_TEXT	SEGMENT
__Next$1 = -120						; size = 4
__Erasures$ = -108					; size = 4
__Al$ = -96						; size = 4
__Pnextnext$2 = -84					; size = 4
__Pnext$3 = -72						; size = 4
__Marked$4 = -60					; size = 4
__Lock$5 = -48						; size = 4
__Head$ = -36						; size = 4
__Predecessor$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Unchecked_erase@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_erase, COMDAT
; _this$ = ecx

; 1376 :     _Nodeptr _Unchecked_erase(_Nodeptr _First, const _Nodeptr _Last) noexcept { // erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1377 :         if (_First == _Last) {

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN10@Unchecked_

; 1378 :             return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	jmp	$LN15@Unchecked_
$LN10@Unchecked_:

; 1379 :         }
; 1380 : 
; 1381 :         const auto _Predecessor = _First->_Prev;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Predecessor$[ebp], ecx

; 1382 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1383 :         const auto _Head = _Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx

; 1384 :         if (_First == _Head->_Next && _Last == _Head) { // orphan all non-end iterators

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN11@Unchecked_
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR __Head$[ebp]
	jne	SHORT $LN11@Unchecked_

; 1385 :             _Mypair._Myval2._Orphan_non_end();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Orphan_non_end

; 1386 :         } else { // orphan erased iterators

	jmp	$LN12@Unchecked_
$LN11@Unchecked_:

; 1387 :             _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$5[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1388 :             for (auto _Marked = _First; _Marked != _Last; _Marked = _Marked->_Next) { // mark erased nodes

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Marked$4[ebp], eax
	jmp	SHORT $LN4@Unchecked_
$LN2@Unchecked_:
	mov	eax, DWORD PTR __Marked$4[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Marked$4[ebp], ecx
$LN4@Unchecked_:
	mov	eax, DWORD PTR __Marked$4[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Unchecked_

; 1389 :                 _Marked->_Prev = nullptr;

	mov	eax, DWORD PTR __Marked$4[ebp]
	mov	DWORD PTR [eax+4], 0

; 1390 :             }

	jmp	SHORT $LN2@Unchecked_
$LN3@Unchecked_:

; 1391 : 
; 1392 :             _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$3[ebp], ecx
$LN5@Unchecked_:

; 1393 :             while (*_Pnext) {

	mov	eax, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Unchecked_

; 1394 :                 _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnextnext$2[ebp], ecx

; 1395 :                 if (static_cast<const_iterator&>(**_Pnext)._Ptr->_Prev) { // node still has a _Prev, skip

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN13@Unchecked_

; 1396 :                     _Pnext = _Pnextnext;

	mov	eax, DWORD PTR __Pnextnext$2[ebp]
	mov	DWORD PTR __Pnext$3[ebp], eax

; 1397 :                 } else { // orphan the iterator

	jmp	SHORT $LN14@Unchecked_
$LN13@Unchecked_:

; 1398 :                     (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1399 :                     *_Pnext             = *_Pnextnext;

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR __Pnextnext$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN14@Unchecked_:

; 1400 :                 }
; 1401 :             }

	jmp	SHORT $LN5@Unchecked_
$LN6@Unchecked_:

; 1402 : 
; 1403 :             // _Prev pointers not restored because we're about to delete the nodes of which they are a member anyway
; 1404 :         }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$5[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@Unchecked_:

; 1405 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1406 : 
; 1407 :         // snip out the removed range
; 1408 :         _Predecessor->_Next = _Last;

	mov	eax, DWORD PTR __Predecessor$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx

; 1409 :         _Last->_Prev        = _Predecessor;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __Predecessor$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1410 : 
; 1411 :         // count and deallocate the removed nodes
; 1412 :         auto& _Al           = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1413 :         size_type _Erasures = 0;

	mov	DWORD PTR __Erasures$[ebp], 0
$LN9@Unchecked_:

; 1414 :         do {
; 1415 :             const auto _Next = _First->_Next;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Next$1[ebp], ecx

; 1416 :             _Node::_Freenode(_Al, _First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >
	add	esp, 8

; 1417 :             _First = _Next;

	mov	eax, DWORD PTR __Next$1[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1418 :             ++_Erasures;

	mov	eax, DWORD PTR __Erasures$[ebp]
	add	eax, 1
	mov	DWORD PTR __Erasures$[ebp], eax

; 1419 :         } while (_First != _Last);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN9@Unchecked_

; 1420 : 
; 1421 :         _Mypair._Myval2._Mysize -= _Erasures;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Erasures$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1422 :         return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
$LN15@Unchecked_:

; 1423 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Unchecked_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN18@Unchecked_:
	DD	1
	DD	$LN17@Unchecked_
$LN17@Unchecked_:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN16@Unchecked_
$LN16@Unchecked_:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Unchecked_erase@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@PAU32@QAU32@@Z ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_end@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1115 :     _Unchecked_iterator _Unchecked_end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1116 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1117 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_begin@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1107 :     _Unchecked_iterator _Unchecked_begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1108 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead->_Next, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1109 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??1?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_$S8$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1046 :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Tidy

; 1047 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1048 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S8$[ebp]
	call	??$?0U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >
	lea	eax, DWORD PTR _$S8$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1049 :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1050 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1051 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@list
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@list:
	DD	1
	DD	$LN4@list
$LN4@list:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@list
$LN3@list:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	56					; 00000038H
	DB	0
??1?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::~list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Swap_val@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
__Right_data$ = -32					; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_val@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXAAV12@@Z PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Swap_val, COMDAT
; _this$ = ecx

; 959  :     void _Swap_val(list& _Right) noexcept { // swap with _Right, same allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 960  :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 961  :         auto& _Right_data = _Right._Mypair._Myval2;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Right_data$[ebp], eax

; 962  :         _My_data._Swap_proxy_and_iterators(_Right_data);

	mov	eax, DWORD PTR __Right_data$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 963  :         _Swap_adl(_My_data._Myhead, _Right_data._Myhead);

	mov	eax, DWORD PTR __Right_data$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Swap_adl@PAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> *>
	add	esp, 8

; 964  :         _STD swap(_My_data._Mysize, _Right_data._Mysize);

	mov	eax, DWORD PTR __Right_data$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 8
	push	ecx
	call	??$swap@I$0A@@std@@YAXAAI0@Z		; std::swap<unsigned int,0>
	add	esp, 8

; 965  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_val@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXAAV12@@Z ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Swap_val
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z PROC ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >, COMDAT
; _this$ = ecx

; 808  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR tv70[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >,std::_List_val<std::_List_simple_types<std::pair<enum ResourceType const ,ResourceCreator *> > >,1><std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > const &>

; 809  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::_Alloc_sentinel_and_proxy

; 810  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@1@@Z ENDP ; std::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >::list<std::pair<enum ResourceType const ,ResourceCreator *>,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::deallocate, COMDAT

; 694  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 695  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 697  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BA@@std@@YAII@Z	; std::_Get_size_of_n<16>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<enum ResourceType const ,ResourceCreator *>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??0?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@QAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Traits$ = 8						; size = 4
??0?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@QAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@@Z PROC ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>, COMDAT
; _this$ = ecx

; 51   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Traits$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Umap_traits@W4ResourceType@@PAVResourceCreator@@V?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@V?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@4@$0A@@std@@QAE@ABV?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@1@@Z ENDP ; std::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>::_Umap_traits<enum ResourceType,ResourceCreator *,std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >,std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >, COMDAT
; _this$ = ecx

; 802  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBW4ResourceType@@PAVResourceCreator@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >::allocator<std::pair<enum ResourceType const ,ResourceCreator *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QBEABU?$hash@W4ResourceType@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QBEABU?$hash@W4ResourceType@@@2@XZ PROC ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QBEABU?$hash@W4ResourceType@@@2@XZ ENDP ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ?_Do_hash@?$hash@W4ResourceType@@@std@@SAIABW4ResourceType@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Do_hash@?$hash@W4ResourceType@@@std@@SAIABW4ResourceType@@@Z PROC ; std::hash<enum ResourceType>::_Do_hash, COMDAT

; 2217 :     static size_t _Do_hash(const _Kty& _Keyval) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2218 :         return _Hash_representation(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	call	??$_Hash_representation@W4ResourceType@@@std@@YAIABW4ResourceType@@@Z ; std::_Hash_representation<enum ResourceType>
	add	esp, 4

; 2219 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_hash@?$hash@W4ResourceType@@@std@@SAIABW4ResourceType@@@Z ENDP ; std::hash<enum ResourceType>::_Do_hash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??R?$_Conditionally_enabled_hash@W4ResourceType@@$00@std@@QBEIABW4ResourceType@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??R?$_Conditionally_enabled_hash@W4ResourceType@@$00@std@@QBEIABW4ResourceType@@@Z PROC ; std::_Conditionally_enabled_hash<enum ResourceType,1>::operator(), COMDAT
; _this$ = ecx

; 2197 :         noexcept(noexcept(hash<_Kty>::_Do_hash(_Keyval))) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2198 :         return hash<_Kty>::_Do_hash(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	call	?_Do_hash@?$hash@W4ResourceType@@@std@@SAIABW4ResourceType@@@Z ; std::hash<enum ResourceType>::_Do_hash
	add	esp, 4

; 2199 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Conditionally_enabled_hash@W4ResourceType@@$00@std@@QBEIABW4ResourceType@@@Z ENDP ; std::_Conditionally_enabled_hash<enum ResourceType,1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAEAAMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_max_bucket_size@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAEAAMXZ PROC ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 167  :     _NODISCARD float& _Get_max_bucket_size() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 168  :         return _Mypair._Myval2._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 169  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAEAAMXZ ENDP ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T1 = -233						; size = 1
$T2 = -221						; size = 1
$T3 = -212						; size = 4
_this$ = -8						; size = 4
??0?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAE@XZ PROC ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >, COMDAT
; _this$ = ecx

; 144  :         : _Mypair(_Zero_then_variadic_args_t{}, _Zero_then_variadic_args_t{}, 0.0f) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	xorps	xmm0, xmm0
	movss	DWORD PTR $T3[ebp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	call	??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@W4ResourceType@@@std@@V?$_Compressed_pair@U?$equal_to@W4ResourceType@@@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z ; std::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1>::_Compressed_pair<std::hash<enum ResourceType>,std::_Compressed_pair<std::equal_to<enum ResourceType>,float,1>,1><std::_Zero_then_variadic_args_t,float>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Uhash_compare@W4ResourceType@@U?$hash@W4ResourceType@@@std@@U?$equal_to@W4ResourceType@@@3@@std@@QAE@XZ ENDP ; std::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >::_Uhash_compare<enum ResourceType,std::hash<enum ResourceType>,std::equal_to<enum ResourceType> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??0?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
tv77 = -236						; size = 4
tv79 = -232						; size = 4
$T1 = -224						; size = 4
$T2 = -209						; size = 1
_this$ = -8						; size = 4
??0?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ PROC ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >, COMDAT
; _this$ = ecx

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,ResourceHandler> >::allocator<std::pair<unsigned int const ,ResourceHandler> >
	mov	DWORD PTR tv79[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAE@XZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$unordered_map@IVResourceHandler@@U?$hash@I@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@@std@@QAE@XZ ENDP ; std::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::unordered_map<unsigned int,ResourceHandler,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::~_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::~_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >, COMDAT
; _this$ = ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E9D2A317_vector
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -240						; size = 4
_$S9$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >, COMDAT
; _this$ = ecx

; 327  :     ~_Hash_vec() {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 328  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Tidy

; 329  : #if _ITERATOR_DEBUG_LEVEL != 0
; 330  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Aliter, _Mypair._Get_first());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
	push	eax
	lea	ecx, DWORD PTR _$S9$[ebp]
	call	??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	lea	eax, DWORD PTR _$S9$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 331  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 332  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 333  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Hash_vec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Hash_vec:
	DD	1
	DD	$LN4@Hash_vec
$LN4@Hash_vec:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@Hash_vec
$LN3@Hash_vec:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	57					; 00000039H
	DB	0
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv84 = -228						; size = 4
tv86 = -224						; size = 4
tv88 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Tidy, COMDAT
; _this$ = ecx

; 319  :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 320  :         _Destroy_range(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	add	esp, 8

; 321  :         _Mypair._Get_first().deallocate(_Mypair._Myval2._Myfirst, size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::size
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	push	edx
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	mov	ecx, DWORD PTR tv88[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::deallocate

; 322  :         _Mypair._Myval2._Myfirst = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 323  :         _Mypair._Myval2._Mylast  = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 324  :         _Mypair._Myval2._Myend   = pointer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 325  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Newend$1 = -56					; size = 4
__Newvec$2 = -44					; size = 4
__Alvec$ = -32						; size = 4
__Oldsize$ = -20					; size = 4
_this$ = -8						; size = 4
__Cells$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Assign_grow, COMDAT
; _this$ = ecx

; 296  :     void _Assign_grow(const size_type _Cells, const value_type _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 297  :         // set the elements stored here to _Cells copies of _Val, leaving the value unchanged if an exception is thrown
; 298  :         const auto _Oldsize = size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::size
	mov	DWORD PTR __Oldsize$[ebp], eax

; 299  :         _STL_INTERNAL_CHECK(_Oldsize <= _Cells);
; 300  :         auto& _Alvec = _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
	mov	DWORD PTR __Alvec$[ebp], eax

; 301  :         if (_Oldsize < _Cells) {

	mov	eax, DWORD PTR __Oldsize$[ebp]
	cmp	eax, DWORD PTR __Cells$[ebp]
	jae	SHORT $LN2@Assign_gro

; 302  :             const auto _Newvec = _Alvec.allocate(_Cells); // throws

	mov	eax, DWORD PTR __Cells$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alvec$[ebp]
	call	?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocate
	mov	DWORD PTR __Newvec$2[ebp], eax

; 303  :             // nothrow hereafter
; 304  :             if (_Oldsize != 0) {

	cmp	DWORD PTR __Oldsize$[ebp], 0
	je	SHORT $LN4@Assign_gro

; 305  :                 _Destroy_range(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Destroy_range@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@PAV12@@std@@YAXPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@QAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *>
	add	esp, 8

; 306  :                 _Alvec.deallocate(_Mypair._Myval2._Myfirst, _Oldsize);

	mov	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Alvec$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::deallocate
$LN4@Assign_gro:

; 307  :             }
; 308  : 
; 309  :             _Mypair._Myval2._Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$2[ebp]
	mov	DWORD PTR [eax+4], ecx

; 310  :             const auto _Newend       = _Newvec + _Cells;

	mov	eax, DWORD PTR __Cells$[ebp]
	mov	ecx, DWORD PTR __Newvec$2[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Newend$1[ebp], edx

; 311  :             _Mypair._Myval2._Mylast  = _Newend;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newend$1[ebp]
	mov	DWORD PTR [eax+8], ecx

; 312  :             _Mypair._Myval2._Myend   = _Newend;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newend$1[ebp]
	mov	DWORD PTR [eax+12], ecx

; 313  :             _STD uninitialized_fill(_Newvec, _Newend, _Val);

	lea	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newend$1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$2[ebp]
	push	edx
	call	??$uninitialized_fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::uninitialized_fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	add	esp, 12					; 0000000cH

; 314  :         } else {

	jmp	SHORT $LN1@Assign_gro
$LN2@Assign_gro:

; 315  :             _STD fill(_Mypair._Myval2._Myfirst, _Mypair._Myval2._Mylast, _Val);

	lea	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	add	esp, 12					; 0000000cH
$LN1@Assign_gro:

; 316  :         }
; 317  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Assign_grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size, COMDAT
; _this$ = ecx

; 291  :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 292  :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >,1>::_Get_first
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 293  :             _Aliter_traits::max_size(_Mypair._Get_first()));
; 294  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::size, COMDAT
; _this$ = ecx

; 287  :     _NODISCARD size_type size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 288  :         return static_cast<size_type>(_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 289  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size, COMDAT

; 709  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 1073741823				; 3fffffffH

; 711  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$03@std@@YAII@Z	; std::_Get_size_of_n<4>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@QAEXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEABMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEABMXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 1891 :     const float& _Max_bucket_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1892 :         return _Traitsobj._Get_max_bucket_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEABMXZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size

; 1893 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEABMXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEAAMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEAAMXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size, COMDAT
; _this$ = ecx

; 1887 :     float& _Max_bucket_size() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1888 :         return _Traitsobj._Get_max_bucket_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAEAAMXZ ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size

; 1889 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEAAMXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
tv266 = -356						; size = 4
tv202 = -356						; size = 4
tv86 = -356						; size = 4
__Insert_before$2 = -156				; size = 4
__Bucket_hi$3 = -144					; size = 4
__Bucket_lo$4 = -132					; size = 4
__Bucket$5 = -120					; size = 4
__Inserted_key$6 = -108					; size = 4
__Next_inserted$7 = -96					; size = 4
__Inserted$ = -84					; size = 4
__Guard$ = -72						; size = 4
__End$ = -60						; size = 4
__Max_storage_buckets$ = -48				; size = 4
__Max_storage_buckets_log2$ = -36			; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Buckets$ = 8						; size = 4
?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Forced_rehash, COMDAT
; _this$ = ecx

; 1795 :     void _Forced_rehash(size_type _Buckets) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1796 :         // Force rehash of elements in _List, distrusting existing bucket assignments in _Vec.
; 1797 :         // Assumes _Buckets is greater than _Min_buckets, and that changing to that many buckets doesn't violate
; 1798 :         // load_factor() <= max_load_factor().
; 1799 : 
; 1800 :         // Don't violate power of 2, fits in half the bucket vector invariant:
; 1801 :         // (we assume because vector must use single allocations; as a result, its max_size fits in a size_t)
; 1802 :         const unsigned long _Max_storage_buckets_log2 = _Floor_of_log_2(static_cast<size_t>(_Vec.max_size() >> 1));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::max_size
	shr	eax, 1
	push	eax
	call	?_Floor_of_log_2@std@@YAKI@Z		; std::_Floor_of_log_2
	add	esp, 4
	mov	DWORD PTR __Max_storage_buckets_log2$[ebp], eax

; 1803 :         const auto _Max_storage_buckets               = static_cast<size_type>(1) << _Max_storage_buckets_log2;

	mov	eax, 1
	mov	ecx, DWORD PTR __Max_storage_buckets_log2$[ebp]
	shl	eax, cl
	mov	DWORD PTR __Max_storage_buckets$[ebp], eax

; 1804 :         if (_Buckets > _Max_storage_buckets) {

	mov	eax, DWORD PTR __Buckets$[ebp]
	cmp	eax, DWORD PTR __Max_storage_buckets$[ebp]
	jbe	SHORT $LN8@Forced_reh

; 1805 :             _Xlength_error("invalid hash bucket count");

	push	OFFSET ??_C@_0BK@OGNNAFAB@invalid?5hash?5bucket?5count@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN8@Forced_reh:

; 1806 :         }
; 1807 : 
; 1808 :         // The above test also means that we won't perform a forbidden full shift when restoring the power of
; 1809 :         // 2 invariant
; 1810 :         // this round up to power of 2 in addition to the _Buckets > _Maxidx above means
; 1811 :         // we'll at least double in size (the next power of 2 above _Maxidx)
; 1812 :         _Buckets                       = static_cast<size_type>(1) << _Ceiling_of_log_2(static_cast<size_t>(_Buckets));

	mov	eax, DWORD PTR __Buckets$[ebp]
	push	eax
	call	?_Ceiling_of_log_2@std@@YAKI@Z		; std::_Ceiling_of_log_2
	add	esp, 4
	mov	edx, 1
	mov	ecx, eax
	shl	edx, cl
	mov	DWORD PTR __Buckets$[ebp], edx

; 1813 :         const _Unchecked_iterator _End = _Unchecked_end();

	push	4
	lea	ecx, DWORD PTR __End$[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	lea	eax, DWORD PTR __End$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_end

; 1814 : 
; 1815 :         _Vec._Assign_grow(_Buckets << 1, _End);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR __End$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Buckets$[ebp]
	shl	edx, 1
	push	edx
	mov	ecx, DWORD PTR tv86[ebp]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Assign_grow

; 1816 :         _Mask   = _Buckets - 1;

	mov	eax, DWORD PTR __Buckets$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 1817 :         _Maxidx = _Buckets;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [eax+36], ecx

; 1818 : 
; 1819 :         _Clear_guard _Guard{this};

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Guard$[ebp]
	call	??0_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@QAV12@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::_Clear_guard
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1820 : 
; 1821 :         _Unchecked_iterator _Inserted = _Unchecked_begin();

	push	4
	lea	ecx, DWORD PTR __Inserted$[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	lea	eax, DWORD PTR __Inserted$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_begin

; 1822 : 
; 1823 :         // Remember the next _Inserted value as splices will change _Inserted's position arbitrarily.
; 1824 :         for (_Unchecked_iterator _Next_inserted = _Inserted; _Inserted != _End; _Inserted = _Next_inserted) {

	push	4
	lea	ecx, DWORD PTR __Next_inserted$7[ebp]
	call	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Inserted$[ebp]
	mov	DWORD PTR __Next_inserted$7[ebp], eax
	jmp	SHORT $LN4@Forced_reh
$LN2@Forced_reh:
	mov	eax, DWORD PTR __Next_inserted$7[ebp]
	mov	DWORD PTR __Inserted$[ebp], eax
$LN4@Forced_reh:
	lea	eax, DWORD PTR __End$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Inserted$[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@Forced_reh

; 1825 :             ++_Next_inserted;

	lea	ecx, DWORD PTR __Next_inserted$7[ebp]
	call	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator++

; 1826 : 
; 1827 :             auto& _Inserted_key     = _Traits::_Kfn(*_Inserted);

	lea	ecx, DWORD PTR __Inserted$[ebp]
	call	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >::operator*
	push	eax
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	mov	DWORD PTR __Inserted_key$6[ebp], eax

; 1828 :             const size_type _Bucket = bucket(_Inserted_key);

	mov	eax, DWORD PTR __Inserted_key$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket
	mov	DWORD PTR __Bucket$5[ebp], eax

; 1829 : 
; 1830 :             // _Bucket_lo and _Bucket_hi are the *inclusive* range of elements in the bucket, or _Unchecked_end() if
; 1831 :             // the bucket is empty; if !_Standard then [_Bucket_lo, _Bucket_hi] is a sorted range.
; 1832 :             _Unchecked_iterator& _Bucket_lo = _Vec._Mypair._Myval2._Myfirst[_Bucket << 1];

	mov	eax, DWORD PTR __Bucket$5[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR __Bucket_lo$4[ebp], eax

; 1833 :             _Unchecked_iterator& _Bucket_hi = _Vec._Mypair._Myval2._Myfirst[(_Bucket << 1) + 1];

	mov	eax, DWORD PTR __Bucket$5[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [edx+eax*4+4]
	mov	DWORD PTR __Bucket_hi$3[ebp], eax

; 1834 : 
; 1835 :             if (_Bucket_lo == _End) {

	lea	eax, DWORD PTR __End$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Bucket_lo$4[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@Forced_reh

; 1836 :                 // The bucket was empty, set it to the inserted element.
; 1837 :                 _Bucket_lo = _Inserted;

	mov	eax, DWORD PTR __Bucket_lo$4[ebp]
	mov	ecx, DWORD PTR __Inserted$[ebp]
	mov	DWORD PTR [eax], ecx

; 1838 :                 _Bucket_hi = _Inserted;

	mov	eax, DWORD PTR __Bucket_hi$3[ebp]
	mov	ecx, DWORD PTR __Inserted$[ebp]
	mov	DWORD PTR [eax], ecx

; 1839 :                 continue;

	jmp	$LN2@Forced_reh
$LN9@Forced_reh:

; 1840 :             }
; 1841 : 
; 1842 :             // Search the bucket for the insertion location and move element if necessary.
; 1843 :             _Unchecked_const_iterator _Insert_before = _Bucket_hi;

	push	4
	lea	ecx, DWORD PTR __Insert_before$2[ebp]
	call	?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR __Bucket_hi$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Insert_before$2[ebp], ecx

; 1844 :             if (!_Traitsobj(_Inserted_key, _Traits::_Kfn(*_Insert_before))) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv202[ebp], eax
	lea	ecx, DWORD PTR __Insert_before$2[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator*
	push	eax
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Inserted_key$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv202[ebp]
	call	??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@Forced_reh

; 1845 :                 // The inserted element belongs at the end of the bucket; splice it there and set _Bucket_hi to the
; 1846 :                 // new bucket inclusive end.
; 1847 :                 ++_Insert_before;

	lea	ecx, DWORD PTR __Insert_before$2[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator++

; 1848 :                 if (_Insert_before != _Inserted) { // avoid splice on element already in position

	lea	eax, DWORD PTR __Inserted$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Insert_before$2[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@Forced_reh

; 1849 :                     _Mylist::_Scary_val::_Unchecked_splice(_Insert_before._Ptr, _Inserted._Ptr, _Next_inserted._Ptr);

	mov	eax, DWORD PTR __Next_inserted$7[ebp]
	push	eax
	mov	ecx, DWORD PTR __Inserted$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_before$2[ebp]
	push	edx
	call	?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_splice
	add	esp, 12					; 0000000cH
$LN11@Forced_reh:

; 1850 :                 }
; 1851 : 
; 1852 :                 _Bucket_hi = _Inserted;

	mov	eax, DWORD PTR __Bucket_hi$3[ebp]
	mov	ecx, DWORD PTR __Inserted$[ebp]
	mov	DWORD PTR [eax], ecx

; 1853 :                 continue;

	jmp	$LN2@Forced_reh
$LN7@Forced_reh:

; 1854 :             }
; 1855 : 
; 1856 :             // The insertion point isn't *_Bucket_hi, so search [_Bucket_lo, _Bucket_hi) for insertion point; we
; 1857 :             // go backwards to maintain sortedness when !_Standard.
; 1858 :             for (;;) {
; 1859 :                 if (_Bucket_lo == _Insert_before) {

	lea	eax, DWORD PTR __Insert_before$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Bucket_lo$4[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Forced_reh

; 1860 :                     // There are no equivalent keys in the bucket, so insert it at the beginning.
; 1861 :                     // Element can't be already in position here because:
; 1862 :                     // * (for !_Standard) _Inserted_key < *_Insert_before or
; 1863 :                     // * (for _Standard) _Inserted_key != *_Insert_before
; 1864 :                     _Mylist::_Scary_val::_Unchecked_splice(_Insert_before._Ptr, _Inserted._Ptr, _Next_inserted._Ptr);

	mov	eax, DWORD PTR __Next_inserted$7[ebp]
	push	eax
	mov	ecx, DWORD PTR __Inserted$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_before$2[ebp]
	push	edx
	call	?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_splice
	add	esp, 12					; 0000000cH

; 1865 :                     _Bucket_lo = _Inserted;

	mov	eax, DWORD PTR __Bucket_lo$4[ebp]
	mov	ecx, DWORD PTR __Inserted$[ebp]
	mov	DWORD PTR [eax], ecx

; 1866 :                     break;

	jmp	SHORT $LN6@Forced_reh
$LN12@Forced_reh:

; 1867 :                 }
; 1868 : 
; 1869 :                 if (!_Traitsobj(_Inserted_key, _Traits::_Kfn(*--_Insert_before))) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv266[ebp], eax
	lea	ecx, DWORD PTR __Insert_before$2[ebp]
	call	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator--
	mov	ecx, eax
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABU?$pair@$$CBIVResourceHandler@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator*
	push	eax
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Inserted_key$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv266[ebp]
	call	??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBE_NABI0@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN13@Forced_reh

; 1870 :                     // Found insertion point, move the element here, bucket bounds are already okay.
; 1871 :                     ++_Insert_before;

	lea	ecx, DWORD PTR __Insert_before$2[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,std::_Iterator_base0>::operator++

; 1872 :                     // Element can't be already in position here because all elements we're inserting are after all
; 1873 :                     // the elements already in buckets, and *_Insert_before isn't the highest element in the bucket.
; 1874 :                     _Mylist::_Scary_val::_Unchecked_splice(_Insert_before._Ptr, _Inserted._Ptr, _Next_inserted._Ptr);

	mov	eax, DWORD PTR __Next_inserted$7[ebp]
	push	eax
	mov	ecx, DWORD PTR __Inserted$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Insert_before$2[ebp]
	push	edx
	call	?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_splice
	add	esp, 12					; 0000000cH

; 1875 :                     break;

	jmp	SHORT $LN6@Forced_reh
$LN13@Forced_reh:

; 1876 :                 }
; 1877 :             }

	jmp	$LN7@Forced_reh
$LN6@Forced_reh:

; 1878 :         }

	jmp	$LN2@Forced_reh
$LN3@Forced_reh:

; 1879 : 
; 1880 :         _Guard._Target = nullptr;

	mov	DWORD PTR __Guard$[ebp], 0

; 1881 : 
; 1882 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1883 :         _Stl_internal_check_container_invariants();
; 1884 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1885 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Guard$[ebp]
	call	??1_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::~_Clear_guard
$LN14@Forced_reh:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Forced_reh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN23@Forced_reh:
	DD	5
	DD	$LN22@Forced_reh
$LN22@Forced_reh:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN16@Forced_reh
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN17@Forced_reh
	DD	-84					; ffffffacH
	DD	4
	DD	$LN18@Forced_reh
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN19@Forced_reh
	DD	-156					; ffffff64H
	DD	4
	DD	$LN20@Forced_reh
$LN20@Forced_reh:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
$LN19@Forced_reh:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN18@Forced_reh:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN17@Forced_reh:
	DB	95					; 0000005fH
	DB	71					; 00000047H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN16@Forced_reh:
	DB	95					; 0000005fH
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR __Guard$[ebp]
	jmp	??1_Clear_guard@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Clear_guard::~_Clear_guard
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Forced_rehash
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
__Req_buckets$ = -32					; size = 4
__Old_buckets$ = -20					; size = 4
_this$ = -8						; size = 4
__For_size$ = 8						; size = 4
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Desired_grow_bucket_count, COMDAT
; _this$ = ecx

; 1774 :     _NODISCARD size_type _Desired_grow_bucket_count(const size_type _For_size) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1775 :         const size_type _Old_buckets = bucket_count();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket_count
	mov	DWORD PTR __Old_buckets$[ebp], eax

; 1776 :         const size_type _Req_buckets = (_STD max)(_Min_buckets, _Min_load_factor_buckets(_For_size));

	mov	eax, DWORD PTR __For_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Min_load_factor_buckets
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	push	OFFSET ?_Min_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@2IB
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Req_buckets$[ebp], edx

; 1777 :         if (_Old_buckets >= _Req_buckets) {

	mov	eax, DWORD PTR __Old_buckets$[ebp]
	cmp	eax, DWORD PTR __Req_buckets$[ebp]
	jb	SHORT $LN2@Desired_gr

; 1778 :             // we already have enough buckets so there's no need to change the count
; 1779 :             return _Old_buckets;

	mov	eax, DWORD PTR __Old_buckets$[ebp]
	jmp	SHORT $LN4@Desired_gr
$LN2@Desired_gr:

; 1780 :         }
; 1781 : 
; 1782 :         if (_Old_buckets < 512 && _Old_buckets * 8 >= _Req_buckets) {

	cmp	DWORD PTR __Old_buckets$[ebp], 512	; 00000200H
	jae	SHORT $LN3@Desired_gr
	mov	eax, DWORD PTR __Old_buckets$[ebp]
	shl	eax, 3
	cmp	eax, DWORD PTR __Req_buckets$[ebp]
	jb	SHORT $LN3@Desired_gr

; 1783 :             // if we are changing the bucket count and have less than 512 buckets, use 8x more buckets
; 1784 :             return _Old_buckets * 8;

	mov	eax, DWORD PTR __Old_buckets$[ebp]
	shl	eax, 3
	jmp	SHORT $LN4@Desired_gr
$LN3@Desired_gr:

; 1785 :         }
; 1786 : 
; 1787 :         // power of 2 invariant means this will result in at least 2*_Old_buckets after round up in _Forced_rehash
; 1788 :         return _Req_buckets;

	mov	eax, DWORD PTR __Req_buckets$[ebp]
$LN4@Desired_gr:

; 1789 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Desired_grow_bucket_count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv90 = -228						; size = 4
tv85 = -224						; size = 4
tv129 = -220						; size = 4
tv78 = -216						; size = 8
tv74 = -208						; size = 4
_this$ = -8						; size = 4
__For_size$ = 8						; size = 4
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Min_load_factor_buckets, COMDAT
; _this$ = ecx

; 1769 :     _NODISCARD size_type _Min_load_factor_buckets(const size_type _For_size) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1770 :         // returns the minimum number of buckets necessary for the elements in _List
; 1771 :         return static_cast<size_type>(_CSTD ceilf(static_cast<float>(_For_size) / max_load_factor()));

	mov	eax, DWORD PTR __For_size$[ebp]
	mov	DWORD PTR tv74[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv74[ebp]
	mov	ecx, DWORD PTR tv74[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv78[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv78[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv129[ebp], xmm0
	call	?max_load_factor@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::max_load_factor
	fstp	DWORD PTR tv85[ebp]
	movss	xmm0, DWORD PTR tv129[ebp]
	divss	xmm0, DWORD PTR tv85[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	fstp	DWORD PTR tv90[ebp]
	movss	xmm0, DWORD PTR tv90[ebp]
	call	__ftoui3

; 1772 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Min_load_factor_buckets
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Rehash_for_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Newsize$ = -32					; size = 4
__Oldsize$ = -20					; size = 4
_this$ = -8						; size = 4
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Rehash_for_1, COMDAT
; _this$ = ecx

; 1745 :     void _Rehash_for_1() {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1746 :         const auto _Oldsize = _List._Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR __Oldsize$[ebp], ecx

; 1747 :         const auto _Newsize = _Oldsize + 1;

	mov	eax, DWORD PTR __Oldsize$[ebp]
	add	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax

; 1748 :         _Forced_rehash(_Desired_grow_bucket_count(_Newsize));

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEII@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Desired_grow_bucket_count
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Forced_rehash@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Forced_rehash

; 1749 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Rehash_for_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE_NXZ
_TEXT	SEGMENT
tv77 = -268						; size = 4
tv133 = -264						; size = 8
tv130 = -256						; size = 4
tv142 = -252						; size = 4
tv140 = -248						; size = 4
tv92 = -244						; size = 8
tv88 = -236						; size = 4
tv86 = -232						; size = 4
__Newsize$ = -32					; size = 4
__Oldsize$ = -20					; size = 4
_this$ = -8						; size = 4
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE_NXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_rehash_required_1, COMDAT
; _this$ = ecx

; 1739 :     bool _Check_rehash_required_1() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1740 :         const size_type _Oldsize = _List._Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR __Oldsize$[ebp], ecx

; 1741 :         const auto _Newsize      = _Oldsize + 1;

	mov	eax, DWORD PTR __Oldsize$[ebp]
	add	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax

; 1742 :         return max_load_factor() < static_cast<float>(_Newsize) / static_cast<float>(bucket_count());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_load_factor@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::max_load_factor
	fstp	DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	cvtsi2sd xmm1, DWORD PTR tv88[ebp]
	mov	ecx, DWORD PTR tv88[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv92[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv92[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv140[ebp], xmm0
	movss	DWORD PTR tv142[ebp], xmm1
	call	?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket_count
	mov	DWORD PTR tv130[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv130[ebp]
	mov	edx, DWORD PTR tv130[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv133[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv133[ebp]
	movss	xmm1, DWORD PTR tv142[ebp]
	divss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv140[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN3@Check_reha
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@Check_reha
$LN3@Check_reha:
	mov	DWORD PTR tv77[ebp], 0
$LN4@Check_reha:
	mov	al, BYTE PTR tv77[ebp]

; 1743 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBE_NXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_rehash_required_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Check_max_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
__Oldsize$ = -20					; size = 4
_this$ = -8						; size = 4
?_Check_max_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEXXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_max_size, COMDAT
; _this$ = ecx

; 1732 :     void _Check_max_size() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1733 :         const size_type _Oldsize = _List._Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR __Oldsize$[ebp], ecx

; 1734 :         if (_Oldsize == _List.max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?max_size@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::max_size
	cmp	DWORD PTR __Oldsize$[ebp], eax
	jne	SHORT $LN3@Check_max_

; 1735 :             _Xlength_error("unordered_map/set too long");

	push	OFFSET ??_C@_0BL@GOIGLPKN@unordered_map?1set?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN3@Check_max_:

; 1736 :         }
; 1737 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_max_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEXXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Check_max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@IQAU32@0@Z
_TEXT	SEGMENT
__Bucket_hi$ = -84					; size = 4
__Bucket_lo$ = -72					; size = 4
__Bucket$ = -60						; size = 4
__Bucket_array$ = -48					; size = 4
__Head$ = -36						; size = 4
__Insert_after$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Hashval$ = 8						; size = 4
__Insert_before$ = 12					; size = 4
__Newnode$ = 16						; size = 4
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@IQAU32@0@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Insert_new_node_before, COMDAT
; _this$ = ecx

; 1701 :         const size_t _Hashval, const _Nodeptr _Insert_before, const _Nodeptr _Newnode) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1702 :         const _Nodeptr _Insert_after = _Insert_before->_Prev;

	mov	eax, DWORD PTR __Insert_before$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Insert_after$[ebp], ecx

; 1703 :         ++_List._Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 1704 :         _Construct_in_place(_Newnode->_Next, _Insert_before);

	lea	eax, DWORD PTR __Insert_before$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
	add	esp, 8

; 1705 :         _Construct_in_place(_Newnode->_Prev, _Insert_after);

	lea	eax, DWORD PTR __Insert_after$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * const &>
	add	esp, 8

; 1706 :         _Insert_after->_Next  = _Newnode;

	mov	eax, DWORD PTR __Insert_after$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1707 :         _Insert_before->_Prev = _Newnode;

	mov	eax, DWORD PTR __Insert_before$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1708 : 
; 1709 :         const auto _Head                = _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Head$[ebp], ecx

; 1710 :         const auto _Bucket_array        = _Vec._Mypair._Myval2._Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Bucket_array$[ebp], ecx

; 1711 :         const size_type _Bucket         = _Hashval & _Mask;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Hashval$[ebp]
	and	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR __Bucket$[ebp], ecx

; 1712 :         _Unchecked_iterator& _Bucket_lo = _Bucket_array[_Bucket << 1];

	mov	eax, DWORD PTR __Bucket$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_array$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Bucket_lo$[ebp], edx

; 1713 :         _Unchecked_iterator& _Bucket_hi = _Bucket_array[(_Bucket << 1) + 1];

	mov	eax, DWORD PTR __Bucket$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_array$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR __Bucket_hi$[ebp], edx

; 1714 :         if (_Bucket_lo._Ptr == _Head) {

	mov	eax, DWORD PTR __Bucket_lo$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Head$[ebp]
	jne	SHORT $LN2@Insert_new

; 1715 :             // bucket is empty, set both
; 1716 :             _Bucket_lo._Ptr = _Newnode;

	mov	eax, DWORD PTR __Bucket_lo$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1717 :             _Bucket_hi._Ptr = _Newnode;

	mov	eax, DWORD PTR __Bucket_hi$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Insert_new
$LN2@Insert_new:

; 1718 :         } else if (_Bucket_lo._Ptr == _Insert_before) {

	mov	eax, DWORD PTR __Bucket_lo$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Insert_before$[ebp]
	jne	SHORT $LN4@Insert_new

; 1719 :             // new node is the lowest element in the bucket
; 1720 :             _Bucket_lo._Ptr = _Newnode;

	mov	eax, DWORD PTR __Bucket_lo$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Insert_new
$LN4@Insert_new:

; 1721 :         } else if (_Bucket_hi._Ptr == _Insert_after) {

	mov	eax, DWORD PTR __Bucket_hi$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Insert_after$[ebp]
	jne	SHORT $LN3@Insert_new

; 1722 :             // new node is the highest element in the bucket
; 1723 :             _Bucket_hi._Ptr = _Newnode;

	mov	eax, DWORD PTR __Bucket_hi$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Insert_new:

; 1724 :         }
; 1725 : 
; 1726 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1727 :         _Stl_internal_check_container_invariants();
; 1728 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1729 :         return _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]

; 1730 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Insert_new
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN10@Insert_new:
	DD	1
	DD	$LN9@Insert_new
$LN9@Insert_new:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Insert_new
$LN8@Insert_new:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@IQAU32@0@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Insert_new_node_before
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
tv130 = -264						; size = 4
tv134 = -260						; size = 4
tv132 = -256						; size = 4
$T2 = -248						; size = 4
__Head$3 = -44						; size = 4
__Oldsize$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::clear, COMDAT
; _this$ = ecx

; 1251 :     void clear() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1252 :         // TRANSITION, ABI:
; 1253 :         // LWG-2550 requires implementations to make clear() O(size()), independent of bucket_count().
; 1254 :         // Unfortunately our current data structure / ABI does not allow achieving this in the general case because:
; 1255 :         //   (1) Finding the bucket that goes with an element requires running the hash function
; 1256 :         //   (2) The hash function operator() may throw exceptions, and
; 1257 :         //   (3) clear() is a noexcept function.
; 1258 :         // We do comply with LWG-2550 if the hash function is noexcept, or if the container was empty.
; 1259 :         const auto _Oldsize = _List._Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR __Oldsize$[ebp], ecx

; 1260 :         if (_Oldsize == 0) {

	cmp	DWORD PTR __Oldsize$[ebp], 0
	jne	SHORT $LN2@clear

; 1261 :             return;

	jmp	$LN4@clear
$LN2@clear:

; 1262 :         }
; 1263 : 
; 1264 :         if _CONSTEXPR_IF (_Nothrow_hash<_Traits, key_type>) {
; 1265 :             // In testing, hash<size_t>{}(size_t{}) takes about 14 times as much time as assigning a pointer, or
; 1266 :             // ~7-8 times as much as clearing a bucket. Therefore, if we would need to assign over more than 8 times
; 1267 :             // as many buckets as elements, remove element-by-element.
; 1268 :             if (bucket_count() / 8 > _Oldsize) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket_count
	shr	eax, 3
	cmp	eax, DWORD PTR __Oldsize$[ebp]
	jbe	SHORT $LN3@clear

; 1269 :                 const auto _Head = _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Head$3[ebp], ecx

; 1270 :                 _Unchecked_erase(_Head->_Next, _Head);

	mov	eax, DWORD PTR __Head$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Head$3[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_erase@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_erase

; 1271 :                 return;

	jmp	SHORT $LN4@clear
$LN3@clear:

; 1272 :             }
; 1273 :         }
; 1274 : 
; 1275 :         // Bulk destroy items and reset buckets
; 1276 :         _List.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?clear@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::clear

; 1277 :         _STD fill(_Vec._Mypair._Myval2._Myfirst, _Vec._Mypair._Myval2._Mylast, _Unchecked_end());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_end
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv134[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv130[ebp], ecx
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@V12@@std@@YAXQAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > >
	add	esp, 12					; 0000000cH
$LN4@clear:

; 1278 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clear@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::clear
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Unchecked_erase@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z
_TEXT	SEGMENT
tv172 = -433						; size = 1
tv138 = -433						; size = 1
tv136 = -433						; size = 1
$T1 = -428						; size = 4
$T2 = -416						; size = 4
$T3 = -404						; size = 4
__At_bucket_back$4 = -197				; size = 1
__Old_hi$5 = -188					; size = 4
__Bucket_hi$6 = -176					; size = 4
__Bucket_lo$7 = -164					; size = 4
__Bucket$8 = -152					; size = 4
__At_bucket_back$9 = -137				; size = 1
__Old_hi$10 = -128					; size = 4
__Update_lo$11 = -113					; size = 1
__Bucket_hi$12 = -104					; size = 4
__Bucket_lo$13 = -92					; size = 4
__Bucket$14 = -80					; size = 4
__Predecessor$15 = -68					; size = 4
__Eraser$ = -56						; size = 12
__Bucket_bounds$ = -36					; size = 4
__End$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_erase, COMDAT
; _this$ = ecx

; 1144 :     _Nodeptr _Unchecked_erase(_Nodeptr _First, const _Nodeptr _Last) noexcept(_Nothrow_hash<_Traits, key_type>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1145 :         if (_First == _Last) {

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN10@Unchecked_

; 1146 :             return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	jmp	$LN18@Unchecked_
$LN10@Unchecked_:

; 1147 :         }
; 1148 : 
; 1149 :         const auto _End           = _List._Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __End$[ebp], ecx

; 1150 :         const auto _Bucket_bounds = _Vec._Mypair._Myval2._Myfirst;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Bucket_bounds$[ebp], ecx

; 1151 :         _Range_eraser _Eraser{_List, _First};

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	push	eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??0_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@AAV?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Range_eraser

; 1152 :         {
; 1153 :             // process the first bucket, which is special because here _First might not be the beginning of the bucket
; 1154 :             const auto _Predecessor = _First->_Prev;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Predecessor$15[ebp], ecx

; 1155 :             const size_type _Bucket = bucket(_Traits::_Kfn(_Eraser._Next->_Myval)); // throws

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	add	eax, 8
	push	eax
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket
	mov	DWORD PTR __Bucket$14[ebp], eax

; 1156 :             // nothrow hereafter this block
; 1157 :             _Nodeptr& _Bucket_lo   = _Bucket_bounds[_Bucket << 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$14[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Bucket_lo$13[ebp], edx

; 1158 :             _Nodeptr& _Bucket_hi   = _Bucket_bounds[(_Bucket << 1) + 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$14[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR __Bucket_hi$12[ebp], edx

; 1159 :             const bool _Update_lo  = _Bucket_lo == _Eraser._Next;

	mov	eax, DWORD PTR __Bucket_lo$13[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Eraser$[ebp+8]
	jne	SHORT $LN19@Unchecked_
	mov	BYTE PTR tv136[ebp], 1
	jmp	SHORT $LN20@Unchecked_
$LN19@Unchecked_:
	mov	BYTE PTR tv136[ebp], 0
$LN20@Unchecked_:
	mov	dl, BYTE PTR tv136[ebp]
	mov	BYTE PTR __Update_lo$11[ebp], dl

; 1160 :             const _Nodeptr _Old_hi = _Bucket_hi;

	mov	eax, DWORD PTR __Bucket_hi$12[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_hi$10[ebp], ecx
$LN4@Unchecked_:

; 1161 :             for (;;) { // remove elements until we hit the end of the bucket
; 1162 :                 const bool _At_bucket_back = _Eraser._Next == _Old_hi;

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Old_hi$10[ebp]
	jne	SHORT $LN21@Unchecked_
	mov	BYTE PTR tv138[ebp], 1
	jmp	SHORT $LN22@Unchecked_
$LN21@Unchecked_:
	mov	BYTE PTR tv138[ebp], 0
$LN22@Unchecked_:
	mov	cl, BYTE PTR tv138[ebp]
	mov	BYTE PTR __At_bucket_back$9[ebp], cl

; 1163 :                 _Eraser._Bump_erased();

	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Bump_erased

; 1164 :                 if (_At_bucket_back) {

	movzx	eax, BYTE PTR __At_bucket_back$9[ebp]
	test	eax, eax
	je	SHORT $LN11@Unchecked_

; 1165 :                     break;

	jmp	SHORT $LN3@Unchecked_
$LN11@Unchecked_:

; 1166 :                 }
; 1167 : 
; 1168 :                 if (_Eraser._Next == _Last) {

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN12@Unchecked_

; 1169 :                     if (_Update_lo) {

	movzx	eax, BYTE PTR __Update_lo$11[ebp]
	test	eax, eax
	je	SHORT $LN13@Unchecked_

; 1170 :                         // erased the bucket's prefix
; 1171 :                         _Bucket_lo = _Eraser._Next;

	mov	eax, DWORD PTR __Bucket_lo$13[ebp]
	mov	ecx, DWORD PTR __Eraser$[ebp+8]
	mov	DWORD PTR [eax], ecx
$LN13@Unchecked_:

; 1172 :                     }
; 1173 : 
; 1174 :                     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::~_Range_eraser
	mov	eax, DWORD PTR $T3[ebp]
	jmp	$LN18@Unchecked_
$LN12@Unchecked_:

; 1175 :                 }
; 1176 :             }

	jmp	SHORT $LN4@Unchecked_
$LN3@Unchecked_:

; 1177 : 
; 1178 :             if (_Update_lo) {

	movzx	eax, BYTE PTR __Update_lo$11[ebp]
	test	eax, eax
	je	SHORT $LN14@Unchecked_

; 1179 :                 // emptied the bucket
; 1180 :                 _Bucket_lo = _End;

	mov	eax, DWORD PTR __Bucket_lo$13[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1181 :                 _Bucket_hi = _End;

	mov	eax, DWORD PTR __Bucket_hi$12[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1182 :             } else {

	jmp	SHORT $LN5@Unchecked_
$LN14@Unchecked_:

; 1183 :                 _Bucket_hi = _Predecessor;

	mov	eax, DWORD PTR __Bucket_hi$12[ebp]
	mov	ecx, DWORD PTR __Predecessor$15[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Unchecked_:

; 1184 :             }
; 1185 :         }
; 1186 : 
; 1187 :         // hereafter we are always erasing buckets' prefixes
; 1188 :         while (_Eraser._Next != _Last) {

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN6@Unchecked_

; 1189 :             const size_type _Bucket = bucket(_Traits::_Kfn(_Eraser._Next->_Myval)); // throws

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	add	eax, 8
	push	eax
	call	??$_Kfn@$$CBIVResourceHandler@@@?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIVResourceHandler@@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Kfn<unsigned int const ,ResourceHandler>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket
	mov	DWORD PTR __Bucket$8[ebp], eax

; 1190 :             // nothrow hereafter this block
; 1191 :             _Nodeptr& _Bucket_lo   = _Bucket_bounds[_Bucket << 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$8[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Bucket_lo$7[ebp], edx

; 1192 :             _Nodeptr& _Bucket_hi   = _Bucket_bounds[(_Bucket << 1) + 1]._Ptr;

	mov	eax, DWORD PTR __Bucket$8[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR __Bucket_bounds$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR __Bucket_hi$6[ebp], edx

; 1193 :             const _Nodeptr _Old_hi = _Bucket_hi;

	mov	eax, DWORD PTR __Bucket_hi$6[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_hi$5[ebp], ecx
$LN9@Unchecked_:

; 1194 :             for (;;) { // remove elements until we hit the end of the bucket
; 1195 :                 const bool _At_bucket_back = _Eraser._Next == _Old_hi;

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Old_hi$5[ebp]
	jne	SHORT $LN23@Unchecked_
	mov	BYTE PTR tv172[ebp], 1
	jmp	SHORT $LN24@Unchecked_
$LN23@Unchecked_:
	mov	BYTE PTR tv172[ebp], 0
$LN24@Unchecked_:
	mov	cl, BYTE PTR tv172[ebp]
	mov	BYTE PTR __At_bucket_back$4[ebp], cl

; 1196 :                 _Eraser._Bump_erased();

	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::_Bump_erased

; 1197 :                 if (_At_bucket_back) {

	movzx	eax, BYTE PTR __At_bucket_back$4[ebp]
	test	eax, eax
	je	SHORT $LN16@Unchecked_

; 1198 :                     break;

	jmp	SHORT $LN8@Unchecked_
$LN16@Unchecked_:

; 1199 :                 }
; 1200 : 
; 1201 :                 if (_Eraser._Next == _Last) {

	mov	eax, DWORD PTR __Eraser$[ebp+8]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN17@Unchecked_

; 1202 :                     // erased the bucket's prefix
; 1203 :                     _Bucket_lo = _Eraser._Next;

	mov	eax, DWORD PTR __Bucket_lo$7[ebp]
	mov	ecx, DWORD PTR __Eraser$[ebp+8]
	mov	DWORD PTR [eax], ecx

; 1204 :                     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::~_Range_eraser
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN18@Unchecked_
$LN17@Unchecked_:

; 1205 :                 }
; 1206 :             }

	jmp	SHORT $LN9@Unchecked_
$LN8@Unchecked_:

; 1207 : 
; 1208 :             // emptied the bucket
; 1209 :             _Bucket_lo = _End;

	mov	eax, DWORD PTR __Bucket_lo$7[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1210 :             _Bucket_hi = _End;

	mov	eax, DWORD PTR __Bucket_hi$6[ebp]
	mov	ecx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [eax], ecx

; 1211 :         }

	jmp	$LN5@Unchecked_
$LN6@Unchecked_:

; 1212 : 
; 1213 :         return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Eraser$[ebp]
	call	??1_Range_eraser@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Range_eraser::~_Range_eraser
	mov	eax, DWORD PTR $T1[ebp]
$LN18@Unchecked_:

; 1214 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@Unchecked_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN27@Unchecked_:
	DD	1
	DD	$LN26@Unchecked_
$LN26@Unchecked_:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN25@Unchecked_
$LN25@Unchecked_:
	DB	95					; 0000005fH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_load_factor@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEMXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 1040 :     _NODISCARD float max_load_factor() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 1041 :         return _Max_bucket_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IBEABMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size
	fld	DWORD PTR [eax]

; 1042 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEMXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::max_load_factor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z
_TEXT	SEGMENT
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket, COMDAT
; _this$ = ecx

; 984  :         noexcept(_Nothrow_hash<_Traits, key_type>) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 985  :         return _Traitsobj(_Keyval) & _Mask;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv73[ebp]
	call	??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEIABI@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx+32]

; 986  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?bucket@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIABI@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 975  :     _NODISCARD size_type bucket_count() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 976  :         return _Maxidx;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]

; 977  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::bucket_count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 940  :     _Unchecked_iterator _Unchecked_end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 941  :         return _List._Unchecked_end();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?_Unchecked_end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 942  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Unchecked_begin@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 932  :     _Unchecked_iterator _Unchecked_begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 933  :         return _List._Unchecked_begin();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?_Unchecked_begin@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 934  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end, COMDAT
; _this$ = ecx

; 924  :     _NODISCARD iterator end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 925  :         return _List.end();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 926  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
tv128 = -236						; size = 4
tv132 = -232						; size = 4
tv82 = -232						; size = 4
tv74 = -232						; size = 4
tv69 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >, COMDAT
; _this$ = ecx

; 391  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	??0?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv74[ebp]
	call	??0?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv82[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > ><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 7
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 8

; 392  :         // construct empty hash table
; 393  :         _Max_bucket_size() = _Bucket_size;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAEAAMXZ ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Max_bucket_size
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax], xmm0

; 394  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv128[ebp], ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR tv128[ebp]
	call	?_Unchecked_end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_end
	mov	eax, DWORD PTR [eax]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR tv132[ebp]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAEXIV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::_Assign_grow

; 395  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 396  :         _Stl_internal_check_container_invariants();
; 397  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 398  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > > > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@@std@@IAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >::_Hash<std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z
_TEXT	SEGMENT
__Before_prev$ = -32					; size = 4
__Last_prev$ = -20					; size = 4
__First_prev$ = -8					; size = 4
__Before$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z PROC ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_splice, COMDAT

; 469  :     static _Nodeptr _Unchecked_splice(const _Nodeptr _Before, const _Nodeptr _First, const _Nodeptr _Last) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 470  :         // splice [_First, _Last) before _Before; returns _Last
; 471  :         _STL_INTERNAL_CHECK(_Before != _First && _Before != _Last && _First != _Last);
; 472  :         // 3 reads and 6 writes
; 473  : 
; 474  :         // fixup the _Next values
; 475  :         const auto _First_prev  = _First->_Prev;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __First_prev$[ebp], ecx

; 476  :         _First_prev->_Next      = _Last;

	mov	eax, DWORD PTR __First_prev$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx

; 477  :         const auto _Last_prev   = _Last->_Prev;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Last_prev$[ebp], ecx

; 478  :         _Last_prev->_Next       = _Before;

	mov	eax, DWORD PTR __Last_prev$[ebp]
	mov	ecx, DWORD PTR __Before$[ebp]
	mov	DWORD PTR [eax], ecx

; 479  :         const auto _Before_prev = _Before->_Prev;

	mov	eax, DWORD PTR __Before$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Before_prev$[ebp], ecx

; 480  :         _Before_prev->_Next     = _First;

	mov	eax, DWORD PTR __Before_prev$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx

; 481  : 
; 482  :         // fixup the _Prev values
; 483  :         _Before->_Prev = _Last_prev;

	mov	eax, DWORD PTR __Before$[ebp]
	mov	ecx, DWORD PTR __Last_prev$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 484  :         _Last->_Prev   = _First_prev;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __First_prev$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 485  :         _First->_Prev  = _Before_prev;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Before_prev$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 486  : 
; 487  :         return _Last;

	mov	eax, DWORD PTR __Last$[ebp]

; 488  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@SAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@QAU32@00@Z ENDP ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_splice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnextnext$1 = -60					; size = 4
__Head$ = -48						; size = 4
__Pnext$ = -36						; size = 4
__Lock$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAEXXZ PROC ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Orphan_non_end, COMDAT
; _this$ = ecx

; 377  :     void _Orphan_non_end() noexcept { // orphan iterators except end()

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 378  : #if _ITERATOR_DEBUG_LEVEL == 2
; 379  :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 380  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 381  :         const auto _Head          = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx
$LN2@Orphan_non:

; 382  :         while (*_Pnext) {

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_non

; 383  :             _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnextnext$1[ebp], ecx

; 384  :             if (static_cast<_List_const_iterator<_List_val>&>(**_Pnext)._Ptr == _Head) { // iterator is end(), move on

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Head$[ebp]
	jne	SHORT $LN4@Orphan_non

; 385  :                 _Pnext = _Pnextnext;

	mov	eax, DWORD PTR __Pnextnext$1[ebp]
	mov	DWORD PTR __Pnext$[ebp], eax

; 386  :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_non
$LN4@Orphan_non:

; 387  :                 (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 388  :                 *_Pnext             = *_Pnextnext;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR __Pnextnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@Orphan_non:

; 389  :             }
; 390  :         }

	jmp	SHORT $LN2@Orphan_non
$LN3@Orphan_non:

; 391  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 392  :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Orphan_non
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Orphan_non:
	DD	1
	DD	$LN8@Orphan_non
$LN8@Orphan_non:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_non
$LN7@Orphan_non:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Orphan_non_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >, COMDAT
; _this$ = ecx

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@ABEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@ABEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal, COMDAT
; _this$ = ecx

; 1790 :     const _Alnode& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1791 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first

; 1792 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@ABEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal, COMDAT
; _this$ = ecx

; 1786 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1787 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Get_first

; 1788 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
__Newhead$ = -88					; size = 4
__Al$ = -76						; size = 4
__Proxy$ = -64						; size = 8
_$S28$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1771 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1772 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S28$[ebp]
	call	??$?0U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >
	lea	eax, DWORD PTR _$S28$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1773 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1774 :         auto& _Al     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1775 :         auto _Newhead = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocate
	mov	DWORD PTR __Newhead$[ebp], eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
	add	esp, 8

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> *,std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> * &>
	add	esp, 8

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newhead$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1779 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1780 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@Alloc_sent:
	DD	3
	DD	$LN8@Alloc_sent
$LN8@Alloc_sent:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN5@Alloc_sent
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN6@Alloc_sent
$LN6@Alloc_sent:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	56					; 00000038H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
__My_data$ = -32					; size = 4
__Al$ = -20						; size = 4
_this$ = -8						; size = 4
?_Tidy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Tidy, COMDAT
; _this$ = ecx

; 1436 :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1437 :         auto& _Al      = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1438 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1439 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	add	esp, 8

; 1441 :         _Node::_Freenode0(_Al, _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	add	esp, 8

; 1442 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?clear@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
tv73 = -224						; size = 4
tv75 = -220						; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
?clear@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::clear, COMDAT
; _this$ = ecx

; 1426 :     void clear() noexcept { // erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1427 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1428 :         _My_data._Orphan_non_end();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Orphan_non_end

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv75[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	mov	DWORD PTR tv73[ebp], eax
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	add	esp, 8

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1432 :         _My_data._Mysize        = 0;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [eax+8], 0

; 1433 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_erase@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z
_TEXT	SEGMENT
__Next$1 = -120						; size = 4
__Erasures$ = -108					; size = 4
__Al$ = -96						; size = 4
__Pnextnext$2 = -84					; size = 4
__Pnext$3 = -72						; size = 4
__Marked$4 = -60					; size = 4
__Lock$5 = -48						; size = 4
__Head$ = -36						; size = 4
__Predecessor$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Unchecked_erase@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_erase, COMDAT
; _this$ = ecx

; 1376 :     _Nodeptr _Unchecked_erase(_Nodeptr _First, const _Nodeptr _Last) noexcept { // erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1377 :         if (_First == _Last) {

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN10@Unchecked_

; 1378 :             return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
	jmp	$LN15@Unchecked_
$LN10@Unchecked_:

; 1379 :         }
; 1380 : 
; 1381 :         const auto _Predecessor = _First->_Prev;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Predecessor$[ebp], ecx

; 1382 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1383 :         const auto _Head = _Mypair._Myval2._Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx

; 1384 :         if (_First == _Head->_Next && _Last == _Head) { // orphan all non-end iterators

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN11@Unchecked_
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR __Head$[ebp]
	jne	SHORT $LN11@Unchecked_

; 1385 :             _Mypair._Myval2._Orphan_non_end();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >::_Orphan_non_end

; 1386 :         } else { // orphan erased iterators

	jmp	$LN12@Unchecked_
$LN11@Unchecked_:

; 1387 :             _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$5[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1388 :             for (auto _Marked = _First; _Marked != _Last; _Marked = _Marked->_Next) { // mark erased nodes

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Marked$4[ebp], eax
	jmp	SHORT $LN4@Unchecked_
$LN2@Unchecked_:
	mov	eax, DWORD PTR __Marked$4[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Marked$4[ebp], ecx
$LN4@Unchecked_:
	mov	eax, DWORD PTR __Marked$4[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Unchecked_

; 1389 :                 _Marked->_Prev = nullptr;

	mov	eax, DWORD PTR __Marked$4[ebp]
	mov	DWORD PTR [eax+4], 0

; 1390 :             }

	jmp	SHORT $LN2@Unchecked_
$LN3@Unchecked_:

; 1391 : 
; 1392 :             _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$3[ebp], ecx
$LN5@Unchecked_:

; 1393 :             while (*_Pnext) {

	mov	eax, DWORD PTR __Pnext$3[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Unchecked_

; 1394 :                 _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnextnext$2[ebp], ecx

; 1395 :                 if (static_cast<const_iterator&>(**_Pnext)._Ptr->_Prev) { // node still has a _Prev, skip

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN13@Unchecked_

; 1396 :                     _Pnext = _Pnextnext;

	mov	eax, DWORD PTR __Pnextnext$2[ebp]
	mov	DWORD PTR __Pnext$3[ebp], eax

; 1397 :                 } else { // orphan the iterator

	jmp	SHORT $LN14@Unchecked_
$LN13@Unchecked_:

; 1398 :                     (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1399 :                     *_Pnext             = *_Pnextnext;

	mov	eax, DWORD PTR __Pnext$3[ebp]
	mov	ecx, DWORD PTR __Pnextnext$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN14@Unchecked_:

; 1400 :                 }
; 1401 :             }

	jmp	SHORT $LN5@Unchecked_
$LN6@Unchecked_:

; 1402 : 
; 1403 :             // _Prev pointers not restored because we're about to delete the nodes of which they are a member anyway
; 1404 :         }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$5[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@Unchecked_:

; 1405 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1406 : 
; 1407 :         // snip out the removed range
; 1408 :         _Predecessor->_Next = _Last;

	mov	eax, DWORD PTR __Predecessor$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx

; 1409 :         _Last->_Prev        = _Predecessor;

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __Predecessor$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1410 : 
; 1411 :         // count and deallocate the removed nodes
; 1412 :         auto& _Al           = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1413 :         size_type _Erasures = 0;

	mov	DWORD PTR __Erasures$[ebp], 0
$LN9@Unchecked_:

; 1414 :         do {
; 1415 :             const auto _Next = _First->_Next;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Next$1[ebp], ecx

; 1416 :             _Node::_Freenode(_Al, _First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@PAU01@@Z ; std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >
	add	esp, 8

; 1417 :             _First = _Next;

	mov	eax, DWORD PTR __Next$1[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1418 :             ++_Erasures;

	mov	eax, DWORD PTR __Erasures$[ebp]
	add	eax, 1
	mov	DWORD PTR __Erasures$[ebp], eax

; 1419 :         } while (_First != _Last);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN9@Unchecked_

; 1420 : 
; 1421 :         _Mypair._Myval2._Mysize -= _Erasures;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Erasures$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1422 :         return _Last;

	mov	eax, DWORD PTR __Last$[ebp]
$LN15@Unchecked_:

; 1423 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Unchecked_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN18@Unchecked_:
	DD	1
	DD	$LN17@Unchecked_
$LN17@Unchecked_:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN16@Unchecked_
$LN16@Unchecked_:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Unchecked_erase@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@PAU32@QAU32@@Z ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?max_size@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?max_size@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::max_size, COMDAT
; _this$ = ecx

; 1194 :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1195 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@ABEABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1196 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1197 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1123 :     iterator _Make_iter(_Nodeptr _Where) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1124 :         return iterator(_Where, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1125 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@@Z ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1115 :     _Unchecked_iterator _Unchecked_end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1116 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1117 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?_Unchecked_begin@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1107 :     _Unchecked_iterator _Unchecked_begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1108 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead->_Next, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1109 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ?end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv76 = -212						; size = 4
tv78 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::end, COMDAT
; _this$ = ecx

; 1099 :     _NODISCARD iterator end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1100 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > > >
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	push	eax
	mov	ecx, DWORD PTR tv76[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@std@@QAE@PAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@1@PBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1101 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??1?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_$S10$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4

; 1046 :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Tidy

; 1047 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1048 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@XZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S10$[ebp]
	call	??$?0U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >
	lea	eax, DWORD PTR _$S10$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1049 :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1050 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1051 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@list
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@list:
	DD	1
	DD	$LN4@list
$LN4@list:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@list
$LN3@list:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	48					; 00000030H
	DB	0
??1?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::~list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\list
;	COMDAT ??0?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z PROC ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >, COMDAT
; _this$ = ecx

; 808  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __71B70C9A_list
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR tv70[ebp]
	call	??$?0ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIVResourceHandler@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,ResourceHandler> > >,1><std::allocator<std::pair<unsigned int const ,ResourceHandler> > const &>

; 809  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@AAEXXZ ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::_Alloc_sentinel_and_proxy

; 810  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@U?$pair@$$CBIVResourceHandler@@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@1@@Z ENDP ; std::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >::list<std::pair<unsigned int const ,ResourceHandler>,std::allocator<std::pair<unsigned int const ,ResourceHandler> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::max_size, COMDAT

; 709  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 214748364				; 0cccccccH

; 711  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::deallocate, COMDAT

; 694  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 695  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 20
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 697  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@2@QAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BE@@std@@YAII@Z	; std::_Get_size_of_n<20>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEPAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEXQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEXQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 20
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@std@@@std@@QAEXQAU?$_List_node@U?$pair@$$CBIVResourceHandler@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,ResourceHandler>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\unordered_map
;	COMDAT ??0?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Traits$ = 8						; size = 4
??0?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z PROC ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>, COMDAT
; _this$ = ecx

; 51   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __EA3A8D1F_unordered_map
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Traits$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Umap_traits@IVResourceHandler@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@3@$0A@@std@@QAE@ABV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ENDP ; std::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>::_Umap_traits<unsigned int,ResourceHandler,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,ResourceHandler> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int const ,ResourceHandler> >::allocator<std::pair<unsigned int const ,ResourceHandler> >, COMDAT
; _this$ = ecx

; 802  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBIVResourceHandler@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int const ,ResourceHandler> >::allocator<std::pair<unsigned int const ,ResourceHandler> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QBEABU?$hash@I@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QBEABU?$hash@I@2@XZ PROC ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QBEABU?$hash@I@2@XZ ENDP ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QBEABU?$equal_to@I@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QBEABU?$equal_to@I@2@XZ PROC ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QBEABU?$equal_to@I@2@XZ ENDP ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ?_Do_hash@?$hash@I@std@@SAIABI@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Do_hash@?$hash@I@std@@SAIABI@Z PROC			; std::hash<unsigned int>::_Do_hash, COMDAT

; 2217 :     static size_t _Do_hash(const _Kty& _Keyval) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2218 :         return _Hash_representation(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	call	??$_Hash_representation@I@std@@YAIABI@Z	; std::_Hash_representation<unsigned int>
	add	esp, 4

; 2219 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Do_hash@?$hash@I@std@@SAIABI@Z ENDP			; std::hash<unsigned int>::_Do_hash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??R?$_Conditionally_enabled_hash@I$00@std@@QBEIABI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Keyval$ = 8						; size = 4
??R?$_Conditionally_enabled_hash@I$00@std@@QBEIABI@Z PROC ; std::_Conditionally_enabled_hash<unsigned int,1>::operator(), COMDAT
; _this$ = ecx

; 2197 :         noexcept(noexcept(hash<_Kty>::_Do_hash(_Keyval))) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2198 :         return hash<_Kty>::_Do_hash(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	call	?_Do_hash@?$hash@I@std@@SAIABI@Z	; std::hash<unsigned int>::_Do_hash
	add	esp, 4

; 2199 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Conditionally_enabled_hash@I$00@std@@QBEIABI@Z ENDP ; std::_Conditionally_enabled_hash<unsigned int,1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??R?$equal_to@I@std@@QBE_NABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@I@std@@QBE_NABI0@Z PROC			; std::equal_to<unsigned int>::operator(), COMDAT
; _this$ = ecx

; 90   :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 91   :         return _Left == _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 92   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$equal_to@I@std@@QBE_NABI0@Z ENDP			; std::equal_to<unsigned int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEABMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEABMXZ PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 171  :     _NODISCARD const float& _Get_max_bucket_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 172  :         return _Mypair._Myval2._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 173  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QBEABMXZ ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAEAAMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAEAAMXZ PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size, COMDAT
; _this$ = ecx

; 167  :     _NODISCARD float& _Get_max_bucket_size() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4

; 168  :         return _Mypair._Myval2._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 169  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAEAAMXZ ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xhash
;	COMDAT ??0?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAE@XZ
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T1 = -233						; size = 1
$T2 = -221						; size = 1
$T3 = -212						; size = 4
_this$ = -8						; size = 4
??0?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAE@XZ PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >, COMDAT
; _this$ = ecx

; 144  :         : _Mypair(_Zero_then_variadic_args_t{}, _Zero_then_variadic_args_t{}, 0.0f) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2EFD93C2_xhash
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	xorps	xmm0, xmm0
	movss	DWORD PTR $T3[ebp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	call	??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@$$QAU21@$$QAM@Z ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1><std::_Zero_then_variadic_args_t,float>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QAE@XZ ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z PROC ; std::unique_lock<std::mutex>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QAEXI@Z ENDP ; std::unique_lock<std::mutex>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ PROC	; std::unique_lock<std::mutex>::unlock, COMDAT
; _this$ = ecx

; 222  :     void unlock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 223  :         if (!_Pmtx || !_Owns) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@unlock
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN2@unlock
$LN3@unlock:

; 224  :             _Throw_system_error(errc::operation_not_permitted);

	push	1
	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
$LN2@unlock:

; 225  :         }
; 226  : 
; 227  :         _Pmtx->unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?unlock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::unlock

; 228  :         _Owns = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
$LN4@unlock:

; 229  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unlock@?$unique_lock@Vmutex@std@@@std@@QAEXXZ ENDP	; std::unique_lock<std::mutex>::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ PROC		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 181  :     ~unique_lock() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 182  :         if (_Owns) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@unique_loc

; 183  :             _Pmtx->unlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?unlock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::unlock
$LN3@unique_loc:

; 184  :         }
; 185  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$unique_lock@Vmutex@std@@@std@@QAE@XZ ENDP		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mtx$ = 8						; size = 4
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z PROC ; std::unique_lock<std::mutex>::unique_lock<std::mutex>, COMDAT
; _this$ = ecx

; 135  :     explicit unique_lock(_Mutex& _Mtx) : _Pmtx(_STD addressof(_Mtx)), _Owns(false) { // construct and lock

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Mtx$[ebp]
	push	eax
	call	??$addressof@Vmutex@std@@@std@@YAPAVmutex@0@AAV10@@Z ; std::addressof<std::mutex>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 136  :         _Pmtx->lock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?lock@_Mutex_base@std@@QAEXXZ		; std::_Mutex_base::lock

; 137  :         _Owns = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1

; 138  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$unique_lock@Vmutex@std@@@std@@QAE@AAVmutex@1@@Z ENDP ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ PROC ; std::condition_variable::_Mycnd, COMDAT
; _this$ = ecx

; 698  :     _Cnd_t _Mycnd() noexcept { // get pointer to _Cnd_internal_imp_t inside _Cnd_storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 699  :         return reinterpret_cast<_Cnd_t>(&_Cnd_storage);

	mov	eax, DWORD PTR _this$[ebp]

; 700  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ENDP ; std::condition_variable::_Mycnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??1condition_variable@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1condition_variable@std@@QAE@XZ PROC			; std::condition_variable::~condition_variable, COMDAT
; _this$ = ecx

; 582  :     ~condition_variable() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 583  :         _Cnd_destroy_in_situ(_Mycnd());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_destroy_in_situ
	add	esp, 4

; 584  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1condition_variable@std@@QAE@XZ ENDP			; std::condition_variable::~condition_variable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??0condition_variable@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0condition_variable@std@@QAE@XZ PROC			; std::condition_variable::condition_variable, COMDAT
; _this$ = ecx

; 578  :     condition_variable() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 579  :         _Cnd_init_in_situ(_Mycnd());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mycnd@condition_variable@std@@AAEPAU_Cnd_internal_imp_t@@XZ ; std::condition_variable::_Mycnd
	push	eax
	call	__Cnd_init_in_situ
	add	esp, 4

; 580  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0condition_variable@std@@QAE@XZ ENDP			; std::condition_variable::condition_variable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1mutex@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1mutex@std@@QAE@XZ PROC				; std::mutex::~mutex, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Mutex_base@std@@QAE@XZ		; std::_Mutex_base::~_Mutex_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1mutex@std@@QAE@XZ ENDP				; std::mutex::~mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??0mutex@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0mutex@std@@QAE@XZ PROC				; std::mutex::mutex, COMDAT
; _this$ = ecx

; 89   :     /* constexpr */ mutex() noexcept // TRANSITION, ABI

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 90   :         : _Mutex_base() {}

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Mutex_base@std@@QAE@H@Z		; std::_Mutex_base::_Mutex_base
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0mutex@std@@QAE@XZ ENDP				; std::mutex::mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ PROC ; std::_Mutex_base::_Mymtx, COMDAT
; _this$ = ecx

; 82   :     _Mtx_t _Mymtx() noexcept { // get pointer to _Mtx_internal_imp_t inside _Mtx_storage

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 83   :         return reinterpret_cast<_Mtx_t>(&_Mtx_storage);

	mov	eax, DWORD PTR _this$[ebp]

; 84   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ENDP ; std::_Mutex_base::_Mymtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?unlock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unlock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::unlock, COMDAT
; _this$ = ecx

; 66   :     void unlock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 67   :         _Mtx_unlock(_Mymtx());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_unlock
	add	esp, 4

; 68   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?unlock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ?lock@_Mutex_base@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?lock@_Mutex_base@std@@QAEXXZ PROC			; std::_Mutex_base::lock, COMDAT
; _this$ = ecx

; 50   :     void lock() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 51   :         _Check_C_return(_Mtx_lock(_Mymtx()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_lock
	add	esp, 4
	push	eax
	call	?_Check_C_return@std@@YAHH@Z		; std::_Check_C_return
	add	esp, 4

; 52   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?lock@_Mutex_base@std@@QAEXXZ ENDP			; std::_Mutex_base::lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??1_Mutex_base@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Mutex_base@std@@QAE@XZ PROC				; std::_Mutex_base::~_Mutex_base, COMDAT
; _this$ = ecx

; 43   :     ~_Mutex_base() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 44   :         _Mtx_destroy_in_situ(_Mymtx());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_destroy_in_situ
	add	esp, 4

; 45   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Mutex_base@std@@QAE@XZ ENDP				; std::_Mutex_base::~_Mutex_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\mutex
;	COMDAT ??0_Mutex_base@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Flags$ = 8						; size = 4
??0_Mutex_base@std@@QAE@H@Z PROC			; std::_Mutex_base::_Mutex_base, COMDAT
; _this$ = ecx

; 39   :     _Mutex_base(int _Flags = 0) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3F4CC05A_mutex
	call	@__CheckForDebuggerJustMyCode@4

; 40   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

	mov	eax, DWORD PTR __Flags$[ebp]
	or	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mymtx@_Mutex_base@std@@AAEPAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
	push	eax
	call	__Mtx_init_in_situ
	add	esp, 8

; 41   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Mutex_base@std@@QAE@H@Z ENDP			; std::_Mutex_base::_Mutex_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ??$_Hash_representation@I@std@@YAIABI@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??$_Hash_representation@I@std@@YAIABI@Z PROC		; std::_Hash_representation<unsigned int>, COMDAT

; 2174 : _NODISCARD size_t _Hash_representation(const _Kty& _Keyval) noexcept { // bitwise hashes the representation of a key

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2175 :     return _Fnv1a_append_value(_FNV_offset_basis, _Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	push	-2128831035				; 811c9dc5H
	call	??$_Fnv1a_append_value@I@std@@YAIIABI@Z	; std::_Fnv1a_append_value<unsigned int>
	add	esp, 8

; 2176 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Hash_representation@I@std@@YAIABI@Z ENDP		; std::_Hash_representation<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@0@XZ
_TEXT	SEGMENT
??$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@0@XZ PROC ; std::_Immortalize_memcpy_image<std::_Generic_error_category>, COMDAT

; 582  : _NODISCARD const _Ty& _Immortalize_memcpy_image() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 583  :     static _Constexpr_immortalize_impl<_Ty> _Static;
; 584  :     return _Static._Storage;

	mov	eax, OFFSET ?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@1@XZ@4U?$_Constexpr_immortalize_impl@V_Generic_error_category@std@@@1@A ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static

; 585  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@0@XZ ENDP ; std::_Immortalize_memcpy_image<std::_Generic_error_category>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 462  :     _NODISCARD virtual string message(int _Errcode) const override {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 463  :         return _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 464  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 458  :     _NODISCARD virtual const char* name() const noexcept override {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 459  :         return "generic";

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic@

; 460  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?_Throw_system_error@std@@YAXW4errc@1@@Z
_TEXT	SEGMENT
$T1 = -232						; size = 8
$T2 = -216						; size = 20
__Errno$ = 8						; size = 4
?_Throw_system_error@std@@YAXW4errc@1@@Z PROC		; std::_Throw_system_error, COMDAT

; 432  : [[noreturn]] inline void _Throw_system_error(const errc _Errno) {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 433  :     _THROW(system_error{_STD make_error_code(_Errno)});

	mov	eax, DWORD PTR __Errno$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z ; std::make_error_code
	add	esp, 8
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0system_error@std@@QAE@Verror_code@1@@Z ; std::system_error::system_error
	push	OFFSET __TI4?AVsystem_error@std@@
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Throw_syst:

; 434  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_system_error@std@@YAXW4errc@1@@Z ENDP		; std::_Throw_system_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gsystem_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gsystem_error@std@@UAEPAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1system_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gsystem_error@std@@UAEPAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0system_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0system_error@std@@QAE@ABV01@@Z PROC			; std::system_error::system_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_System_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0system_error@std@@QAE@ABV01@@Z ENDP			; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1system_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1system_error@std@@UAE@XZ PROC			; std::system_error::~system_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1system_error@std@@UAE@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??0system_error@std@@QAE@Verror_code@1@@Z
_TEXT	SEGMENT
$T2 = -248						; size = 28
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Errcode$ = 8						; size = 8
??0system_error@std@@QAE@Verror_code@1@@Z PROC		; std::system_error::system_error, COMDAT
; _this$ = ecx

; 406  :     system_error(error_code _Errcode) : _Mybase(_Errcode, "") {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0system_error@std@@QAE@Verror_code@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_00CNPNBAHC@@
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errcode$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Errcode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0system_error@std@@QAE@Verror_code@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0system_error@std@@QAE@Verror_code@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0system_error@std@@QAE@Verror_code@1@@Z ENDP		; std::system_error::system_error
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_System_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_System_error@std@@UAEPAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error@std@@UAEPAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_System_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0_System_error@std@@QAE@ABV01@@Z PROC			; std::_System_error::_System_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0runtime_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error@std@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_System_error@std@@QAE@ABV01@@Z ENDP			; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_System_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_System_error@std@@UAE@XZ PROC			; std::_System_error::~_System_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error@std@@UAE@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv138 = -272						; size = 4
tv136 = -268						; size = 4
$T2 = -260						; size = 28
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Errcode$ = 8						; size = 8
__Message$ = 16						; size = 4
??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT
; _this$ = ecx

; 395  :     _System_error(error_code _Errcode, const string& _Message)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 396  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __Errcode$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Errcode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
	add	esp, 40					; 00000028H
	mov	DWORD PTR tv136[ebp], eax
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Errcode$[ebp]
	mov	edx, DWORD PTR __Errcode$[ebp+4]
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
tv85 = -260						; size = 4
tv79 = -256						; size = 4
$T2 = -248						; size = 4
$T3 = -236						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 8
__Message$ = 20						; size = 28
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 385  :     static string _Makestr(error_code _Errcode, string _Message) { // compose error message

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 386  :         if (!_Message.empty()) {

	lea	ecx, DWORD PTR __Message$[ebp]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Makestr

; 387  :             _Message.append(": ");

	push	OFFSET ??_C@_02LMMGGCAJ@?3?5@
	lea	ecx, DWORD PTR __Message$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:

; 388  :         }
; 389  : 
; 390  :         _Message.append(_Errcode.message());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Errcode$[ebp]
	call	?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	lea	ecx, DWORD PTR __Message$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 391  :         return _Message;

	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Message$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 392  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$0:
	lea	ecx, DWORD PTR __Message$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??8std@@YA_NABVerror_condition@0@0@Z
_TEXT	SEGMENT
tv82 = -204						; size = 4
tv72 = -200						; size = 4
tv74 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??8std@@YA_NABVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 248  :     _NODISCARD friend bool operator==(const error_condition& _Left, const error_condition& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 249  :         return _Left.category() == _Right.category() && _Left.value() == _Right.value();

	mov	ecx, DWORD PTR __Left$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv82[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv82[ebp]

; 250  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??8std@@YA_NABVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 235  :     _NODISCARD const error_category& category() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 236  :         return *_Mycat;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 237  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 231  :     _NODISCARD int value() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 232  :         return _Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 233  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 208  :     error_condition(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv76 = -228						; size = 4
tv78 = -224						; size = 4
tv67 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT
; _this$ = ecx

; 159  :     _NODISCARD string message() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 160  :         return category().message(value());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	mov	DWORD PTR tv67[ebp], eax
	mov	eax, DWORD PTR tv67[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv78[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv67[ebp]
	call	DWORD PTR tv78[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 161  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 153  :     _NODISCARD const error_category& category() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 154  :         return *_Mycat;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 155  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 149  :     _NODISCARD int value() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 150  :         return _Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 151  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??0error_code@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_code@std@@QAE@HABVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT
; _this$ = ecx

; 126  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_code@std@@QAE@HABVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 89   :     _NODISCARD bool operator==(const error_category& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 90   :         return _Addr == _Right._Addr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 91   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 333  : _NODISCARD inline bool error_category::equivalent(const error_code& _Code, int _Errval) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 334  :     return *this == _Code.category() && _Code.value() == _Errval;

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 335  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
tv73 = -224						; size = 4
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 329  : _NODISCARD inline bool error_category::equivalent(int _Errval, const error_condition& _Cond) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 330  :     return default_error_condition(_Errval) == _Cond;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv73[ebp], edx
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR tv73[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??8std@@YA_NABVerror_condition@0@0@Z	; std::operator==
	add	esp, 8

; 331  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 324  : _NODISCARD inline error_condition error_category::default_error_condition(int _Errval) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 325  :     // make error_condition for error code
; 326  :     return error_condition(_Errval, *this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 327  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 115  : };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 607  : _NODISCARD inline const error_category& generic_category() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 608  :     return _Immortalize_memcpy_image<_Generic_error_category>();

	call	??$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAABV_Generic_error_category@0@XZ ; std::_Immortalize_memcpy_image<std::_Generic_error_category>

; 609  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Errno$ = 12						; size = 4
?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z PROC ; std::make_error_code, COMDAT

; 344  : _NODISCARD inline error_code make_error_code(errc _Errno) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7EAAEC0D_system_error
	call	@__CheckForDebuggerJustMyCode@4

; 345  :     return error_code(static_cast<int>(_Errno), _STD generic_category());

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	eax, DWORD PTR __Errno$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_code@std@@QAE@HABVerror_category@1@@Z ; std::error_code::error_code
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\stdexcept
;	COMDAT ??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx

; 111  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __0F1BCCF4_stdexcept
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBD@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1350 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1351 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1352 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1346 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1347 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1348 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx

; 4412 :     const _Alty& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4413 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4414 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx

; 4408 :     _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4409 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4410 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
tv79 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx

; 4404 :     void _Swap_proxy_and_iterators(basic_string& _Right) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4405 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv79[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4406 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -245						; size = 1
__Al$3 = -44						; size = 4
__Ptr$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 4383 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4384 :         _Mypair._Myval2._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$4[ebp], ecx

; 4387 :             auto& _Al          = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$3[ebp], eax

; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>
	add	esp, 4

; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$4[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$3[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4390 :         }
; 4391 : 
; 4392 :         _Mypair._Myval2._Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 4396 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx

; 4376 :     void _Tidy_init() noexcept { // initialize basic_string data members

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4377 :         _Mypair._Myval2._Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 4381 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
_TEXT	SEGMENT
tv74 = -212						; size = 4
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 4297 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4298 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR __Requested$[ebp]
	push	ecx
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	add	esp, 12					; 0000000cH

; 4299 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z
_TEXT	SEGMENT
$T1 = -216						; size = 4
__Masked$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Requested$ = 8					; size = 4
__Old$ = 12						; size = 4
__Max$ = 16						; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4284 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	eax, DWORD PTR __Requested$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Masked$[ebp], eax

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	mov	eax, DWORD PTR __Masked$[ebp]
	cmp	eax, DWORD PTR __Max$[ebp]
	jbe	SHORT $LN2@Calculate_

; 4287 :             return _Max;

	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN2@Calculate_:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Old$[ebp], ecx
	jbe	SHORT $LN3@Calculate_

; 4291 :             return _Max;

	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN3@Calculate_:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	add	eax, DWORD PTR __Old$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Masked$[ebp]
	push	edx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
$LN4@Calculate_:

; 4295 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Calculate_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Calculate_:
	DD	1
	DD	$LN6@Calculate_
$LN6@Calculate_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@Calculate_
$LN5@Calculate_:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT
; _this$ = ecx

; 3847 :     _NODISCARD bool empty() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3848 :         return size() == 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	test	eax, eax
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv67[ebp]

; 3849 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -264						; size = 4
$T2 = -252						; size = 4
$T3 = -240						; size = 4
__Storage_max$ = -36					; size = 4
__Alloc_max$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 3773 :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3774 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
	mov	DWORD PTR __Alloc_max$[ebp], eax

; 3775 :         const size_type _Storage_max = // can always store small string

	mov	DWORD PTR $T3[ebp], 16			; 00000010H
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR __Alloc_max$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Storage_max$[ebp], edx

; 3776 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3777 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

	mov	eax, DWORD PTR __Storage_max$[ebp]
	sub	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 3778 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3779 :         );
; 3780 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@max_size
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@max_size:
	DD	1
	DD	$LN4@max_size
$LN4@max_size:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@max_size
$LN3@max_size:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 3769 :     _NODISCARD size_type size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3770 :         return _Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 3771 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 3751 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3752 :         return _Mypair._Myval2._Myptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 3753 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3061 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3063 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Old_ptr$3 = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3042 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 3043 :         // assign [_Ptr, _Ptr + _Count)
; 3044 :         if (_Count <= _Mypair._Myval2._Myres) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	ja	SHORT $LN2@assign

; 3045 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax

; 3046 :             _Mypair._Myval2._Mysize = _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$3[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$3[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 3049 :             return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@assign
$LN2@assign:

; 3050 :         }
; 3051 : 
; 3052 :         return _Reallocate_for(

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
$LN1@assign:

; 3053 :             _Count,
; 3054 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3055 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3057 :             },
; 3058 :             _Ptr);
; 3059 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2957 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2959 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -233						; size = 1
__Old_ptr$3 = -32					; size = 4
__Old_size$ = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2935 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2936 :         // append [_Ptr, _Ptr + _Count)
; 2937 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Old_size$[ebp], ecx

; 2938 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Old_size$[ebp]
	cmp	DWORD PTR __Count$[ebp], ecx
	ja	SHORT $LN2@append

; 2939 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	eax, DWORD PTR __Old_size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax

; 2940 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax

; 2941 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$3[ebp]
	add	edx, DWORD PTR __Old_size$[ebp]
	push	edx
	call	?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::move
	add	esp, 12					; 0000000cH

; 2942 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_size$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	add	ecx, DWORD PTR __Old_ptr$3[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 2943 :             return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@append
$LN2@append:

; 2944 :         }
; 2945 : 
; 2946 :         return _Reallocate_grow_by(

	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_grow_by@V<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_ab246b20b9526e2ef7792587e4298a77>@@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_ab246b20b9526e2ef7792587e4298a77>,char const *,unsigned int>
$LN1@append:

; 2947 :             _Count,
; 2948 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2949 :                 const size_type _Count) {
; 2950 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2951 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2952 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2953 :             },
; 2954 :             _Ptr, _Count);
; 2955 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
tv76 = -212						; size = 4
tv78 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2909 :     basic_string& append(const basic_string& _Right) {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2910 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv78[ebp], ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2911 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
__To_delete$ = -48					; size = 4
_$S19$ = -33						; size = 1
__Alproxy$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2800 :     ~basic_string() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2801 :         _Tidy_deallocate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2802 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2803 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S19$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S19$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 2804 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __To_delete$[ebp], ecx

; 2805 :         _Mypair._Myval2._Myproxy = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 2806 :         _Delete_plain_internal(_Alproxy, _To_delete);

	mov	eax, DWORD PTR __To_delete$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 2807 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2808 :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@basic_stri:
	DD	1
	DD	$LN4@basic_stri
$LN4@basic_stri:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN3@basic_stri
$LN3@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	57					; 00000039H
	DB	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
$T1 = -312						; size = 4
$T2 = -300						; size = 4
__New_array$ = -96					; size = 4
__New_capacity$ = -84					; size = 4
__Al$ = -72						; size = 4
__My_data$ = -60					; size = 4
__Right_ptr$ = -48					; size = 4
__Right_size$ = -36					; size = 4
__Right_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT
; _this$ = ecx

; 2728 :     void _Construct_lv_contents(const basic_string& _Right) {

	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2729 :         // assign by copying data stored in _Right
; 2730 :         // pre: this != &_Right
; 2731 :         // pre: *this owns no memory, iterators orphaned (note:
; 2732 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2733 :         auto& _Right_data             = _Right._Mypair._Myval2;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Right_data$[ebp], eax

; 2734 :         const size_type _Right_size   = _Right_data._Mysize;

	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Right_size$[ebp], ecx

; 2735 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Right_ptr$[ebp], eax

; 2736 :         auto& _My_data                = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 2737 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

	cmp	DWORD PTR __Right_size$[ebp], 16	; 00000010H
	jae	SHORT $LN2@Construct_

; 2738 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

	push	16					; 00000010H
	mov	eax, DWORD PTR __Right_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH

; 2739 :             _My_data._Mysize = _Right_size;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 2740 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH

; 2741 :             return;

	jmp	$LN1@Construct_
$LN2@Construct_:

; 2742 :         }
; 2743 : 
; 2744 :         auto& _Al                     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 2745 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR __Right_size$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __New_capacity$[ebp], eax

; 2746 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

	mov	eax, DWORD PTR __New_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_array$[ebp], eax

; 2747 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

	lea	eax, DWORD PTR __New_array$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8

; 2748 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_array$[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	call	?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Char_traits<char,int>::copy
	add	esp, 12					; 0000000cH

; 2749 :         _My_data._Mysize = _Right_size;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 2750 :         _My_data._Myres  = _New_capacity;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN1@Construct_:

; 2751 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Construct_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN6@Construct_:
	DD	1
	DD	$LN5@Construct_
$LN5@Construct_:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN4@Construct_
$LN4@Construct_:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT
; _this$ = ecx

; 2687 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2688 :         // assign by stealing _Right's buffer, memcpy optimization
; 2689 :         // pre: this != &_Right
; 2690 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2691 :         // pre: *this owns no memory, iterators orphaned (note:
; 2692 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2693 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2694 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte

; 2695 :             // take ownership of _Right's iterators along with its buffer
; 2696 :             _Swap_proxy_and_iterators(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 2697 :         } else {

	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2698 :             _Right._Mypair._Myval2._Orphan_all();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:

; 2699 :         }
; 2700 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2701 : 
; 2702 :         _Memcpy_val_from(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from

; 2703 :         _Right._Tidy_init();

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2704 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
__Right_data_mem$ = -32					; size = 4
__My_data_mem$ = -20					; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT
; _this$ = ecx

; 2678 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2679 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2680 :         const auto _My_data_mem =

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __My_data_mem$[ebp], eax

; 2681 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2682 :         const auto _Right_data_mem =

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __Right_data_mem$[ebp], eax

; 2683 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	push	24					; 00000018H
	mov	eax, DWORD PTR __Right_data_mem$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data_mem$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2685 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
tv75 = -272						; size = 4
tv94 = -268						; size = 4
tv77 = -268						; size = 4
$T2 = -257						; size = 1
$T3 = -245						; size = 1
$T4 = -233						; size = 1
$T5 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2496 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
	mov	cl, BYTE PTR $T5[ebp]
	mov	BYTE PTR $T4[ebp], cl
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	movzx	eax, BYTE PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >

; 2497 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR tv94[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2498 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2499 :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
tv69 = -276						; size = 4
$T2 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S20$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2413 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2414 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S20$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S20$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 2415 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2416 :         _Tidy_init();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2417 :         assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2418 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 2419 :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@basic_stri:
	DD	2
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@basic_stri
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@basic_stri
$LN6@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	48					; 00000030H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv76 = -304						; size = 4
tv78 = -300						; size = 4
$T2 = -289						; size = 1
$T3 = -277						; size = 1
$T4 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S22$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2351 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	mov	DWORD PTR tv76[ebp], eax
	mov	dl, BYTE PTR $T3[ebp]
	mov	BYTE PTR $T2[ebp], dl
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv78[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2352 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S22$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S22$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 2353 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2354 :         _Construct_lv_contents(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2355 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 2356 :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@basic_stri:
	DD	2
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@basic_stri
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@basic_stri
$LN6@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 2254 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 2252 :         _Bxty() noexcept {} // user-provided, for fancy pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 2226 :     bool _Large_string_engaged() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2227 :         return _BUF_SIZE <= _Myres;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Large_stri:
	mov	al, BYTE PTR tv66[ebp]

; 2228 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2217 :     const value_type* _Myptr() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2218 :         const value_type* _Result = _Bx._Buf;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax

; 2219 :         if (_Large_string_engaged()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:

; 2221 :         }
; 2222 : 
; 2223 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 2224 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2208 :     value_type* _Myptr() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2209 :         value_type* _Result = _Bx._Buf;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax

; 2210 :         if (_Large_string_engaged()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:

; 2212 :         }
; 2213 : 
; 2214 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 2215 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 713  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 714  :         return _Al;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 715  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 709  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

	or	eax, -1

; 711  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2274 : [[noreturn]] inline void _Xlen_string() {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 2275 :     _Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen_strin:

; 2276 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z PROC	; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 427  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 428  :         _Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 429  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ENDP	; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
_TEXT	SEGMENT
tv66 = -208						; size = 4
tv75 = -201						; size = 1
tv72 = -200						; size = 4
tv69 = -196						; size = 4
__First$ = 8						; size = 4
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 373  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 374  :         // find length of null-terminated string
; 375  : #if _HAS_CXX17
; 376  : #ifdef __cpp_char8_t
; 377  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 378  : #if _HAS_U8_INTRINSICS
; 379  :             return __builtin_u8strlen(_First);
; 380  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 381  :             return _Primary_char_traits::length(_First);
; 382  : #endif // _HAS_U8_INTRINSICS
; 383  :         } else
; 384  : #endif // __cpp_char8_t
; 385  :         {
; 386  :             return __builtin_strlen(_First);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	add	ecx, 1
	mov	DWORD PTR tv72[ebp], ecx
$LL3@length:
	mov	edx, DWORD PTR tv69[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv75[ebp], al
	add	DWORD PTR tv69[ebp], 1
	cmp	BYTE PTR tv75[ebp], 0
	jne	SHORT $LL3@length
	mov	ecx, DWORD PTR tv69[ebp]
	sub	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	eax, DWORD PTR tv66[ebp]

; 387  :         }
; 388  : #else // _HAS_CXX17
; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 390  : #endif // _HAS_CXX17
; 391  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 77   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 78   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 79   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 80   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 81   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 82   : #ifdef __cpp_lib_is_constant_evaluated
; 83   :         if (_STD is_constant_evaluated()) {
; 84   :             // dest: [_First1, _First1 + _Count)
; 85   :             // src: [_First2, _First2 + _Count)
; 86   :             // We need to handle overlapping ranges.
; 87   :             // If _First1 is in the src range, we need a backward loop.
; 88   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 89   : 
; 90   :             if (_First1 == _First2) {
; 91   :                 return _First1; // Self-assignment; either loop would work, but returning immediately is faster.
; 92   :             }
; 93   : 
; 94   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 95   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 96   :             bool _Loop_forward = true;
; 97   : 
; 98   :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {
; 99   :                 if (_First1 == _Src) {
; 100  :                     _Loop_forward = false;
; 101  :                     break;
; 102  :                 }
; 103  :             }
; 104  : 
; 105  :             if (_Loop_forward) {
; 106  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 107  :                     _First1[_Idx] = _First2[_Idx];
; 108  :                 }
; 109  :             } else {
; 110  :                 for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 111  :                     _First1[_Count - 1 - _Idx] = _First2[_Count - 1 - _Idx];
; 112  :                 }
; 113  :             }
; 114  : 
; 115  :             return _First1;
; 116  :         }
; 117  : #endif // __cpp_lib_is_constant_evaluated
; 118  : 
; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 120  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 121  : 
; 122  :         return _First1;

	mov	eax, DWORD PTR __First1$[ebp]

; 123  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 46   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C00D0CE5_xstring
	call	@__CheckForDebuggerJustMyCode@4

; 47   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 48   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 49   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 50   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^ / vvv !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 51   : #ifdef __cpp_lib_is_constant_evaluated
; 52   :         if (_STD is_constant_evaluated()) {
; 53   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap; see LWG-3085
; 54   :             for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {
; 55   :                 _First1[_Idx] = _First2[_Idx];
; 56   :             }
; 57   : 
; 58   :             return _First1;
; 59   :         }
; 60   : #endif // __cpp_lib_is_constant_evaluated
; 61   : 
; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 63   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 64   : 
; 65   :         return _First1;

	mov	eax, DWORD PTR __First1$[ebp]

; 66   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$_Char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xbit_ops.h
;	COMDAT ?_Ceiling_of_log_2@std@@YAKI@Z
_TEXT	SEGMENT
__Value$ = 8						; size = 4
?_Ceiling_of_log_2@std@@YAKI@Z PROC			; std::_Ceiling_of_log_2, COMDAT

; 49   : _NODISCARD inline unsigned long _Ceiling_of_log_2(const size_t _Value) noexcept { // returns ceil(log_2(_Value))

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __7EACF2A1_xbit_ops@h
	call	@__CheckForDebuggerJustMyCode@4

; 50   :                                                                                   // pre: _Value > 1
; 51   :     return 1 + _Floor_of_log_2(_Value - 1);

	mov	eax, DWORD PTR __Value$[ebp]
	sub	eax, 1
	push	eax
	call	?_Floor_of_log_2@std@@YAKI@Z		; std::_Floor_of_log_2
	add	esp, 4
	add	eax, 1

; 52   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Ceiling_of_log_2@std@@YAKI@Z ENDP			; std::_Ceiling_of_log_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xbit_ops.h
;	COMDAT ?_Floor_of_log_2@std@@YAKI@Z
_TEXT	SEGMENT
__Result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Value$ = 8						; size = 4
?_Floor_of_log_2@std@@YAKI@Z PROC			; std::_Floor_of_log_2, COMDAT

; 23   : _NODISCARD inline unsigned long _Floor_of_log_2(size_t _Value) noexcept { // returns floor(log_2(_Value))

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __7EACF2A1_xbit_ops@h
	call	@__CheckForDebuggerJustMyCode@4

; 24   :     _Value |= size_t{1}; // avoid undefined answer from _BitScanReverse for 0

	mov	eax, DWORD PTR __Value$[ebp]
	or	eax, 1
	mov	DWORD PTR __Value$[ebp], eax

; 25   :     unsigned long _Result;
; 26   : 
; 27   : #ifdef _M_CEE_PURE
; 28   : #ifdef _WIN64
; 29   :     _Result = 63;
; 30   : #else // ^^^ 64-bit ^^^ / vvv 32-bit vvv
; 31   :     _Result = 31;
; 32   : #endif // 64 vs. 32-bit
; 33   : 
; 34   :     while ((size_t{1} << _Result) > _Value) {
; 35   :         --_Result;
; 36   :     }
; 37   : 
; 38   : #else // ^^^ _M_CEE_PURE ^^^ // vvv !_M_CEE_PURE vvv
; 39   : #ifdef _WIN64
; 40   :     _BitScanReverse64(&_Result, _Value);
; 41   : #else // ^^^ 64-bit ^^^ / vvv 32-bit vvv
; 42   :     _BitScanReverse(&_Result, _Value);

	bsr	eax, DWORD PTR __Value$[ebp]
	mov	DWORD PTR __Result$[ebp], eax

; 43   : #endif // 64 vs. 32-bit
; 44   : #endif // _M_CEE_PURE
; 45   : 
; 46   :     return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 47   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Floor_of_l
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Floor_of_l:
	DD	1
	DD	$LN4@Floor_of_l
$LN4@Floor_of_l:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Floor_of_l
$LN3@Floor_of_l:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?_Floor_of_log_2@std@@YAKI@Z ENDP			; std::_Floor_of_log_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 813  :     _NODISCARD __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$00@std@@YAII@Z	; std::_Get_size_of_n<1>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 815  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 811  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 802  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
tv78 = -208						; size = 4
$T1 = -200						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 274  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __29547EA8_xstddef
	call	@__CheckForDebuggerJustMyCode@4

; 275  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 276  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx

; 1269 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1270 :         _Ptr = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1271 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 1189 :     void _Orphan_me() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1190 :         if (_Myproxy) { // adopted, remove self from list

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN13@Orphan_me

; 1191 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
$LN2@Orphan_me:

; 1192 :             while (*_Pnext && *_Pnext != this) {

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_me
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN6@Orphan_me

; 1193 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx

; 1194 :             }

	jmp	SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1195 : 
; 1196 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN9@Orphan_me
	jmp	SHORT $LN4@Orphan_me
$LN9@Orphan_me:
	mov	esi, esp
	push	OFFSET ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1196					; 000004acH
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN14@Orphan_me
	int	3
$LN14@Orphan_me:
	mov	esi, esp
	push	0
	push	1196					; 000004acH
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
	push	OFFSET ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN9@Orphan_me
$LN4@Orphan_me:
	xor	eax, eax
	jne	SHORT $LN6@Orphan_me

; 1197 :             *_Pnext  = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1198 :             _Myproxy = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN13@Orphan_me:

; 1199 :         }
; 1200 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 1184 :     const _Container_base12* _Getcont() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 1186 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$1 = -48						; size = 4
__Lock$2 = -36						; size = 4
__Parent_proxy$3 = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 1156 :     void _Adopt(const _Container_base12* _Parent) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1157 :         if (_Parent) {

	cmp	DWORD PTR __Parent$[ebp], 0
	je	SHORT $LN2@Adopt

; 1158 :             // have a parent, do adoption
; 1159 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx

; 1160 : 
; 1161 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1162 :             if (_Myproxy != _Parent_proxy) { // change parentage

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN4@Adopt

; 1163 :                 _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1164 :                 _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1165 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 1166 :                 _Parent_proxy->_Myfirstiter = this;

	mov	eax, DWORD PTR __Parent_proxy$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1167 :                 _Myproxy                    = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx

; 1168 :             }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Adopt:

; 1169 : 
; 1170 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1171 :             _Myproxy = _Parent_proxy;
; 1172 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1173 :         } else {

	jmp	SHORT $LN5@Adopt
$LN2@Adopt:

; 1174 :             // no future parent, just disown current parent
; 1175 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1176 :             _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$1[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1177 :             _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1178 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1179 :             _Myproxy = nullptr;
; 1180 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1181 :         }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$1[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Adopt:

; 1182 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@Adopt:
	DD	2
	DD	$LN8@Adopt
$LN8@Adopt:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN6@Adopt
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN7@Adopt
$LN7@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN6@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 1149 :     ~_Iterator_base12() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1150 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1151 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1152 :         _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1153 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1154 :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Iterator_b:
	DD	1
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$1 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 1132 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1133 :         if (_Myproxy != _Right._Myproxy) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN2@operator

; 1134 :             if (_Right._Myproxy) {

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator

; 1135 :                 _Adopt(_Right._Myproxy->_Mycont);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 1136 :             } else { // becoming invalid, disown current parent

	jmp	SHORT $LN2@operator
$LN3@operator:

; 1137 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1138 :                 _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$1[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1139 :                 _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1140 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1141 :                 _Myproxy = nullptr;
; 1142 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1143 :             }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$1[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:

; 1144 :         }
; 1145 : 
; 1146 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1147 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@operator:
	DD	1
	DD	$LN7@operator
$LN7@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1128 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1129 :         *this = _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 1130 :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1126 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -36						; size = 4
__Lock$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx

; 1224 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1225 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1226 :     _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1227 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1228 : 
; 1229 :     _Container_proxy* _Temp = _Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx

; 1230 :     _Myproxy                = _Right._Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1231 :     _Right._Myproxy         = _Temp;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [eax], ecx

; 1232 : 
; 1233 :     if (_Myproxy) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Swap_proxy

; 1234 :         _Myproxy->_Mycont = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@Swap_proxy:

; 1235 :     }
; 1236 : 
; 1237 :     if (_Right._Myproxy) {

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Swap_proxy

; 1238 :         _Right._Myproxy->_Mycont = &_Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN3@Swap_proxy:

; 1239 :     }
; 1240 : }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Swap_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Swap_proxy:
	DD	1
	DD	$LN6@Swap_proxy
$LN6@Swap_proxy:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@Swap_proxy
$LN5@Swap_proxy:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -36						; size = 4
__Lock$2 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 1210 : inline void _Container_base12::_Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 1211 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1212 :     if (_Myproxy) { // proxy allocated, drain it

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_all

; 1213 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1214 : 
; 1215 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all

; 1216 :             (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1217 :         }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1218 : 
; 1219 :         _Myproxy->_Myfirstiter = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0

; 1220 :     }

	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Orphan_all:

; 1221 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1222 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Orphan_all:
	DD	1
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_all
$LN7@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 1097 :     _Container_base12() noexcept : _Myproxy(nullptr) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 1089 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 1077 :     void _Adopt(const void*) noexcept {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Convert_size@I@std@@YAII@Z
_TEXT	SEGMENT
__Len$ = 8						; size = 4
??$_Convert_size@I@std@@YAII@Z PROC			; std::_Convert_size<unsigned int>, COMDAT

; 995  : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 996  :     // convert size_t to size_t, unchanged
; 997  :     return _Len;

	mov	eax, DWORD PTR __Len$[ebp]

; 998  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Convert_size@I@std@@YAII@Z ENDP			; std::_Convert_size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -44					; size = 4
__Min_back_shift$ = -32					; size = 4
__Ptr_container$ = -20					; size = 4
__Ptr_user$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Adjust_man:

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN4@Adjust_man

; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	DWORD PTR __Min_back_shift$[ebp], 8

; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0GL@KFPMFPIC@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_1NG@FKHEBIAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN10@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax], ecx

; 153  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 76   :     __declspec(allocator) static void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B4DE8A79_xmemory
	call	@__CheckForDebuggerJustMyCode@4

; 77   :         return ::operator new(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 78   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -208						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8655F6A9_exception
	call	@__CheckForDebuggerJustMyCode@4

; 321  :     _THROW(bad_array_new_length{});

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:

; 322  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4

; 140  :         : bad_alloc("bad array new length")

	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 130  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4

; 129  :         : exception(_Message, 1)

	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 130  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 131  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 96   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 89   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_destroy
	add	esp, 4

; 91   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8

; 74   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 67   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 68   :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$ = -28					; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Message$ = 8						; size = 4
??0exception@std@@QAE@QBD@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 59   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __604808BE_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 58   :         : _Data()

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 60   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[ebp]
	mov	DWORD PTR __InitData$[ebp], eax
	mov	BYTE PTR __InitData$[ebp+4], 1

; 61   :         __std_exception_copy(&_InitData, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR __InitData$[ebp]
	push	ecx
	call	___std_exception_copy
	add	esp, 8

; 62   :     }

	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@exception
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@exception:
	DD	1
	DD	$LN4@exception
$LN4@exception:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN3@exception
$LN3@exception:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
??0exception@std@@QAE@QBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 556  :     _NODISCARD static constexpr int(max)() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A47FD3F7_limits
	call	@__CheckForDebuggerJustMyCode@4

; 557  :         return INT_MAX;

	mov	eax, 2147483647				; 7fffffffH

; 558  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 234  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __93DC0B45_wchar@h
	call	@__CheckForDebuggerJustMyCode@4

; 235  :         #pragma warning(suppress: 6386) // Buffer overrun
; 236  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 237  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceHandler.h
;	COMDAT ??0ResourceHandler@@QAE@$$QAV0@@Z
_TEXT	SEGMENT
tv88 = -208						; size = 4
tv76 = -208						; size = 4
_this$ = -8						; size = 4
_handler$ = 8						; size = 4
??0ResourceHandler@@QAE@$$QAV0@@Z PROC			; ResourceHandler::ResourceHandler, COMDAT
; _this$ = ecx

; 15   : 	ResourceHandler(ResourceHandler&& handler) : resource(handler.resource.load()), refCounter(handler.refCounter.load()) {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __FAF99A17_ResourceHandler@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR _handler$[ebp]
	call	?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ ; std::_Atomic_storage<Resource *,4>::load
	push	eax
	mov	ecx, DWORD PTR tv76[ebp]
	call	??0?$atomic@PAVResource@@@std@@QAE@QAVResource@@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR _handler$[ebp]
	add	ecx, 4
	call	?load@?$_Atomic_storage@I$03@std@@QBEIXZ ; std::_Atomic_storage<unsigned int,4>::load
	push	eax
	mov	ecx, DWORD PTR tv88[ebp]
	call	??0?$atomic@I@std@@QAE@I@Z

; 16   : 		handler.resource = nullptr;

	push	0
	mov	ecx, DWORD PTR _handler$[ebp]
	call	??4?$atomic@PAVResource@@@std@@QAEPAVResource@@QAV2@@Z ; std::atomic<Resource *>::operator=

; 17   : 		handler.refCounter = 0;

	push	0
	mov	ecx, DWORD PTR _handler$[ebp]
	add	ecx, 4
	call	??4?$atomic@I@std@@QAEII@Z		; std::atomic<unsigned int>::operator=

; 18   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0ResourceHandler@@QAE@$$QAV0@@Z ENDP			; ResourceHandler::ResourceHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceHandler.h
;	COMDAT ??0ResourceHandler@@QAE@XZ
_TEXT	SEGMENT
tv74 = -208						; size = 4
tv69 = -208						; size = 4
_this$ = -8						; size = 4
??0ResourceHandler@@QAE@XZ PROC				; ResourceHandler::ResourceHandler, COMDAT
; _this$ = ecx

; 13   : 	ResourceHandler() : resource(nullptr), refCounter(0) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __FAF99A17_ResourceHandler@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv69[ebp]
	call	??0?$atomic@PAVResource@@@std@@QAE@QAVResource@@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv74[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv74[ebp]
	call	??0?$atomic@I@std@@QAE@I@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ResourceHandler@@QAE@XZ ENDP				; ResourceHandler::ResourceHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$atomic@I@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
??0?$atomic@I@std@@QAE@I@Z PROC				; std::atomic<unsigned int>::atomic<unsigned int>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Atomic_integral_facade@I@std@@QAE@I@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$atomic@I@std@@QAE@I@Z ENDP				; std::atomic<unsigned int>::atomic<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ??4?$atomic@I@std@@QAEII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Value$ = 8						; size = 4
??4?$atomic@I@std@@QAEII@Z PROC				; std::atomic<unsigned int>::operator=, COMDAT
; _this$ = ecx

; 2199 :     _Ty operator=(const _Ty _Value) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 2200 :         this->store(_Value);

	mov	eax, DWORD PTR __Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?store@?$_Atomic_storage@I$03@std@@QAEXI@Z ; std::_Atomic_storage<unsigned int,4>::store

; 2201 :         return _Value;

	mov	eax, DWORD PTR __Value$[ebp]

; 2202 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$atomic@I@std@@QAEII@Z ENDP				; std::atomic<unsigned int>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Atomic_integral_facade@I@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
??0?$_Atomic_integral_facade@I@std@@QAE@I@Z PROC	; std::_Atomic_integral_facade<unsigned int>::_Atomic_integral_facade<unsigned int>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Atomic_integral@I$03@std@@QAE@I@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Atomic_integral_facade@I@std@@QAE@I@Z ENDP	; std::_Atomic_integral_facade<unsigned int>::_Atomic_integral_facade<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Atomic_integral@I$03@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
??0?$_Atomic_integral@I$03@std@@QAE@I@Z PROC		; std::_Atomic_integral<unsigned int,4>::_Atomic_integral<unsigned int,4>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Atomic_storage@I$03@std@@QAE@I@Z	; std::_Atomic_storage<unsigned int,4>::_Atomic_storage<unsigned int,4>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Atomic_integral@I$03@std@@QAE@I@Z ENDP		; std::_Atomic_integral<unsigned int,4>::_Atomic_integral<unsigned int,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ?load@?$_Atomic_storage@I$03@std@@QBEIXZ
_TEXT	SEGMENT
__As_bytes$ = -36					; size = 4
__Mem$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?load@?$_Atomic_storage@I$03@std@@QBEIXZ PROC		; std::_Atomic_storage<unsigned int,4>::load, COMDAT
; _this$ = ecx

; 913  :     _NODISCARD _TVal load() const noexcept { // load with sequential consistency

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 914  :         const auto _Mem = _Atomic_address_as<int>(_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Atomic_address_as@HU?$_Atomic_padded@I@std@@@std@@YAPDHABU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<int,std::_Atomic_padded<unsigned int> >
	add	esp, 4
	mov	DWORD PTR __Mem$[ebp], eax

; 915  :         auto _As_bytes  = __iso_volatile_load32(_Mem);

	mov	eax, DWORD PTR __Mem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __As_bytes$[ebp], ecx

; 916  :         _Compiler_or_memory_barrier();
; 917  :         return reinterpret_cast<_TVal&>(_As_bytes);

	mov	eax, DWORD PTR __As_bytes$[ebp]

; 918  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?load@?$_Atomic_storage@I$03@std@@QBEIXZ ENDP		; std::_Atomic_storage<unsigned int,4>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ?store@?$_Atomic_storage@I$03@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Value$ = 8						; size = 4
?store@?$_Atomic_storage@I$03@std@@QAEXI@Z PROC		; std::_Atomic_storage<unsigned int,4>::store, COMDAT
; _this$ = ecx

; 880  :     void store(const _TVal _Value) noexcept { // store with sequential consistency

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 881  : #if defined(_M_ARM) || defined(_M_ARM64)
; 882  :         _Memory_barrier();
; 883  :         __iso_volatile_store32(_Atomic_address_as<int>(_Storage), _Atomic_reinterpret_as<int>(_Value));
; 884  :         _Memory_barrier();
; 885  : #else // ^^^ ARM32/ARM64 hardware / x86/x64 hardware vvv
; 886  :         (void) _InterlockedExchange(_Atomic_address_as<long>(_Storage), _Atomic_reinterpret_as<long>(_Value));

	lea	eax, DWORD PTR __Value$[ebp]
	push	eax
	call	??$_Atomic_reinterpret_as@JI@std@@YAJABI@Z ; std::_Atomic_reinterpret_as<long,unsigned int>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPCJAAU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
	add	esp, 4
	xchg	DWORD PTR [eax], esi

; 887  : #endif // hardware
; 888  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?store@?$_Atomic_storage@I$03@std@@QAEXI@Z ENDP		; std::_Atomic_storage<unsigned int,4>::store
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ??0?$_Atomic_storage@I$03@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Value$ = 8						; size = 4
??0?$_Atomic_storage@I$03@std@@QAE@I@Z PROC		; std::_Atomic_storage<unsigned int,4>::_Atomic_storage<unsigned int,4>, COMDAT
; _this$ = ecx

; 876  :         : _Storage{_Value} {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Value$[ebp]
	mov	DWORD PTR [eax], ecx

; 877  :         // non-atomically initialize this atomic
; 878  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Atomic_storage@I$03@std@@QAE@I@Z ENDP		; std::_Atomic_storage<unsigned int,4>::_Atomic_storage<unsigned int,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$atomic@PAVResource@@@std@@QAE@QAVResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
??0?$atomic@PAVResource@@@std@@QAE@QAVResource@@@Z PROC	; std::atomic<Resource *>::atomic<Resource *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Atomic_pointer@PAVResource@@@std@@QAE@QAVResource@@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$atomic@PAVResource@@@std@@QAE@QAVResource@@@Z ENDP	; std::atomic<Resource *>::atomic<Resource *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ??4?$atomic@PAVResource@@@std@@QAEPAVResource@@QAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Value$ = 8						; size = 4
??4?$atomic@PAVResource@@@std@@QAEPAVResource@@QAV2@@Z PROC ; std::atomic<Resource *>::operator=, COMDAT
; _this$ = ecx

; 2199 :     _Ty operator=(const _Ty _Value) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 2200 :         this->store(_Value);

	mov	eax, DWORD PTR __Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?store@?$_Atomic_storage@PAVResource@@$03@std@@QAEXQAVResource@@@Z ; std::_Atomic_storage<Resource *,4>::store

; 2201 :         return _Value;

	mov	eax, DWORD PTR __Value$[ebp]

; 2202 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$atomic@PAVResource@@@std@@QAEPAVResource@@QAV2@@Z ENDP ; std::atomic<Resource *>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Atomic_pointer@PAVResource@@@std@@QAE@QAVResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___param0$ = 8						; size = 4
??0?$_Atomic_pointer@PAVResource@@@std@@QAE@QAVResource@@@Z PROC ; std::_Atomic_pointer<Resource *>::_Atomic_pointer<Resource *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Atomic_storage@PAVResource@@$03@std@@QAE@QAVResource@@@Z ; std::_Atomic_storage<Resource *,4>::_Atomic_storage<Resource *,4>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Atomic_pointer@PAVResource@@@std@@QAE@QAVResource@@@Z ENDP ; std::_Atomic_pointer<Resource *>::_Atomic_pointer<Resource *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ
_TEXT	SEGMENT
__As_bytes$ = -36					; size = 4
__Mem$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ PROC ; std::_Atomic_storage<Resource *,4>::load, COMDAT
; _this$ = ecx

; 913  :     _NODISCARD _TVal load() const noexcept { // load with sequential consistency

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 914  :         const auto _Mem = _Atomic_address_as<int>(_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >
	add	esp, 4
	mov	DWORD PTR __Mem$[ebp], eax

; 915  :         auto _As_bytes  = __iso_volatile_load32(_Mem);

	mov	eax, DWORD PTR __Mem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __As_bytes$[ebp], ecx

; 916  :         _Compiler_or_memory_barrier();
; 917  :         return reinterpret_cast<_TVal&>(_As_bytes);

	mov	eax, DWORD PTR __As_bytes$[ebp]

; 918  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ ENDP ; std::_Atomic_storage<Resource *,4>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ?store@?$_Atomic_storage@PAVResource@@$03@std@@QAEXQAVResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Value$ = 8						; size = 4
?store@?$_Atomic_storage@PAVResource@@$03@std@@QAEXQAVResource@@@Z PROC ; std::_Atomic_storage<Resource *,4>::store, COMDAT
; _this$ = ecx

; 880  :     void store(const _TVal _Value) noexcept { // store with sequential consistency

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 881  : #if defined(_M_ARM) || defined(_M_ARM64)
; 882  :         _Memory_barrier();
; 883  :         __iso_volatile_store32(_Atomic_address_as<int>(_Storage), _Atomic_reinterpret_as<int>(_Value));
; 884  :         _Memory_barrier();
; 885  : #else // ^^^ ARM32/ARM64 hardware / x86/x64 hardware vvv
; 886  :         (void) _InterlockedExchange(_Atomic_address_as<long>(_Storage), _Atomic_reinterpret_as<long>(_Value));

	lea	eax, DWORD PTR __Value$[ebp]
	push	eax
	call	??$_Atomic_reinterpret_as@JPAVResource@@@std@@YAJABQAVResource@@@Z ; std::_Atomic_reinterpret_as<long,Resource *>
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$_Atomic_address_as@JU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPCJAAU?$_Atomic_padded@PAVResource@@@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<Resource *> >
	add	esp, 4
	xchg	DWORD PTR [eax], esi

; 887  : #endif // hardware
; 888  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?store@?$_Atomic_storage@PAVResource@@$03@std@@QAEXQAVResource@@@Z ENDP ; std::_Atomic_storage<Resource *,4>::store
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ??0?$_Atomic_storage@PAVResource@@$03@std@@QAE@QAVResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Value$ = 8						; size = 4
??0?$_Atomic_storage@PAVResource@@$03@std@@QAE@QAVResource@@@Z PROC ; std::_Atomic_storage<Resource *,4>::_Atomic_storage<Resource *,4>, COMDAT
; _this$ = ecx

; 876  :         : _Storage{_Value} {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Value$[ebp]
	mov	DWORD PTR [eax], ecx

; 877  :         // non-atomically initialize this atomic
; 878  :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Atomic_storage@PAVResource@@$03@std@@QAE@QAVResource@@@Z ENDP ; std::_Atomic_storage<Resource *,4>::_Atomic_storage<Resource *,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xthreads.h
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
__Res$ = 8						; size = 4
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 129  : inline int _Check_C_return(int _Res) { // throw exception on failure

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __CBA6A69C_xthreads@h
	call	@__CheckForDebuggerJustMyCode@4

; 130  :     if (_Res != _Thrd_success) {

	cmp	DWORD PTR __Res$[ebp], 0
	je	SHORT $LN2@Check_C_re

; 131  :         _Throw_C_error(_Res);

	mov	eax, DWORD PTR __Res$[ebp]
	push	eax
	call	?_Throw_C_error@std@@YAXH@Z		; std::_Throw_C_error
$LN2@Check_C_re:

; 132  :     }
; 133  : 
; 134  :     return _Res;

	mov	eax, DWORD PTR __Res$[ebp]
$LN3@Check_C_re:

; 135  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\type_traits
;	COMDAT ?_Fnv1a_append_bytes@std@@YAIIQBEI@Z
_TEXT	SEGMENT
__Idx$1 = -8						; size = 4
__Val$ = 8						; size = 4
__First$ = 12						; size = 4
__Count$ = 16						; size = 4
?_Fnv1a_append_bytes@std@@YAIIQBEI@Z PROC		; std::_Fnv1a_append_bytes, COMDAT

; 2147 :     const size_t _Count) noexcept { // accumulate range [_First, _First + _Count) into partial FNV-1a hash _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __77E6CA79_type_traits
	call	@__CheckForDebuggerJustMyCode@4

; 2148 :     for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {

	mov	DWORD PTR __Idx$1[ebp], 0
	jmp	SHORT $LN4@Fnv1a_appe
$LN2@Fnv1a_appe:
	mov	eax, DWORD PTR __Idx$1[ebp]
	add	eax, 1
	mov	DWORD PTR __Idx$1[ebp], eax
$LN4@Fnv1a_appe:
	mov	eax, DWORD PTR __Idx$1[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@Fnv1a_appe

; 2149 :         _Val ^= static_cast<size_t>(_First[_Idx]);

	mov	eax, DWORD PTR __First$[ebp]
	add	eax, DWORD PTR __Idx$1[ebp]
	movzx	ecx, BYTE PTR [eax]
	xor	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR __Val$[ebp], ecx

; 2150 :         _Val *= _FNV_prime;

	imul	eax, DWORD PTR __Val$[ebp], 16777619
	mov	DWORD PTR __Val$[ebp], eax

; 2151 :     }

	jmp	SHORT $LN2@Fnv1a_appe
$LN3@Fnv1a_appe:

; 2152 : 
; 2153 :     return _Val;

	mov	eax, DWORD PTR __Val$[ebp]

; 2154 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Fnv1a_append_bytes@std@@YAIIQBEI@Z ENDP		; std::_Fnv1a_append_bytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv74 = -196						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 641  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __741AE07E_corecrt_math@h
	call	@__CheckForDebuggerJustMyCode@4

; 642  :             return (float)ceil(_X);

	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	mov	esi, esp
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__ceil
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR tv74[ebp]
	fld	DWORD PTR tv74[ebp]

; 643  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceName.h
;	COMDAT ?c_str@ResourceName@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@ResourceName@@QBEPBDXZ PROC			; ResourceName::c_str, COMDAT
; _this$ = ecx

; 23   : 	const ResourceNameCharType* c_str() const { return name; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __2A0FE41E_ResourceName@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@ResourceName@@QBEPBDXZ ENDP			; ResourceName::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 167  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8B404B8B_vcruntime_new@h
	call	@__CheckForDebuggerJustMyCode@4

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 170  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceManager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __5D8615C2_ResourceManager@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
