; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__8B404B8B_vcruntime_new@h DB 01H
__3C2D1DF9_Resource@h DB 01H
__2A0FE41E_ResourceName@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__4C8DB69C_cstddef DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__E9466C31_cstdlib DB 01H
__77E6CA79_type_traits DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__A0B61CF9_time@h DB 01H
__CBA6A69C_xthreads@h DB 01H
__CF4A8F35_atomic DB 01H
__FAF99A17_ResourceHandler@h DB 01H
__415253A4_cmath DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__A47FD3F7_limits DB 01H
__20BB4341_malloc@h DB 01H
__604808BE_vcruntime_exception@h DB 01H
__8655F6A9_exception DB 01H
__DEE7E6EF_xutility DB 01H
__B4DE8A79_xmemory DB 01H
__E7714AE5_tuple DB 01H
__EA01D114_xpolymorphic_allocator@h DB 01H
__7EACF2A1_xbit_ops@h DB 01H
__C00D0CE5_xstring DB 01H
__2EFD93C2_xhash DB 01H
__2DE1CA0A_ratio DB 01H
__C092D57D_chrono DB 01H
__0F1BCCF4_stdexcept DB 01H
__C1F7FE2D_xcall_once@h DB 01H
__7EAAEC0D_system_error DB 01H
__EC89C42C_vcruntime_typeinfo@h DB 01H
__AE3815F6_typeinfo DB 01H
__18D1DF79_memory DB 01H
__C39CA7CF_thread DB 01H
__3F4CC05A_mutex DB 01H
__E14E63B0_Main@cpp DB 01H
__DE4BE9BA_utility DB 01H
__29547EA8_xstddef DB 01H
__9CA0F463_ResourceReference@h DB 01H
__8C597A7F_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?getData@DefaultResource@@QAEPAXXZ		; DefaultResource::getData
PUBLIC	?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ ; std::_Atomic_storage<Resource *,4>::load
PUBLIC	?getResource@ResourceHandler@@QAEPAVResource@@XZ ; ResourceHandler::getResource
PUBLIC	_main
PUBLIC	??$getResource@VDefaultResource@@@ResourceReference@@QAEAAVDefaultResource@@XZ ; ResourceReference::getResource<DefaultResource>
PUBLIC	??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_04OFFCAMCD@Test@				; `string'
EXTRN	??0ResourceName@@QAE@PBD@Z:PROC			; ResourceName::ResourceName
EXTRN	??1ResourceReference@@QAE@XZ:PROC		; ResourceReference::~ResourceReference
EXTRN	?get@ResourceManager@@SAAAV1@XZ:PROC		; ResourceManager::get
EXTRN	?init@ResourceManager@@QAE_NXZ:PROC		; ResourceManager::init
EXTRN	?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z:PROC ; ResourceManager::getResourceFromArchive
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_04OFFCAMCD@Test@
CONST	SEGMENT
??_C@_04OFFCAMCD@Test@ DB 'Test', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
__ehfuncinfo$_main DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z
_TEXT	SEGMENT
__Source$ = 8						; size = 4
??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z PROC ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >, COMDAT

; 101  : _NODISCARD const volatile _Integral* _Atomic_address_as(const _Ty& _Source) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __8C597A7F_xatomic@h
	call	@__CheckForDebuggerJustMyCode@4

; 102  :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 103  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 104  :     return &reinterpret_cast<const volatile _Integral&>(_Source);

	mov	eax, DWORD PTR __Source$[ebp]

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z ENDP ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceReference.h
;	COMDAT ??$getResource@VDefaultResource@@@ResourceReference@@QAEAAVDefaultResource@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??$getResource@VDefaultResource@@@ResourceReference@@QAEAAVDefaultResource@@XZ PROC ; ResourceReference::getResource<DefaultResource>, COMDAT
; _this$ = ecx

; 21   : inline T& ResourceReference::getResource() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9CA0F463_ResourceReference@h
	call	@__CheckForDebuggerJustMyCode@4

; 22   : 	return *(T*)(handler.getResource());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getResource@ResourceHandler@@QAEPAVResource@@XZ ; ResourceHandler::getResource

; 23   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$getResource@VDefaultResource@@@ResourceReference@@QAEAAVDefaultResource@@XZ ENDP ; ResourceReference::getResource<DefaultResource>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\Main.cpp
;	COMDAT _main
_TEXT	SEGMENT
$T2 = -516						; size = 4
$T3 = -504						; size = 256
_fileData$ = -48					; size = 4
_testFile$ = -36					; size = 4
_resourceManager$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

; 3    : int main() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __E14E63B0_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 4    : 	ResourceManager& resourceManager = ResourceManager::get();

	call	?get@ResourceManager@@SAAAV1@XZ		; ResourceManager::get
	mov	DWORD PTR _resourceManager$[ebp], eax

; 5    : 	resourceManager.init();

	mov	ecx, DWORD PTR _resourceManager$[ebp]
	call	?init@ResourceManager@@QAE_NXZ		; ResourceManager::init

; 6    : 
; 7    : 	ResourceReference testFile =  resourceManager.getResourceFromArchive("Test");

	push	OFFSET ??_C@_04OFFCAMCD@Test@
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0ResourceName@@QAE@PBD@Z		; ResourceName::ResourceName
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _testFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _resourceManager$[ebp]
	call	?getResourceFromArchive@ResourceManager@@QAE?AVResourceReference@@ABVResourceName@@@Z ; ResourceManager::getResourceFromArchive
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 8    : 	char* fileData = (char*)(testFile.getResource<DefaultResource>().getData());

	lea	ecx, DWORD PTR _testFile$[ebp]
	call	??$getResource@VDefaultResource@@@ResourceReference@@QAEAAVDefaultResource@@XZ ; ResourceReference::getResource<DefaultResource>
	mov	ecx, eax
	call	?getData@DefaultResource@@QAEPAXXZ	; DefaultResource::getData
	mov	DWORD PTR _fileData$[ebp], eax

; 9    : 
; 10   : 	return 0;

	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _testFile$[ebp]
	call	??1ResourceReference@@QAE@XZ		; ResourceReference::~ResourceReference
	mov	eax, DWORD PTR $T2[ebp]

; 11   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@main:
	DD	1
	DD	$LN6@main
$LN6@main:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN4@main
$LN4@main:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _testFile$[ebp]
	jmp	??1ResourceReference@@QAE@XZ		; ResourceReference::~ResourceReference
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$_main:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-524]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\ResourceHandler.h
;	COMDAT ?getResource@ResourceHandler@@QAEPAVResource@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getResource@ResourceHandler@@QAEPAVResource@@XZ PROC	; ResourceHandler::getResource, COMDAT
; _this$ = ecx

; 20   : 	Resource* getResource() { return resource.load(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __FAF99A17_ResourceHandler@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ ; std::_Atomic_storage<Resource *,4>::load
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getResource@ResourceHandler@@QAEPAVResource@@XZ ENDP	; ResourceHandler::getResource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.28.29333\include\atomic
;	COMDAT ?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ
_TEXT	SEGMENT
__As_bytes$ = -36					; size = 4
__Mem$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ PROC ; std::_Atomic_storage<Resource *,4>::load, COMDAT
; _this$ = ecx

; 913  :     _NODISCARD _TVal load() const noexcept { // load with sequential consistency

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __CF4A8F35_atomic
	call	@__CheckForDebuggerJustMyCode@4

; 914  :         const auto _Mem = _Atomic_address_as<int>(_Storage);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$_Atomic_address_as@HU?$_Atomic_padded@PAVResource@@@std@@@std@@YAPDHABU?$_Atomic_padded@PAVResource@@@0@@Z ; std::_Atomic_address_as<int,std::_Atomic_padded<Resource *> >
	add	esp, 4
	mov	DWORD PTR __Mem$[ebp], eax

; 915  :         auto _As_bytes  = __iso_volatile_load32(_Mem);

	mov	eax, DWORD PTR __Mem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __As_bytes$[ebp], ecx

; 916  :         _Compiler_or_memory_barrier();
; 917  :         return reinterpret_cast<_TVal&>(_As_bytes);

	mov	eax, DWORD PTR __As_bytes$[ebp]

; 918  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?load@?$_Atomic_storage@PAVResource@@$03@std@@QBEPAVResource@@XZ ENDP ; std::_Atomic_storage<Resource *,4>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\ResourceManager\Resource.h
;	COMDAT ?getData@DefaultResource@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getData@DefaultResource@@QAEPAXXZ PROC			; DefaultResource::getData, COMDAT
; _this$ = ecx

; 24   : 	void* getData() { return data; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3C2D1DF9_Resource@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getData@DefaultResource@@QAEPAXXZ ENDP			; DefaultResource::getData
_TEXT	ENDS
END
