; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__B2D2BA86_ctype@h DB 01H
__79C7FC57_basetsd@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__D545DD43_guiddef@h DB 01H
__D5DDFBF3_winnt@h DB 01H
__439612F0_processthreadsapi@h DB 01H
__5733279A_memoryapi@h DB 01H
__D4435474_winerror@h DB 01H
__B3ED30D4_winbase@h DB 01H
__DB057BA3_winuser@h DB 01H
__A7113148_winioctl@h DB 01H
__B49664B7_stdlib@h DB 01H
__EC5BC72C_propidl@h DB 01H
__6DA674A0_oleauto@h DB 01H
__A118E6DC_stralign@h DB 01H
__1E01F8EA_Heap@h DB 01H
__8B404B8B_vcruntime_new@h DB 01H
__64989862_Heap@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??0Heap@@QAE@$$QAV0@@Z				; Heap::Heap
PUBLIC	??4Heap@@QAEAAV0@$$QAV0@@Z			; Heap::operator=
PUBLIC	?init@Heap@@QAE_NXZ				; Heap::init
PUBLIC	?release@Heap@@QAEXXZ				; Heap::release
PUBLIC	?allocate@Heap@@QAEPAXI@Z			; Heap::allocate
PUBLIC	?reallocate@Heap@@QAEPAXPAXI@Z			; Heap::reallocate
PUBLIC	?deallocate@Heap@@QAEXPAX@Z			; Heap::deallocate
PUBLIC	?getMemSize@Heap@@QAEIPAX@Z			; Heap::getMemSize
PUBLIC	__JustMyCode_Default
PUBLIC	?__LINE__Var@?0??init@Heap@@QAE_NXZ@4JA		; `Heap::init'::`1'::__LINE__Var
PUBLIC	??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@ ; `string'
PUBLIC	??_C@_1BA@EOCBLNKM@?$AA?$CB?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??release@Heap@@QAEXXZ@4JA	; `Heap::release'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@MGDKCDEL@?$AAd?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs?$AAu?$AAl@ ; `string'
PUBLIC	?__LINE__Var@?0??reallocate@Heap@@QAEPAXPAXI@Z@4JA ; `Heap::reallocate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??deallocate@Heap@@QAEXPAX@Z@4JA	; `Heap::deallocate'::`1'::__LINE__Var
PUBLIC	??_C@_1CG@FIBMBGIJ@?$AAd?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?0??getMemSize@Heap@@QAEIPAX@Z@4JA	; `Heap::getMemSize'::`1'::__LINE__Var
EXTRN	__imp__HeapCreate@12:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapReAlloc@16:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapSize@12:PROC
EXTRN	__imp___wassert:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ?__LINE__Var@?0??getMemSize@Heap@@QAEIPAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??getMemSize@Heap@@QAEIPAX@Z@4JA DD 033H	; `Heap::getMemSize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@FIBMBGIJ@?$AAd?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs@
CONST	SEGMENT
??_C@_1CG@FIBMBGIJ@?$AAd?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs@ DB 'd'
	DB	00H, 'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??deallocate@Heap@@QAEXPAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??deallocate@Heap@@QAEXPAX@Z@4JA DD 02dH	; `Heap::deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reallocate@Heap@@QAEPAXPAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reallocate@Heap@@QAEPAXPAXI@Z@4JA DD 028H ; `Heap::reallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@MGDKCDEL@?$AAd?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs?$AAu?$AAl@
CONST	SEGMENT
??_C@_1CC@MGDKCDEL@?$AAd?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs?$AAu?$AAl@ DB 'd'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'y', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'u'
	DB	00H, 'l', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??release@Heap@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??release@Heap@@QAEXXZ@4JA DD 01cH	; `Heap::release'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
CONST	SEGMENT
??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@ DB 'h', 00H, 'a', 00H, 'n'
	DB	00H, 'd', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@EOCBLNKM@?$AA?$CB?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
CONST	SEGMENT
??_C@_1BA@EOCBLNKM@?$AA?$CB?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@ DB '!', 00H, 'h'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
CONST	SEGMENT
??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 't', 00H, 'i', 00H, 'm', 00H, '2', 00H, '3'
	DB	00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'V', 00H, 'i'
	DB	00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'S', 00H
	DB	't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '2'
	DB	00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 's', 00H, '\'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'j', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, '2', 00H, 'D', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '2', 00H, 'D', 00H
	DB	'\', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'M', 00H, 'a', 00H, 'n', 00H, 'a', 00H, 'g', 00H, 'e', 00H
	DB	'r', 00H, '\', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'p', 00H, '.'
	DB	00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??init@Heap@@QAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??init@Heap@@QAE_NXZ@4JA DD 014H		; `Heap::init'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ?getMemSize@Heap@@QAEIPAX@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
?getMemSize@Heap@@QAEIPAX@Z PROC			; Heap::getMemSize, COMDAT
; _this$ = ecx

; 51   : size_t Heap::getMemSize(void* mem) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 52   :     assert(handle);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@getMemSize
	mov	ecx, DWORD PTR ?__LINE__Var@?0??getMemSize@Heap@@QAEIPAX@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getMemSize:

; 53   :     return HeapSize(handle, NULL, mem);

	mov	esi, esp
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__HeapSize@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 54   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getMemSize@Heap@@QAEIPAX@Z ENDP			; Heap::getMemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ?deallocate@Heap@@QAEXPAX@Z
_TEXT	SEGMENT
tv70 = -217						; size = 1
_deallocatingResult$ = -17				; size = 1
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
?deallocate@Heap@@QAEXPAX@Z PROC			; Heap::deallocate, COMDAT
; _this$ = ecx

; 45   : void Heap::deallocate(void* mem) {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 46   :     //assert(handle);
; 47   :     bool deallocatingResult = HeapFree(handle, NULL, mem);

	mov	esi, esp
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__HeapFree@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@deallocate
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN4@deallocate
$LN3@deallocate:
	mov	BYTE PTR tv70[ebp], 0
$LN4@deallocate:
	mov	al, BYTE PTR tv70[ebp]
	mov	BYTE PTR _deallocatingResult$[ebp], al

; 48   :     assert(deallocatingResult);

	movzx	eax, BYTE PTR _deallocatingResult$[ebp]
	test	eax, eax
	jne	SHORT $LN1@deallocate
	mov	ecx, DWORD PTR ?__LINE__Var@?0??deallocate@Heap@@QAEXPAX@Z@4JA
	add	ecx, 3
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1CG@FIBMBGIJ@?$AAd?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@deallocate:

; 49   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?deallocate@Heap@@QAEXPAX@Z ENDP			; Heap::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ?reallocate@Heap@@QAEPAXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_elementNum$ = 12					; size = 4
?reallocate@Heap@@QAEPAXPAXI@Z PROC			; Heap::reallocate, COMDAT
; _this$ = ecx

; 40   : void* Heap::reallocate(void* mem, size_t elementNum) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 41   :     assert(handle);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@reallocate
	mov	ecx, DWORD PTR ?__LINE__Var@?0??reallocate@Heap@@QAEPAXPAXI@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@reallocate:

; 42   :     return HeapReAlloc(handle, NULL, mem, elementNum);

	mov	esi, esp
	mov	eax, DWORD PTR _elementNum$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__HeapReAlloc@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 43   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reallocate@Heap@@QAEPAXPAXI@Z ENDP			; Heap::reallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ?allocate@Heap@@QAEPAXI@Z
_TEXT	SEGMENT
_m$ = -20						; size = 4
_this$ = -8						; size = 4
_elementNum$ = 8					; size = 4
?allocate@Heap@@QAEPAXI@Z PROC				; Heap::allocate, COMDAT
; _this$ = ecx

; 34   : void* Heap::allocate(size_t elementNum) {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 35   :     //assert(handle);
; 36   :     void* m = HeapAlloc(handle, NULL, elementNum);

	mov	esi, esp
	mov	eax, DWORD PTR _elementNum$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__HeapAlloc@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _m$[ebp], eax

; 37   :     return m;

	mov	eax, DWORD PTR _m$[ebp]

; 38   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@Heap@@QAEPAXI@Z ENDP				; Heap::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ?release@Heap@@QAEXXZ
_TEXT	SEGMENT
tv75 = -217						; size = 1
_destroyingResult$ = -17				; size = 1
_this$ = -8						; size = 4
?release@Heap@@QAEXXZ PROC				; Heap::release, COMDAT
; _this$ = ecx

; 28   : void Heap::release() {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 29   :     assert(handle);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@release
	mov	ecx, DWORD PTR ?__LINE__Var@?0??release@Heap@@QAEXXZ@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@release:

; 30   :     bool destroyingResult = HeapDestroy(handle);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__HeapDestroy@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@release
	mov	BYTE PTR tv75[ebp], 1
	jmp	SHORT $LN5@release
$LN4@release:
	mov	BYTE PTR tv75[ebp], 0
$LN5@release:
	mov	dl, BYTE PTR tv75[ebp]
	mov	BYTE PTR _destroyingResult$[ebp], dl

; 31   :     assert(destroyingResult);

	movzx	eax, BYTE PTR _destroyingResult$[ebp]
	test	eax, eax
	jne	SHORT $LN1@release
	mov	ecx, DWORD PTR ?__LINE__Var@?0??release@Heap@@QAEXXZ@4JA
	add	ecx, 3
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1CC@MGDKCDEL@?$AAd?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AAi?$AAn?$AAg?$AAR?$AAe?$AAs?$AAu?$AAl@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@release:

; 32   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release@Heap@@QAEXXZ ENDP				; Heap::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ?init@Heap@@QAE_NXZ
_TEXT	SEGMENT
tv85 = -205						; size = 1
_this$ = -8						; size = 4
?init@Heap@@QAE_NXZ PROC				; Heap::init, COMDAT
; _this$ = ecx

; 20   : bool Heap::init() {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 21   :     assert(!handle);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@init
	mov	ecx, DWORD PTR ?__LINE__Var@?0??init@Heap@@QAE_NXZ@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1BA@EOCBLNKM@?$AA?$CB?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@init:

; 22   :     handle = HeapCreate(NULL, 0, 0);

	mov	esi, esp
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__HeapCreate@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 23   :     assert(handle);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@init
	mov	ecx, DWORD PTR ?__LINE__Var@?0??init@Heap@@QAE_NXZ@4JA
	add	ecx, 3
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1MA@GLHDPIIF@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAt?$AAi?$AAm?$AA2?$AA3?$AA?2@
	push	OFFSET ??_C@_1O@MKHGGFNC@?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@init:

; 24   : 
; 25   :     return handle;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@init
	mov	BYTE PTR tv85[ebp], 1
	jmp	SHORT $LN6@init
$LN5@init:
	mov	BYTE PTR tv85[ebp], 0
$LN6@init:
	mov	al, BYTE PTR tv85[ebp]

; 26   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@Heap@@QAE_NXZ ENDP				; Heap::init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ??4Heap@@QAEAAV0@$$QAV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_heap$ = 8						; size = 4
??4Heap@@QAEAAV0@$$QAV0@@Z PROC				; Heap::operator=, COMDAT
; _this$ = ecx

; 10   : Heap& Heap::operator=(Heap&& heap) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 11   :     if (handle)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator

; 12   :         release();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?release@Heap@@QAEXXZ			; Heap::release
$LN2@operator:

; 13   : 
; 14   :     handle = heap.handle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _heap$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 15   :     heap.handle = NULL;

	mov	eax, DWORD PTR _heap$[ebp]
	mov	DWORD PTR [eax], 0

; 16   : 
; 17   :     return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 18   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Heap@@QAEAAV0@$$QAV0@@Z ENDP				; Heap::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.h
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp
;	COMDAT ??0Heap@@QAE@$$QAV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_heap$ = 8						; size = 4
??0Heap@@QAE@$$QAV0@@Z PROC				; Heap::Heap, COMDAT
; _this$ = ecx

; 5    : Heap::Heap(Heap&& heap) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __64989862_Heap@cpp
	call	@__CheckForDebuggerJustMyCode@4
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.h

; 11   : 	HANDLE handle = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Heap.cpp

; 6    :     handle = heap.handle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _heap$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 7    :     heap.handle = NULL;

	mov	eax, DWORD PTR _heap$[ebp]
	mov	DWORD PTR [eax], 0

; 8    : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0Heap@@QAE@$$QAV0@@Z ENDP				; Heap::Heap
_TEXT	ENDS
END
