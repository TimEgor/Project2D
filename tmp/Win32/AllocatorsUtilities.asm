; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Allocators\AllocatorsUtilities.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__C0870CDD_AllocatorsUtilities@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?getAdjustment@@YAIABI0@Z			; getAdjustment
PUBLIC	?align@@YAXAAIABI@Z				; align
PUBLIC	__JustMyCode_Default
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Allocators\AllocatorsUtilities.cpp
;	COMDAT ?align@@YAXAAIABI@Z
_TEXT	SEGMENT
_adjustment$ = -8					; size = 4
_size$ = 8						; size = 4
_alignment$ = 12					; size = 4
?align@@YAXAAIABI@Z PROC				; align, COMDAT

; 7    : void align(size_t& size, const size_t& alignment) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C0870CDD_AllocatorsUtilities@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 8    : 	size_t adjustment = getAdjustment(size, alignment);

	mov	eax, DWORD PTR _alignment$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	?getAdjustment@@YAIABI0@Z		; getAdjustment
	add	esp, 8
	mov	DWORD PTR _adjustment$[ebp], eax

; 9    : 	if (adjustment != alignment)

	mov	eax, DWORD PTR _alignment$[ebp]
	mov	ecx, DWORD PTR _adjustment$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN1@align

; 10   : 		size += adjustment;

	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _adjustment$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@align:

; 11   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?align@@YAXAAIABI@Z ENDP				; align
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\tim23\Documents\Visual Studio 2019\Projects\Project2D\Project2D\MemoryManager\Allocators\AllocatorsUtilities.cpp
;	COMDAT ?getAdjustment@@YAIABI0@Z
_TEXT	SEGMENT
_size$ = 8						; size = 4
_alignment$ = 12					; size = 4
?getAdjustment@@YAIABI0@Z PROC				; getAdjustment, COMDAT

; 3    : size_t getAdjustment(const size_t& size, const size_t& alignment) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __C0870CDD_AllocatorsUtilities@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 4    : 	return alignment - (size & (alignment - 1));

	mov	eax, DWORD PTR _alignment$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _size$[ebp]
	and	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _alignment$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, ecx

; 5    : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getAdjustment@@YAIABI0@Z ENDP				; getAdjustment
_TEXT	ENDS
END
